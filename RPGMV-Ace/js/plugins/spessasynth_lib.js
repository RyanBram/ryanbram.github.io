"use strict";var SpessaSynthLib=(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __require=/* @__PURE__ */(x=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(x,{get:(a,b)=>(typeof require!=="undefined"?require:a)[b]}):x)(function(x){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+x+'" is not supported');});var __commonJS=(cb,mod)=>function __require3(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports;};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true});};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});}return to;};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(// If the importer is in node compatibility mode or this is not an ESM
// file that has been converted to a CommonJS file using a Babel-
// compatible transform (i.e. "__esModule" has not been set), then set
// "default" to the CommonJS "module.exports" for node compatibility.
isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);// node_modules/core-js/internals/global-this.js
var require_global_this=__commonJS({"node_modules/core-js/internals/global-this.js"(exports,module2){"use strict";var check=function(it){return it&&it.Math===Math&&it;};module2.exports=// eslint-disable-next-line es/no-global-this -- safe
check(typeof globalThis=="object"&&globalThis)||check(typeof window=="object"&&window)||// eslint-disable-next-line no-restricted-globals -- safe
check(typeof self=="object"&&self)||check(typeof global=="object"&&global)||check(typeof exports=="object"&&exports)||// eslint-disable-next-line no-new-func -- fallback
/* @__PURE__ */function(){return this;}()||Function("return this")();}});// node_modules/core-js/internals/fails.js
var require_fails=__commonJS({"node_modules/core-js/internals/fails.js"(exports,module2){"use strict";module2.exports=function(exec){try{return!!exec();}catch(error){return true;}};}});// node_modules/core-js/internals/descriptors.js
var require_descriptors=__commonJS({"node_modules/core-js/internals/descriptors.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=!fails(function(){return Object.defineProperty({},1,{get:function(){return 7;}})[1]!==7;});}});// node_modules/core-js/internals/function-bind-native.js
var require_function_bind_native=__commonJS({"node_modules/core-js/internals/function-bind-native.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=!fails(function(){var test=function(){}.bind();return typeof test!="function"||test.hasOwnProperty("prototype");});}});// node_modules/core-js/internals/function-call.js
var require_function_call=__commonJS({"node_modules/core-js/internals/function-call.js"(exports,module2){"use strict";var NATIVE_BIND=require_function_bind_native();var call=Function.prototype.call;module2.exports=NATIVE_BIND?call.bind(call):function(){return call.apply(call,arguments);};}});// node_modules/core-js/internals/object-property-is-enumerable.js
var require_object_property_is_enumerable=__commonJS({"node_modules/core-js/internals/object-property-is-enumerable.js"(exports){"use strict";var $propertyIsEnumerable={}.propertyIsEnumerable;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var NASHORN_BUG=getOwnPropertyDescriptor&&!$propertyIsEnumerable.call({1:2},1);exports.f=NASHORN_BUG?function propertyIsEnumerable(V){var descriptor=getOwnPropertyDescriptor(this,V);return!!descriptor&&descriptor.enumerable;}:$propertyIsEnumerable;}});// node_modules/core-js/internals/create-property-descriptor.js
var require_create_property_descriptor=__commonJS({"node_modules/core-js/internals/create-property-descriptor.js"(exports,module2){"use strict";module2.exports=function(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value};};}});// node_modules/core-js/internals/function-uncurry-this.js
var require_function_uncurry_this=__commonJS({"node_modules/core-js/internals/function-uncurry-this.js"(exports,module2){"use strict";var NATIVE_BIND=require_function_bind_native();var FunctionPrototype=Function.prototype;var call=FunctionPrototype.call;var uncurryThisWithBind=NATIVE_BIND&&FunctionPrototype.bind.bind(call,call);module2.exports=NATIVE_BIND?uncurryThisWithBind:function(fn){return function(){return call.apply(fn,arguments);};};}});// node_modules/core-js/internals/classof-raw.js
var require_classof_raw=__commonJS({"node_modules/core-js/internals/classof-raw.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var toString=uncurryThis({}.toString);var stringSlice=uncurryThis("".slice);module2.exports=function(it){return stringSlice(toString(it),8,-1);};}});// node_modules/core-js/internals/indexed-object.js
var require_indexed_object=__commonJS({"node_modules/core-js/internals/indexed-object.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var fails=require_fails();var classof=require_classof_raw();var $Object=Object;var split=uncurryThis("".split);module2.exports=fails(function(){return!$Object("z").propertyIsEnumerable(0);})?function(it){return classof(it)==="String"?split(it,""):$Object(it);}:$Object;}});// node_modules/core-js/internals/is-null-or-undefined.js
var require_is_null_or_undefined=__commonJS({"node_modules/core-js/internals/is-null-or-undefined.js"(exports,module2){"use strict";module2.exports=function(it){return it===null||it===void 0;};}});// node_modules/core-js/internals/require-object-coercible.js
var require_require_object_coercible=__commonJS({"node_modules/core-js/internals/require-object-coercible.js"(exports,module2){"use strict";var isNullOrUndefined=require_is_null_or_undefined();var $TypeError=TypeError;module2.exports=function(it){if(isNullOrUndefined(it))throw new $TypeError("Can't call method on "+it);return it;};}});// node_modules/core-js/internals/to-indexed-object.js
var require_to_indexed_object=__commonJS({"node_modules/core-js/internals/to-indexed-object.js"(exports,module2){"use strict";var IndexedObject=require_indexed_object();var requireObjectCoercible=require_require_object_coercible();module2.exports=function(it){return IndexedObject(requireObjectCoercible(it));};}});// node_modules/core-js/internals/is-callable.js
var require_is_callable=__commonJS({"node_modules/core-js/internals/is-callable.js"(exports,module2){"use strict";var documentAll=typeof document=="object"&&document.all;module2.exports=typeof documentAll=="undefined"&&documentAll!==void 0?function(argument){return typeof argument=="function"||argument===documentAll;}:function(argument){return typeof argument=="function";};}});// node_modules/core-js/internals/is-object.js
var require_is_object=__commonJS({"node_modules/core-js/internals/is-object.js"(exports,module2){"use strict";var isCallable=require_is_callable();module2.exports=function(it){return typeof it=="object"?it!==null:isCallable(it);};}});// node_modules/core-js/internals/get-built-in.js
var require_get_built_in=__commonJS({"node_modules/core-js/internals/get-built-in.js"(exports,module2){"use strict";var globalThis2=require_global_this();var isCallable=require_is_callable();var aFunction=function(argument){return isCallable(argument)?argument:void 0;};module2.exports=function(namespace,method){return arguments.length<2?aFunction(globalThis2[namespace]):globalThis2[namespace]&&globalThis2[namespace][method];};}});// node_modules/core-js/internals/object-is-prototype-of.js
var require_object_is_prototype_of=__commonJS({"node_modules/core-js/internals/object-is-prototype-of.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();module2.exports=uncurryThis({}.isPrototypeOf);}});// node_modules/core-js/internals/environment-user-agent.js
var require_environment_user_agent=__commonJS({"node_modules/core-js/internals/environment-user-agent.js"(exports,module2){"use strict";var globalThis2=require_global_this();var navigator2=globalThis2.navigator;var userAgent=navigator2&&navigator2.userAgent;module2.exports=userAgent?String(userAgent):"";}});// node_modules/core-js/internals/environment-v8-version.js
var require_environment_v8_version=__commonJS({"node_modules/core-js/internals/environment-v8-version.js"(exports,module2){"use strict";var globalThis2=require_global_this();var userAgent=require_environment_user_agent();var process2=globalThis2.process;var Deno2=globalThis2.Deno;var versions=process2&&process2.versions||Deno2&&Deno2.version;var v8=versions&&versions.v8;var match;var version;if(v8){match=v8.split(".");version=match[0]>0&&match[0]<4?1:+(match[0]+match[1]);}if(!version&&userAgent){match=userAgent.match(/Edge\/(\d+)/);if(!match||match[1]>=74){match=userAgent.match(/Chrome\/(\d+)/);if(match)version=+match[1];}}module2.exports=version;}});// node_modules/core-js/internals/symbol-constructor-detection.js
var require_symbol_constructor_detection=__commonJS({"node_modules/core-js/internals/symbol-constructor-detection.js"(exports,module2){"use strict";var V8_VERSION=require_environment_v8_version();var fails=require_fails();var globalThis2=require_global_this();var $String=globalThis2.String;module2.exports=!!Object.getOwnPropertySymbols&&!fails(function(){var symbol=Symbol("symbol detection");return!$String(symbol)||!(Object(symbol)instanceof Symbol)||// Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
!Symbol.sham&&V8_VERSION&&V8_VERSION<41;});}});// node_modules/core-js/internals/use-symbol-as-uid.js
var require_use_symbol_as_uid=__commonJS({"node_modules/core-js/internals/use-symbol-as-uid.js"(exports,module2){"use strict";var NATIVE_SYMBOL=require_symbol_constructor_detection();module2.exports=NATIVE_SYMBOL&&!Symbol.sham&&typeof Symbol.iterator=="symbol";}});// node_modules/core-js/internals/is-symbol.js
var require_is_symbol=__commonJS({"node_modules/core-js/internals/is-symbol.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var isCallable=require_is_callable();var isPrototypeOf=require_object_is_prototype_of();var USE_SYMBOL_AS_UID=require_use_symbol_as_uid();var $Object=Object;module2.exports=USE_SYMBOL_AS_UID?function(it){return typeof it=="symbol";}:function(it){var $Symbol=getBuiltIn("Symbol");return isCallable($Symbol)&&isPrototypeOf($Symbol.prototype,$Object(it));};}});// node_modules/core-js/internals/try-to-string.js
var require_try_to_string=__commonJS({"node_modules/core-js/internals/try-to-string.js"(exports,module2){"use strict";var $String=String;module2.exports=function(argument){try{return $String(argument);}catch(error){return"Object";}};}});// node_modules/core-js/internals/a-callable.js
var require_a_callable=__commonJS({"node_modules/core-js/internals/a-callable.js"(exports,module2){"use strict";var isCallable=require_is_callable();var tryToString=require_try_to_string();var $TypeError=TypeError;module2.exports=function(argument){if(isCallable(argument))return argument;throw new $TypeError(tryToString(argument)+" is not a function");};}});// node_modules/core-js/internals/get-method.js
var require_get_method=__commonJS({"node_modules/core-js/internals/get-method.js"(exports,module2){"use strict";var aCallable=require_a_callable();var isNullOrUndefined=require_is_null_or_undefined();module2.exports=function(V,P){var func=V[P];return isNullOrUndefined(func)?void 0:aCallable(func);};}});// node_modules/core-js/internals/ordinary-to-primitive.js
var require_ordinary_to_primitive=__commonJS({"node_modules/core-js/internals/ordinary-to-primitive.js"(exports,module2){"use strict";var call=require_function_call();var isCallable=require_is_callable();var isObject=require_is_object();var $TypeError=TypeError;module2.exports=function(input,pref){var fn,val;if(pref==="string"&&isCallable(fn=input.toString)&&!isObject(val=call(fn,input)))return val;if(isCallable(fn=input.valueOf)&&!isObject(val=call(fn,input)))return val;if(pref!=="string"&&isCallable(fn=input.toString)&&!isObject(val=call(fn,input)))return val;throw new $TypeError("Can't convert object to primitive value");};}});// node_modules/core-js/internals/is-pure.js
var require_is_pure=__commonJS({"node_modules/core-js/internals/is-pure.js"(exports,module2){"use strict";module2.exports=false;}});// node_modules/core-js/internals/define-global-property.js
var require_define_global_property=__commonJS({"node_modules/core-js/internals/define-global-property.js"(exports,module2){"use strict";var globalThis2=require_global_this();var defineProperty=Object.defineProperty;module2.exports=function(key,value){try{defineProperty(globalThis2,key,{value,configurable:true,writable:true});}catch(error){globalThis2[key]=value;}return value;};}});// node_modules/core-js/internals/shared-store.js
var require_shared_store=__commonJS({"node_modules/core-js/internals/shared-store.js"(exports,module2){"use strict";var IS_PURE=require_is_pure();var globalThis2=require_global_this();var defineGlobalProperty=require_define_global_property();var SHARED="__core-js_shared__";var store=module2.exports=globalThis2[SHARED]||defineGlobalProperty(SHARED,{});(store.versions||(store.versions=[])).push({version:"3.45.1",mode:IS_PURE?"pure":"global",copyright:"\xA9 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.45.1/LICENSE",source:"https://github.com/zloirock/core-js"});}});// node_modules/core-js/internals/shared.js
var require_shared=__commonJS({"node_modules/core-js/internals/shared.js"(exports,module2){"use strict";var store=require_shared_store();module2.exports=function(key,value){return store[key]||(store[key]=value||{});};}});// node_modules/core-js/internals/to-object.js
var require_to_object=__commonJS({"node_modules/core-js/internals/to-object.js"(exports,module2){"use strict";var requireObjectCoercible=require_require_object_coercible();var $Object=Object;module2.exports=function(argument){return $Object(requireObjectCoercible(argument));};}});// node_modules/core-js/internals/has-own-property.js
var require_has_own_property=__commonJS({"node_modules/core-js/internals/has-own-property.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var toObject=require_to_object();var hasOwnProperty=uncurryThis({}.hasOwnProperty);module2.exports=Object.hasOwn||function hasOwn(it,key){return hasOwnProperty(toObject(it),key);};}});// node_modules/core-js/internals/uid.js
var require_uid=__commonJS({"node_modules/core-js/internals/uid.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var id=0;var postfix=Math.random();var toString=uncurryThis(1.1.toString);module2.exports=function(key){return"Symbol("+(key===void 0?"":key)+")_"+toString(++id+postfix,36);};}});// node_modules/core-js/internals/well-known-symbol.js
var require_well_known_symbol=__commonJS({"node_modules/core-js/internals/well-known-symbol.js"(exports,module2){"use strict";var globalThis2=require_global_this();var shared=require_shared();var hasOwn=require_has_own_property();var uid=require_uid();var NATIVE_SYMBOL=require_symbol_constructor_detection();var USE_SYMBOL_AS_UID=require_use_symbol_as_uid();var Symbol2=globalThis2.Symbol;var WellKnownSymbolsStore=shared("wks");var createWellKnownSymbol=USE_SYMBOL_AS_UID?Symbol2["for"]||Symbol2:Symbol2&&Symbol2.withoutSetter||uid;module2.exports=function(name){if(!hasOwn(WellKnownSymbolsStore,name)){WellKnownSymbolsStore[name]=NATIVE_SYMBOL&&hasOwn(Symbol2,name)?Symbol2[name]:createWellKnownSymbol("Symbol."+name);}return WellKnownSymbolsStore[name];};}});// node_modules/core-js/internals/to-primitive.js
var require_to_primitive=__commonJS({"node_modules/core-js/internals/to-primitive.js"(exports,module2){"use strict";var call=require_function_call();var isObject=require_is_object();var isSymbol=require_is_symbol();var getMethod=require_get_method();var ordinaryToPrimitive=require_ordinary_to_primitive();var wellKnownSymbol=require_well_known_symbol();var $TypeError=TypeError;var TO_PRIMITIVE=wellKnownSymbol("toPrimitive");module2.exports=function(input,pref){if(!isObject(input)||isSymbol(input))return input;var exoticToPrim=getMethod(input,TO_PRIMITIVE);var result;if(exoticToPrim){if(pref===void 0)pref="default";result=call(exoticToPrim,input,pref);if(!isObject(result)||isSymbol(result))return result;throw new $TypeError("Can't convert object to primitive value");}if(pref===void 0)pref="number";return ordinaryToPrimitive(input,pref);};}});// node_modules/core-js/internals/to-property-key.js
var require_to_property_key=__commonJS({"node_modules/core-js/internals/to-property-key.js"(exports,module2){"use strict";var toPrimitive=require_to_primitive();var isSymbol=require_is_symbol();module2.exports=function(argument){var key=toPrimitive(argument,"string");return isSymbol(key)?key:key+"";};}});// node_modules/core-js/internals/document-create-element.js
var require_document_create_element=__commonJS({"node_modules/core-js/internals/document-create-element.js"(exports,module2){"use strict";var globalThis2=require_global_this();var isObject=require_is_object();var document2=globalThis2.document;var EXISTS=isObject(document2)&&isObject(document2.createElement);module2.exports=function(it){return EXISTS?document2.createElement(it):{};};}});// node_modules/core-js/internals/ie8-dom-define.js
var require_ie8_dom_define=__commonJS({"node_modules/core-js/internals/ie8-dom-define.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var fails=require_fails();var createElement=require_document_create_element();module2.exports=!DESCRIPTORS&&!fails(function(){return Object.defineProperty(createElement("div"),"a",{get:function(){return 7;}}).a!==7;});}});// node_modules/core-js/internals/object-get-own-property-descriptor.js
var require_object_get_own_property_descriptor=__commonJS({"node_modules/core-js/internals/object-get-own-property-descriptor.js"(exports){"use strict";var DESCRIPTORS=require_descriptors();var call=require_function_call();var propertyIsEnumerableModule=require_object_property_is_enumerable();var createPropertyDescriptor=require_create_property_descriptor();var toIndexedObject=require_to_indexed_object();var toPropertyKey=require_to_property_key();var hasOwn=require_has_own_property();var IE8_DOM_DEFINE=require_ie8_dom_define();var $getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;exports.f=DESCRIPTORS?$getOwnPropertyDescriptor:function getOwnPropertyDescriptor(O,P){O=toIndexedObject(O);P=toPropertyKey(P);if(IE8_DOM_DEFINE)try{return $getOwnPropertyDescriptor(O,P);}catch(error){}if(hasOwn(O,P))return createPropertyDescriptor(!call(propertyIsEnumerableModule.f,O,P),O[P]);};}});// node_modules/core-js/internals/v8-prototype-define-bug.js
var require_v8_prototype_define_bug=__commonJS({"node_modules/core-js/internals/v8-prototype-define-bug.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var fails=require_fails();module2.exports=DESCRIPTORS&&fails(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:false}).prototype!==42;});}});// node_modules/core-js/internals/an-object.js
var require_an_object=__commonJS({"node_modules/core-js/internals/an-object.js"(exports,module2){"use strict";var isObject=require_is_object();var $String=String;var $TypeError=TypeError;module2.exports=function(argument){if(isObject(argument))return argument;throw new $TypeError($String(argument)+" is not an object");};}});// node_modules/core-js/internals/object-define-property.js
var require_object_define_property=__commonJS({"node_modules/core-js/internals/object-define-property.js"(exports){"use strict";var DESCRIPTORS=require_descriptors();var IE8_DOM_DEFINE=require_ie8_dom_define();var V8_PROTOTYPE_DEFINE_BUG=require_v8_prototype_define_bug();var anObject=require_an_object();var toPropertyKey=require_to_property_key();var $TypeError=TypeError;var $defineProperty=Object.defineProperty;var $getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var ENUMERABLE="enumerable";var CONFIGURABLE="configurable";var WRITABLE="writable";exports.f=DESCRIPTORS?V8_PROTOTYPE_DEFINE_BUG?function defineProperty(O,P,Attributes){anObject(O);P=toPropertyKey(P);anObject(Attributes);if(typeof O==="function"&&P==="prototype"&&"value"in Attributes&&WRITABLE in Attributes&&!Attributes[WRITABLE]){var current=$getOwnPropertyDescriptor(O,P);if(current&&current[WRITABLE]){O[P]=Attributes.value;Attributes={configurable:CONFIGURABLE in Attributes?Attributes[CONFIGURABLE]:current[CONFIGURABLE],enumerable:ENUMERABLE in Attributes?Attributes[ENUMERABLE]:current[ENUMERABLE],writable:false};}}return $defineProperty(O,P,Attributes);}:$defineProperty:function defineProperty(O,P,Attributes){anObject(O);P=toPropertyKey(P);anObject(Attributes);if(IE8_DOM_DEFINE)try{return $defineProperty(O,P,Attributes);}catch(error){}if("get"in Attributes||"set"in Attributes)throw new $TypeError("Accessors not supported");if("value"in Attributes)O[P]=Attributes.value;return O;};}});// node_modules/core-js/internals/create-non-enumerable-property.js
var require_create_non_enumerable_property=__commonJS({"node_modules/core-js/internals/create-non-enumerable-property.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var definePropertyModule=require_object_define_property();var createPropertyDescriptor=require_create_property_descriptor();module2.exports=DESCRIPTORS?function(object,key,value){return definePropertyModule.f(object,key,createPropertyDescriptor(1,value));}:function(object,key,value){object[key]=value;return object;};}});// node_modules/core-js/internals/function-name.js
var require_function_name=__commonJS({"node_modules/core-js/internals/function-name.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var hasOwn=require_has_own_property();var FunctionPrototype=Function.prototype;var getDescriptor=DESCRIPTORS&&Object.getOwnPropertyDescriptor;var EXISTS=hasOwn(FunctionPrototype,"name");var PROPER=EXISTS&&function something(){}.name==="something";var CONFIGURABLE=EXISTS&&(!DESCRIPTORS||DESCRIPTORS&&getDescriptor(FunctionPrototype,"name").configurable);module2.exports={EXISTS,PROPER,CONFIGURABLE};}});// node_modules/core-js/internals/inspect-source.js
var require_inspect_source=__commonJS({"node_modules/core-js/internals/inspect-source.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var isCallable=require_is_callable();var store=require_shared_store();var functionToString=uncurryThis(Function.toString);if(!isCallable(store.inspectSource)){store.inspectSource=function(it){return functionToString(it);};}module2.exports=store.inspectSource;}});// node_modules/core-js/internals/weak-map-basic-detection.js
var require_weak_map_basic_detection=__commonJS({"node_modules/core-js/internals/weak-map-basic-detection.js"(exports,module2){"use strict";var globalThis2=require_global_this();var isCallable=require_is_callable();var WeakMap2=globalThis2.WeakMap;module2.exports=isCallable(WeakMap2)&&/native code/.test(String(WeakMap2));}});// node_modules/core-js/internals/shared-key.js
var require_shared_key=__commonJS({"node_modules/core-js/internals/shared-key.js"(exports,module2){"use strict";var shared=require_shared();var uid=require_uid();var keys=shared("keys");module2.exports=function(key){return keys[key]||(keys[key]=uid(key));};}});// node_modules/core-js/internals/hidden-keys.js
var require_hidden_keys=__commonJS({"node_modules/core-js/internals/hidden-keys.js"(exports,module2){"use strict";module2.exports={};}});// node_modules/core-js/internals/internal-state.js
var require_internal_state=__commonJS({"node_modules/core-js/internals/internal-state.js"(exports,module2){"use strict";var NATIVE_WEAK_MAP=require_weak_map_basic_detection();var globalThis2=require_global_this();var isObject=require_is_object();var createNonEnumerableProperty=require_create_non_enumerable_property();var hasOwn=require_has_own_property();var shared=require_shared_store();var sharedKey=require_shared_key();var hiddenKeys=require_hidden_keys();var OBJECT_ALREADY_INITIALIZED="Object already initialized";var TypeError2=globalThis2.TypeError;var WeakMap2=globalThis2.WeakMap;var set;var get;var has;var enforce=function(it){return has(it)?get(it):set(it,{});};var getterFor=function(TYPE){return function(it){var state;if(!isObject(it)||(state=get(it)).type!==TYPE){throw new TypeError2("Incompatible receiver, "+TYPE+" required");}return state;};};if(NATIVE_WEAK_MAP||shared.state){store=shared.state||(shared.state=new WeakMap2());store.get=store.get;store.has=store.has;store.set=store.set;set=function(it,metadata){if(store.has(it))throw new TypeError2(OBJECT_ALREADY_INITIALIZED);metadata.facade=it;store.set(it,metadata);return metadata;};get=function(it){return store.get(it)||{};};has=function(it){return store.has(it);};}else{STATE=sharedKey("state");hiddenKeys[STATE]=true;set=function(it,metadata){if(hasOwn(it,STATE))throw new TypeError2(OBJECT_ALREADY_INITIALIZED);metadata.facade=it;createNonEnumerableProperty(it,STATE,metadata);return metadata;};get=function(it){return hasOwn(it,STATE)?it[STATE]:{};};has=function(it){return hasOwn(it,STATE);};}var store;var STATE;module2.exports={set,get,has,enforce,getterFor};}});// node_modules/core-js/internals/make-built-in.js
var require_make_built_in=__commonJS({"node_modules/core-js/internals/make-built-in.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var fails=require_fails();var isCallable=require_is_callable();var hasOwn=require_has_own_property();var DESCRIPTORS=require_descriptors();var CONFIGURABLE_FUNCTION_NAME=require_function_name().CONFIGURABLE;var inspectSource=require_inspect_source();var InternalStateModule=require_internal_state();var enforceInternalState=InternalStateModule.enforce;var getInternalState=InternalStateModule.get;var $String=String;var defineProperty=Object.defineProperty;var stringSlice=uncurryThis("".slice);var replace=uncurryThis("".replace);var join=uncurryThis([].join);var CONFIGURABLE_LENGTH=DESCRIPTORS&&!fails(function(){return defineProperty(function(){},"length",{value:8}).length!==8;});var TEMPLATE=String(String).split("String");var makeBuiltIn=module2.exports=function(value,name,options){if(stringSlice($String(name),0,7)==="Symbol("){name="["+replace($String(name),/^Symbol\(([^)]*)\).*$/,"$1")+"]";}if(options&&options.getter)name="get "+name;if(options&&options.setter)name="set "+name;if(!hasOwn(value,"name")||CONFIGURABLE_FUNCTION_NAME&&value.name!==name){if(DESCRIPTORS)defineProperty(value,"name",{value:name,configurable:true});else value.name=name;}if(CONFIGURABLE_LENGTH&&options&&hasOwn(options,"arity")&&value.length!==options.arity){defineProperty(value,"length",{value:options.arity});}try{if(options&&hasOwn(options,"constructor")&&options.constructor){if(DESCRIPTORS)defineProperty(value,"prototype",{writable:false});}else if(value.prototype)value.prototype=void 0;}catch(error){}var state=enforceInternalState(value);if(!hasOwn(state,"source")){state.source=join(TEMPLATE,typeof name=="string"?name:"");}return value;};Function.prototype.toString=makeBuiltIn(function toString(){return isCallable(this)&&getInternalState(this).source||inspectSource(this);},"toString");}});// node_modules/core-js/internals/define-built-in.js
var require_define_built_in=__commonJS({"node_modules/core-js/internals/define-built-in.js"(exports,module2){"use strict";var isCallable=require_is_callable();var definePropertyModule=require_object_define_property();var makeBuiltIn=require_make_built_in();var defineGlobalProperty=require_define_global_property();module2.exports=function(O,key,value,options){if(!options)options={};var simple=options.enumerable;var name=options.name!==void 0?options.name:key;if(isCallable(value))makeBuiltIn(value,name,options);if(options.global){if(simple)O[key]=value;else defineGlobalProperty(key,value);}else{try{if(!options.unsafe)delete O[key];else if(O[key])simple=true;}catch(error){}if(simple)O[key]=value;else definePropertyModule.f(O,key,{value,enumerable:false,configurable:!options.nonConfigurable,writable:!options.nonWritable});}return O;};}});// node_modules/core-js/internals/math-trunc.js
var require_math_trunc=__commonJS({"node_modules/core-js/internals/math-trunc.js"(exports,module2){"use strict";var ceil=Math.ceil;var floor=Math.floor;module2.exports=Math.trunc||function trunc(x){var n=+x;return(n>0?floor:ceil)(n);};}});// node_modules/core-js/internals/to-integer-or-infinity.js
var require_to_integer_or_infinity=__commonJS({"node_modules/core-js/internals/to-integer-or-infinity.js"(exports,module2){"use strict";var trunc=require_math_trunc();module2.exports=function(argument){var number=+argument;return number!==number||number===0?0:trunc(number);};}});// node_modules/core-js/internals/to-absolute-index.js
var require_to_absolute_index=__commonJS({"node_modules/core-js/internals/to-absolute-index.js"(exports,module2){"use strict";var toIntegerOrInfinity=require_to_integer_or_infinity();var max=Math.max;var min=Math.min;module2.exports=function(index,length){var integer=toIntegerOrInfinity(index);return integer<0?max(integer+length,0):min(integer,length);};}});// node_modules/core-js/internals/to-length.js
var require_to_length=__commonJS({"node_modules/core-js/internals/to-length.js"(exports,module2){"use strict";var toIntegerOrInfinity=require_to_integer_or_infinity();var min=Math.min;module2.exports=function(argument){var len=toIntegerOrInfinity(argument);return len>0?min(len,9007199254740991):0;};}});// node_modules/core-js/internals/length-of-array-like.js
var require_length_of_array_like=__commonJS({"node_modules/core-js/internals/length-of-array-like.js"(exports,module2){"use strict";var toLength=require_to_length();module2.exports=function(obj){return toLength(obj.length);};}});// node_modules/core-js/internals/array-includes.js
var require_array_includes=__commonJS({"node_modules/core-js/internals/array-includes.js"(exports,module2){"use strict";var toIndexedObject=require_to_indexed_object();var toAbsoluteIndex=require_to_absolute_index();var lengthOfArrayLike=require_length_of_array_like();var createMethod=function(IS_INCLUDES){return function($this,el,fromIndex){var O=toIndexedObject($this);var length=lengthOfArrayLike(O);if(length===0)return!IS_INCLUDES&&-1;var index=toAbsoluteIndex(fromIndex,length);var value;if(IS_INCLUDES&&el!==el)while(length>index){value=O[index++];if(value!==value)return true;}else for(;length>index;index++){if((IS_INCLUDES||index in O)&&O[index]===el)return IS_INCLUDES||index||0;}return!IS_INCLUDES&&-1;};};module2.exports={// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
includes:createMethod(true),// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
indexOf:createMethod(false)};}});// node_modules/core-js/internals/object-keys-internal.js
var require_object_keys_internal=__commonJS({"node_modules/core-js/internals/object-keys-internal.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var hasOwn=require_has_own_property();var toIndexedObject=require_to_indexed_object();var indexOf=require_array_includes().indexOf;var hiddenKeys=require_hidden_keys();var push=uncurryThis([].push);module2.exports=function(object,names){var O=toIndexedObject(object);var i=0;var result=[];var key;for(key in O)!hasOwn(hiddenKeys,key)&&hasOwn(O,key)&&push(result,key);while(names.length>i)if(hasOwn(O,key=names[i++])){~indexOf(result,key)||push(result,key);}return result;};}});// node_modules/core-js/internals/enum-bug-keys.js
var require_enum_bug_keys=__commonJS({"node_modules/core-js/internals/enum-bug-keys.js"(exports,module2){"use strict";module2.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];}});// node_modules/core-js/internals/object-get-own-property-names.js
var require_object_get_own_property_names=__commonJS({"node_modules/core-js/internals/object-get-own-property-names.js"(exports){"use strict";var internalObjectKeys=require_object_keys_internal();var enumBugKeys=require_enum_bug_keys();var hiddenKeys=enumBugKeys.concat("length","prototype");exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){return internalObjectKeys(O,hiddenKeys);};}});// node_modules/core-js/internals/object-get-own-property-symbols.js
var require_object_get_own_property_symbols=__commonJS({"node_modules/core-js/internals/object-get-own-property-symbols.js"(exports){"use strict";exports.f=Object.getOwnPropertySymbols;}});// node_modules/core-js/internals/own-keys.js
var require_own_keys=__commonJS({"node_modules/core-js/internals/own-keys.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var uncurryThis=require_function_uncurry_this();var getOwnPropertyNamesModule=require_object_get_own_property_names();var getOwnPropertySymbolsModule=require_object_get_own_property_symbols();var anObject=require_an_object();var concat=uncurryThis([].concat);module2.exports=getBuiltIn("Reflect","ownKeys")||function ownKeys(it){var keys=getOwnPropertyNamesModule.f(anObject(it));var getOwnPropertySymbols=getOwnPropertySymbolsModule.f;return getOwnPropertySymbols?concat(keys,getOwnPropertySymbols(it)):keys;};}});// node_modules/core-js/internals/copy-constructor-properties.js
var require_copy_constructor_properties=__commonJS({"node_modules/core-js/internals/copy-constructor-properties.js"(exports,module2){"use strict";var hasOwn=require_has_own_property();var ownKeys=require_own_keys();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var definePropertyModule=require_object_define_property();module2.exports=function(target,source,exceptions){var keys=ownKeys(source);var defineProperty=definePropertyModule.f;var getOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;for(var i=0;i<keys.length;i++){var key=keys[i];if(!hasOwn(target,key)&&!(exceptions&&hasOwn(exceptions,key))){defineProperty(target,key,getOwnPropertyDescriptor(source,key));}}};}});// node_modules/core-js/internals/is-forced.js
var require_is_forced=__commonJS({"node_modules/core-js/internals/is-forced.js"(exports,module2){"use strict";var fails=require_fails();var isCallable=require_is_callable();var replacement=/#|\.prototype\./;var isForced=function(feature,detection){var value=data[normalize(feature)];return value===POLYFILL?true:value===NATIVE?false:isCallable(detection)?fails(detection):!!detection;};var normalize=isForced.normalize=function(string){return String(string).replace(replacement,".").toLowerCase();};var data=isForced.data={};var NATIVE=isForced.NATIVE="N";var POLYFILL=isForced.POLYFILL="P";module2.exports=isForced;}});// node_modules/core-js/internals/export.js
var require_export=__commonJS({"node_modules/core-js/internals/export.js"(exports,module2){"use strict";var globalThis2=require_global_this();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var createNonEnumerableProperty=require_create_non_enumerable_property();var defineBuiltIn=require_define_built_in();var defineGlobalProperty=require_define_global_property();var copyConstructorProperties=require_copy_constructor_properties();var isForced=require_is_forced();module2.exports=function(options,source){var TARGET=options.target;var GLOBAL=options.global;var STATIC=options.stat;var FORCED,target,key,targetProperty,sourceProperty,descriptor;if(GLOBAL){target=globalThis2;}else if(STATIC){target=globalThis2[TARGET]||defineGlobalProperty(TARGET,{});}else{target=globalThis2[TARGET]&&globalThis2[TARGET].prototype;}if(target)for(key in source){sourceProperty=source[key];if(options.dontCallGetSet){descriptor=getOwnPropertyDescriptor(target,key);targetProperty=descriptor&&descriptor.value;}else targetProperty=target[key];FORCED=isForced(GLOBAL?key:TARGET+(STATIC?".":"#")+key,options.forced);if(!FORCED&&targetProperty!==void 0){if(typeof sourceProperty==typeof targetProperty)continue;copyConstructorProperties(sourceProperty,targetProperty);}if(options.sham||targetProperty&&targetProperty.sham){createNonEnumerableProperty(sourceProperty,"sham",true);}defineBuiltIn(target,key,sourceProperty,options);}};}});// node_modules/core-js/internals/to-string-tag-support.js
var require_to_string_tag_support=__commonJS({"node_modules/core-js/internals/to-string-tag-support.js"(exports,module2){"use strict";var wellKnownSymbol=require_well_known_symbol();var TO_STRING_TAG=wellKnownSymbol("toStringTag");var test={};test[TO_STRING_TAG]="z";module2.exports=String(test)==="[object z]";}});// node_modules/core-js/internals/classof.js
var require_classof=__commonJS({"node_modules/core-js/internals/classof.js"(exports,module2){"use strict";var TO_STRING_TAG_SUPPORT=require_to_string_tag_support();var isCallable=require_is_callable();var classofRaw=require_classof_raw();var wellKnownSymbol=require_well_known_symbol();var TO_STRING_TAG=wellKnownSymbol("toStringTag");var $Object=Object;var CORRECT_ARGUMENTS=classofRaw(/* @__PURE__ */function(){return arguments;}())==="Arguments";var tryGet=function(it,key){try{return it[key];}catch(error){}};module2.exports=TO_STRING_TAG_SUPPORT?classofRaw:function(it){var O,tag,result;return it===void 0?"Undefined":it===null?"Null":typeof(tag=tryGet(O=$Object(it),TO_STRING_TAG))=="string"?tag:CORRECT_ARGUMENTS?classofRaw(O):(result=classofRaw(O))==="Object"&&isCallable(O.callee)?"Arguments":result;};}});// node_modules/core-js/internals/to-string.js
var require_to_string=__commonJS({"node_modules/core-js/internals/to-string.js"(exports,module2){"use strict";var classof=require_classof();var $String=String;module2.exports=function(argument){if(classof(argument)==="Symbol")throw new TypeError("Cannot convert a Symbol value to a string");return $String(argument);};}});// node_modules/core-js/internals/object-keys.js
var require_object_keys=__commonJS({"node_modules/core-js/internals/object-keys.js"(exports,module2){"use strict";var internalObjectKeys=require_object_keys_internal();var enumBugKeys=require_enum_bug_keys();module2.exports=Object.keys||function keys(O){return internalObjectKeys(O,enumBugKeys);};}});// node_modules/core-js/internals/object-define-properties.js
var require_object_define_properties=__commonJS({"node_modules/core-js/internals/object-define-properties.js"(exports){"use strict";var DESCRIPTORS=require_descriptors();var V8_PROTOTYPE_DEFINE_BUG=require_v8_prototype_define_bug();var definePropertyModule=require_object_define_property();var anObject=require_an_object();var toIndexedObject=require_to_indexed_object();var objectKeys=require_object_keys();exports.f=DESCRIPTORS&&!V8_PROTOTYPE_DEFINE_BUG?Object.defineProperties:function defineProperties(O,Properties){anObject(O);var props=toIndexedObject(Properties);var keys=objectKeys(Properties);var length=keys.length;var index=0;var key;while(length>index)definePropertyModule.f(O,key=keys[index++],props[key]);return O;};}});// node_modules/core-js/internals/html.js
var require_html=__commonJS({"node_modules/core-js/internals/html.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();module2.exports=getBuiltIn("document","documentElement");}});// node_modules/core-js/internals/object-create.js
var require_object_create=__commonJS({"node_modules/core-js/internals/object-create.js"(exports,module2){"use strict";var anObject=require_an_object();var definePropertiesModule=require_object_define_properties();var enumBugKeys=require_enum_bug_keys();var hiddenKeys=require_hidden_keys();var html=require_html();var documentCreateElement=require_document_create_element();var sharedKey=require_shared_key();var GT=">";var LT="<";var PROTOTYPE="prototype";var SCRIPT="script";var IE_PROTO=sharedKey("IE_PROTO");var EmptyConstructor=function(){};var scriptTag=function(content){return LT+SCRIPT+GT+content+LT+"/"+SCRIPT+GT;};var NullProtoObjectViaActiveX=function(activeXDocument2){activeXDocument2.write(scriptTag(""));activeXDocument2.close();var temp=activeXDocument2.parentWindow.Object;activeXDocument2=null;return temp;};var NullProtoObjectViaIFrame=function(){var iframe=documentCreateElement("iframe");var JS="java"+SCRIPT+":";var iframeDocument;iframe.style.display="none";html.appendChild(iframe);iframe.src=String(JS);iframeDocument=iframe.contentWindow.document;iframeDocument.open();iframeDocument.write(scriptTag("document.F=Object"));iframeDocument.close();return iframeDocument.F;};var activeXDocument;var NullProtoObject=function(){try{activeXDocument=new ActiveXObject("htmlfile");}catch(error){}NullProtoObject=typeof document!="undefined"?document.domain&&activeXDocument?NullProtoObjectViaActiveX(activeXDocument):NullProtoObjectViaIFrame():NullProtoObjectViaActiveX(activeXDocument);var length=enumBugKeys.length;while(length--)delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];return NullProtoObject();};hiddenKeys[IE_PROTO]=true;module2.exports=Object.create||function create(O,Properties){var result;if(O!==null){EmptyConstructor[PROTOTYPE]=anObject(O);result=new EmptyConstructor();EmptyConstructor[PROTOTYPE]=null;result[IE_PROTO]=O;}else result=NullProtoObject();return Properties===void 0?result:definePropertiesModule.f(result,Properties);};}});// node_modules/core-js/internals/array-slice.js
var require_array_slice=__commonJS({"node_modules/core-js/internals/array-slice.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();module2.exports=uncurryThis([].slice);}});// node_modules/core-js/internals/object-get-own-property-names-external.js
var require_object_get_own_property_names_external=__commonJS({"node_modules/core-js/internals/object-get-own-property-names-external.js"(exports,module2){"use strict";var classof=require_classof_raw();var toIndexedObject=require_to_indexed_object();var $getOwnPropertyNames=require_object_get_own_property_names().f;var arraySlice=require_array_slice();var windowNames=typeof window=="object"&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];var getWindowNames=function(it){try{return $getOwnPropertyNames(it);}catch(error){return arraySlice(windowNames);}};module2.exports.f=function getOwnPropertyNames(it){return windowNames&&classof(it)==="Window"?getWindowNames(it):$getOwnPropertyNames(toIndexedObject(it));};}});// node_modules/core-js/internals/define-built-in-accessor.js
var require_define_built_in_accessor=__commonJS({"node_modules/core-js/internals/define-built-in-accessor.js"(exports,module2){"use strict";var makeBuiltIn=require_make_built_in();var defineProperty=require_object_define_property();module2.exports=function(target,name,descriptor){if(descriptor.get)makeBuiltIn(descriptor.get,name,{getter:true});if(descriptor.set)makeBuiltIn(descriptor.set,name,{setter:true});return defineProperty.f(target,name,descriptor);};}});// node_modules/core-js/internals/well-known-symbol-wrapped.js
var require_well_known_symbol_wrapped=__commonJS({"node_modules/core-js/internals/well-known-symbol-wrapped.js"(exports){"use strict";var wellKnownSymbol=require_well_known_symbol();exports.f=wellKnownSymbol;}});// node_modules/core-js/internals/path.js
var require_path=__commonJS({"node_modules/core-js/internals/path.js"(exports,module2){"use strict";var globalThis2=require_global_this();module2.exports=globalThis2;}});// node_modules/core-js/internals/well-known-symbol-define.js
var require_well_known_symbol_define=__commonJS({"node_modules/core-js/internals/well-known-symbol-define.js"(exports,module2){"use strict";var path=require_path();var hasOwn=require_has_own_property();var wrappedWellKnownSymbolModule=require_well_known_symbol_wrapped();var defineProperty=require_object_define_property().f;module2.exports=function(NAME){var Symbol2=path.Symbol||(path.Symbol={});if(!hasOwn(Symbol2,NAME))defineProperty(Symbol2,NAME,{value:wrappedWellKnownSymbolModule.f(NAME)});};}});// node_modules/core-js/internals/symbol-define-to-primitive.js
var require_symbol_define_to_primitive=__commonJS({"node_modules/core-js/internals/symbol-define-to-primitive.js"(exports,module2){"use strict";var call=require_function_call();var getBuiltIn=require_get_built_in();var wellKnownSymbol=require_well_known_symbol();var defineBuiltIn=require_define_built_in();module2.exports=function(){var Symbol2=getBuiltIn("Symbol");var SymbolPrototype=Symbol2&&Symbol2.prototype;var valueOf=SymbolPrototype&&SymbolPrototype.valueOf;var TO_PRIMITIVE=wellKnownSymbol("toPrimitive");if(SymbolPrototype&&!SymbolPrototype[TO_PRIMITIVE]){defineBuiltIn(SymbolPrototype,TO_PRIMITIVE,function(hint){return call(valueOf,this);},{arity:1});}};}});// node_modules/core-js/internals/set-to-string-tag.js
var require_set_to_string_tag=__commonJS({"node_modules/core-js/internals/set-to-string-tag.js"(exports,module2){"use strict";var defineProperty=require_object_define_property().f;var hasOwn=require_has_own_property();var wellKnownSymbol=require_well_known_symbol();var TO_STRING_TAG=wellKnownSymbol("toStringTag");module2.exports=function(target,TAG,STATIC){if(target&&!STATIC)target=target.prototype;if(target&&!hasOwn(target,TO_STRING_TAG)){defineProperty(target,TO_STRING_TAG,{configurable:true,value:TAG});}};}});// node_modules/core-js/internals/function-uncurry-this-clause.js
var require_function_uncurry_this_clause=__commonJS({"node_modules/core-js/internals/function-uncurry-this-clause.js"(exports,module2){"use strict";var classofRaw=require_classof_raw();var uncurryThis=require_function_uncurry_this();module2.exports=function(fn){if(classofRaw(fn)==="Function")return uncurryThis(fn);};}});// node_modules/core-js/internals/function-bind-context.js
var require_function_bind_context=__commonJS({"node_modules/core-js/internals/function-bind-context.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this_clause();var aCallable=require_a_callable();var NATIVE_BIND=require_function_bind_native();var bind=uncurryThis(uncurryThis.bind);module2.exports=function(fn,that){aCallable(fn);return that===void 0?fn:NATIVE_BIND?bind(fn,that):function(){return fn.apply(that,arguments);};};}});// node_modules/core-js/internals/is-array.js
var require_is_array=__commonJS({"node_modules/core-js/internals/is-array.js"(exports,module2){"use strict";var classof=require_classof_raw();module2.exports=Array.isArray||function isArray(argument){return classof(argument)==="Array";};}});// node_modules/core-js/internals/is-constructor.js
var require_is_constructor=__commonJS({"node_modules/core-js/internals/is-constructor.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var fails=require_fails();var isCallable=require_is_callable();var classof=require_classof();var getBuiltIn=require_get_built_in();var inspectSource=require_inspect_source();var noop=function(){};var construct=getBuiltIn("Reflect","construct");var constructorRegExp=/^\s*(?:class|function)\b/;var exec=uncurryThis(constructorRegExp.exec);var INCORRECT_TO_STRING=!constructorRegExp.test(noop);var isConstructorModern=function isConstructor(argument){if(!isCallable(argument))return false;try{construct(noop,[],argument);return true;}catch(error){return false;}};var isConstructorLegacy=function isConstructor(argument){if(!isCallable(argument))return false;switch(classof(argument)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return false;}try{return INCORRECT_TO_STRING||!!exec(constructorRegExp,inspectSource(argument));}catch(error){return true;}};isConstructorLegacy.sham=true;module2.exports=!construct||fails(function(){var called;return isConstructorModern(isConstructorModern.call)||!isConstructorModern(Object)||!isConstructorModern(function(){called=true;})||called;})?isConstructorLegacy:isConstructorModern;}});// node_modules/core-js/internals/array-species-constructor.js
var require_array_species_constructor=__commonJS({"node_modules/core-js/internals/array-species-constructor.js"(exports,module2){"use strict";var isArray=require_is_array();var isConstructor=require_is_constructor();var isObject=require_is_object();var wellKnownSymbol=require_well_known_symbol();var SPECIES=wellKnownSymbol("species");var $Array=Array;module2.exports=function(originalArray){var C;if(isArray(originalArray)){C=originalArray.constructor;if(isConstructor(C)&&(C===$Array||isArray(C.prototype)))C=void 0;else if(isObject(C)){C=C[SPECIES];if(C===null)C=void 0;}}return C===void 0?$Array:C;};}});// node_modules/core-js/internals/array-species-create.js
var require_array_species_create=__commonJS({"node_modules/core-js/internals/array-species-create.js"(exports,module2){"use strict";var arraySpeciesConstructor=require_array_species_constructor();module2.exports=function(originalArray,length){return new(arraySpeciesConstructor(originalArray))(length===0?0:length);};}});// node_modules/core-js/internals/array-iteration.js
var require_array_iteration=__commonJS({"node_modules/core-js/internals/array-iteration.js"(exports,module2){"use strict";var bind=require_function_bind_context();var uncurryThis=require_function_uncurry_this();var IndexedObject=require_indexed_object();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var arraySpeciesCreate=require_array_species_create();var push=uncurryThis([].push);var createMethod=function(TYPE){var IS_MAP=TYPE===1;var IS_FILTER=TYPE===2;var IS_SOME=TYPE===3;var IS_EVERY=TYPE===4;var IS_FIND_INDEX=TYPE===6;var IS_FILTER_REJECT=TYPE===7;var NO_HOLES=TYPE===5||IS_FIND_INDEX;return function($this,callbackfn,that,specificCreate){var O=toObject($this);var self2=IndexedObject(O);var length=lengthOfArrayLike(self2);var boundFunction=bind(callbackfn,that);var index=0;var create=specificCreate||arraySpeciesCreate;var target=IS_MAP?create($this,length):IS_FILTER||IS_FILTER_REJECT?create($this,0):void 0;var value,result;for(;length>index;index++)if(NO_HOLES||index in self2){value=self2[index];result=boundFunction(value,index,O);if(TYPE){if(IS_MAP)target[index]=result;else if(result)switch(TYPE){case 3:return true;// some
case 5:return value;// find
case 6:return index;// findIndex
case 2:push(target,value);}else switch(TYPE){case 4:return false;// every
case 7:push(target,value);}}}return IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:target;};};module2.exports={// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
forEach:createMethod(0),// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
map:createMethod(1),// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
filter:createMethod(2),// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
some:createMethod(3),// `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every
every:createMethod(4),// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
find:createMethod(5),// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findIndex
findIndex:createMethod(6),// `Array.prototype.filterReject` method
// https://github.com/tc39/proposal-array-filtering
filterReject:createMethod(7)};}});// node_modules/core-js/modules/es.symbol.constructor.js
var require_es_symbol_constructor=__commonJS({"node_modules/core-js/modules/es.symbol.constructor.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var IS_PURE=require_is_pure();var DESCRIPTORS=require_descriptors();var NATIVE_SYMBOL=require_symbol_constructor_detection();var fails=require_fails();var hasOwn=require_has_own_property();var isPrototypeOf=require_object_is_prototype_of();var anObject=require_an_object();var toIndexedObject=require_to_indexed_object();var toPropertyKey=require_to_property_key();var $toString=require_to_string();var createPropertyDescriptor=require_create_property_descriptor();var nativeObjectCreate=require_object_create();var objectKeys=require_object_keys();var getOwnPropertyNamesModule=require_object_get_own_property_names();var getOwnPropertyNamesExternal=require_object_get_own_property_names_external();var getOwnPropertySymbolsModule=require_object_get_own_property_symbols();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var definePropertyModule=require_object_define_property();var definePropertiesModule=require_object_define_properties();var propertyIsEnumerableModule=require_object_property_is_enumerable();var defineBuiltIn=require_define_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var shared=require_shared();var sharedKey=require_shared_key();var hiddenKeys=require_hidden_keys();var uid=require_uid();var wellKnownSymbol=require_well_known_symbol();var wrappedWellKnownSymbolModule=require_well_known_symbol_wrapped();var defineWellKnownSymbol=require_well_known_symbol_define();var defineSymbolToPrimitive=require_symbol_define_to_primitive();var setToStringTag=require_set_to_string_tag();var InternalStateModule=require_internal_state();var $forEach=require_array_iteration().forEach;var HIDDEN=sharedKey("hidden");var SYMBOL="Symbol";var PROTOTYPE="prototype";var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(SYMBOL);var ObjectPrototype=Object[PROTOTYPE];var $Symbol=globalThis2.Symbol;var SymbolPrototype=$Symbol&&$Symbol[PROTOTYPE];var RangeError2=globalThis2.RangeError;var TypeError2=globalThis2.TypeError;var QObject=globalThis2.QObject;var nativeGetOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;var nativeDefineProperty=definePropertyModule.f;var nativeGetOwnPropertyNames=getOwnPropertyNamesExternal.f;var nativePropertyIsEnumerable=propertyIsEnumerableModule.f;var push=uncurryThis([].push);var AllSymbols=shared("symbols");var ObjectPrototypeSymbols=shared("op-symbols");var WellKnownSymbolsStore=shared("wks");var USE_SETTER=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild;var fallbackDefineProperty=function(O,P,Attributes){var ObjectPrototypeDescriptor=nativeGetOwnPropertyDescriptor(ObjectPrototype,P);if(ObjectPrototypeDescriptor)delete ObjectPrototype[P];nativeDefineProperty(O,P,Attributes);if(ObjectPrototypeDescriptor&&O!==ObjectPrototype){nativeDefineProperty(ObjectPrototype,P,ObjectPrototypeDescriptor);}};var setSymbolDescriptor=DESCRIPTORS&&fails(function(){return nativeObjectCreate(nativeDefineProperty({},"a",{get:function(){return nativeDefineProperty(this,"a",{value:7}).a;}})).a!==7;})?fallbackDefineProperty:nativeDefineProperty;var wrap=function(tag,description){var symbol=AllSymbols[tag]=nativeObjectCreate(SymbolPrototype);setInternalState(symbol,{type:SYMBOL,tag,description});if(!DESCRIPTORS)symbol.description=description;return symbol;};var $defineProperty=function defineProperty(O,P,Attributes){if(O===ObjectPrototype)$defineProperty(ObjectPrototypeSymbols,P,Attributes);anObject(O);var key=toPropertyKey(P);anObject(Attributes);if(hasOwn(AllSymbols,key)){if(!Attributes.enumerable){if(!hasOwn(O,HIDDEN))nativeDefineProperty(O,HIDDEN,createPropertyDescriptor(1,nativeObjectCreate(null)));O[HIDDEN][key]=true;}else{if(hasOwn(O,HIDDEN)&&O[HIDDEN][key])O[HIDDEN][key]=false;Attributes=nativeObjectCreate(Attributes,{enumerable:createPropertyDescriptor(0,false)});}return setSymbolDescriptor(O,key,Attributes);}return nativeDefineProperty(O,key,Attributes);};var $defineProperties=function defineProperties(O,Properties){anObject(O);var properties=toIndexedObject(Properties);var keys=objectKeys(properties).concat($getOwnPropertySymbols(properties));$forEach(keys,function(key){if(!DESCRIPTORS||call($propertyIsEnumerable,properties,key))$defineProperty(O,key,properties[key]);});return O;};var $create=function create(O,Properties){return Properties===void 0?nativeObjectCreate(O):$defineProperties(nativeObjectCreate(O),Properties);};var $propertyIsEnumerable=function propertyIsEnumerable(V){var P=toPropertyKey(V);var enumerable=call(nativePropertyIsEnumerable,this,P);if(this===ObjectPrototype&&hasOwn(AllSymbols,P)&&!hasOwn(ObjectPrototypeSymbols,P))return false;return enumerable||!hasOwn(this,P)||!hasOwn(AllSymbols,P)||hasOwn(this,HIDDEN)&&this[HIDDEN][P]?enumerable:true;};var $getOwnPropertyDescriptor=function getOwnPropertyDescriptor(O,P){var it=toIndexedObject(O);var key=toPropertyKey(P);if(it===ObjectPrototype&&hasOwn(AllSymbols,key)&&!hasOwn(ObjectPrototypeSymbols,key))return;var descriptor=nativeGetOwnPropertyDescriptor(it,key);if(descriptor&&hasOwn(AllSymbols,key)&&!(hasOwn(it,HIDDEN)&&it[HIDDEN][key])){descriptor.enumerable=true;}return descriptor;};var $getOwnPropertyNames=function getOwnPropertyNames(O){var names=nativeGetOwnPropertyNames(toIndexedObject(O));var result=[];$forEach(names,function(key){if(!hasOwn(AllSymbols,key)&&!hasOwn(hiddenKeys,key))push(result,key);});return result;};var $getOwnPropertySymbols=function(O){var IS_OBJECT_PROTOTYPE=O===ObjectPrototype;var names=nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE?ObjectPrototypeSymbols:toIndexedObject(O));var result=[];$forEach(names,function(key){if(hasOwn(AllSymbols,key)&&(!IS_OBJECT_PROTOTYPE||hasOwn(ObjectPrototype,key))){push(result,AllSymbols[key]);}});return result;};if(!NATIVE_SYMBOL){$Symbol=function Symbol2(){if(isPrototypeOf(SymbolPrototype,this))throw new TypeError2("Symbol is not a constructor");var description=!arguments.length||arguments[0]===void 0?void 0:$toString(arguments[0]);var tag=uid(description);var setter=function(value){var $this=this===void 0?globalThis2:this;if($this===ObjectPrototype)call(setter,ObjectPrototypeSymbols,value);if(hasOwn($this,HIDDEN)&&hasOwn($this[HIDDEN],tag))$this[HIDDEN][tag]=false;var descriptor=createPropertyDescriptor(1,value);try{setSymbolDescriptor($this,tag,descriptor);}catch(error){if(!(error instanceof RangeError2))throw error;fallbackDefineProperty($this,tag,descriptor);}};if(DESCRIPTORS&&USE_SETTER)setSymbolDescriptor(ObjectPrototype,tag,{configurable:true,set:setter});return wrap(tag,description);};SymbolPrototype=$Symbol[PROTOTYPE];defineBuiltIn(SymbolPrototype,"toString",function toString(){return getInternalState(this).tag;});defineBuiltIn($Symbol,"withoutSetter",function(description){return wrap(uid(description),description);});propertyIsEnumerableModule.f=$propertyIsEnumerable;definePropertyModule.f=$defineProperty;definePropertiesModule.f=$defineProperties;getOwnPropertyDescriptorModule.f=$getOwnPropertyDescriptor;getOwnPropertyNamesModule.f=getOwnPropertyNamesExternal.f=$getOwnPropertyNames;getOwnPropertySymbolsModule.f=$getOwnPropertySymbols;wrappedWellKnownSymbolModule.f=function(name){return wrap(wellKnownSymbol(name),name);};if(DESCRIPTORS){defineBuiltInAccessor(SymbolPrototype,"description",{configurable:true,get:function description(){return getInternalState(this).description;}});if(!IS_PURE){defineBuiltIn(ObjectPrototype,"propertyIsEnumerable",$propertyIsEnumerable,{unsafe:true});}}}$({global:true,constructor:true,wrap:true,forced:!NATIVE_SYMBOL,sham:!NATIVE_SYMBOL},{Symbol:$Symbol});$forEach(objectKeys(WellKnownSymbolsStore),function(name){defineWellKnownSymbol(name);});$({target:SYMBOL,stat:true,forced:!NATIVE_SYMBOL},{useSetter:function(){USE_SETTER=true;},useSimple:function(){USE_SETTER=false;}});$({target:"Object",stat:true,forced:!NATIVE_SYMBOL,sham:!DESCRIPTORS},{// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
create:$create,// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
defineProperty:$defineProperty,// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
defineProperties:$defineProperties,// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
getOwnPropertyDescriptor:$getOwnPropertyDescriptor});$({target:"Object",stat:true,forced:!NATIVE_SYMBOL},{// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
getOwnPropertyNames:$getOwnPropertyNames});defineSymbolToPrimitive();setToStringTag($Symbol,SYMBOL);hiddenKeys[HIDDEN]=true;}});// node_modules/core-js/internals/symbol-registry-detection.js
var require_symbol_registry_detection=__commonJS({"node_modules/core-js/internals/symbol-registry-detection.js"(exports,module2){"use strict";var NATIVE_SYMBOL=require_symbol_constructor_detection();module2.exports=NATIVE_SYMBOL&&!!Symbol["for"]&&!!Symbol.keyFor;}});// node_modules/core-js/modules/es.symbol.for.js
var require_es_symbol_for=__commonJS({"node_modules/core-js/modules/es.symbol.for.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var hasOwn=require_has_own_property();var toString=require_to_string();var shared=require_shared();var NATIVE_SYMBOL_REGISTRY=require_symbol_registry_detection();var StringToSymbolRegistry=shared("string-to-symbol-registry");var SymbolToStringRegistry=shared("symbol-to-string-registry");$({target:"Symbol",stat:true,forced:!NATIVE_SYMBOL_REGISTRY},{"for":function(key){var string=toString(key);if(hasOwn(StringToSymbolRegistry,string))return StringToSymbolRegistry[string];var symbol=getBuiltIn("Symbol")(string);StringToSymbolRegistry[string]=symbol;SymbolToStringRegistry[symbol]=string;return symbol;}});}});// node_modules/core-js/modules/es.symbol.key-for.js
var require_es_symbol_key_for=__commonJS({"node_modules/core-js/modules/es.symbol.key-for.js"(){"use strict";var $=require_export();var hasOwn=require_has_own_property();var isSymbol=require_is_symbol();var tryToString=require_try_to_string();var shared=require_shared();var NATIVE_SYMBOL_REGISTRY=require_symbol_registry_detection();var SymbolToStringRegistry=shared("symbol-to-string-registry");$({target:"Symbol",stat:true,forced:!NATIVE_SYMBOL_REGISTRY},{keyFor:function keyFor(sym){if(!isSymbol(sym))throw new TypeError(tryToString(sym)+" is not a symbol");if(hasOwn(SymbolToStringRegistry,sym))return SymbolToStringRegistry[sym];}});}});// node_modules/core-js/internals/function-apply.js
var require_function_apply=__commonJS({"node_modules/core-js/internals/function-apply.js"(exports,module2){"use strict";var NATIVE_BIND=require_function_bind_native();var FunctionPrototype=Function.prototype;var apply=FunctionPrototype.apply;var call=FunctionPrototype.call;module2.exports=typeof Reflect=="object"&&Reflect.apply||(NATIVE_BIND?call.bind(apply):function(){return call.apply(apply,arguments);});}});// node_modules/core-js/internals/get-json-replacer-function.js
var require_get_json_replacer_function=__commonJS({"node_modules/core-js/internals/get-json-replacer-function.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var isArray=require_is_array();var isCallable=require_is_callable();var classof=require_classof_raw();var toString=require_to_string();var push=uncurryThis([].push);module2.exports=function(replacer){if(isCallable(replacer))return replacer;if(!isArray(replacer))return;var rawLength=replacer.length;var keys=[];for(var i=0;i<rawLength;i++){var element=replacer[i];if(typeof element=="string")push(keys,element);else if(typeof element=="number"||classof(element)==="Number"||classof(element)==="String")push(keys,toString(element));}var keysLength=keys.length;var root=true;return function(key,value){if(root){root=false;return value;}if(isArray(this))return value;for(var j=0;j<keysLength;j++)if(keys[j]===key)return value;};};}});// node_modules/core-js/modules/es.json.stringify.js
var require_es_json_stringify=__commonJS({"node_modules/core-js/modules/es.json.stringify.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var apply=require_function_apply();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var fails=require_fails();var isCallable=require_is_callable();var isSymbol=require_is_symbol();var arraySlice=require_array_slice();var getReplacerFunction=require_get_json_replacer_function();var NATIVE_SYMBOL=require_symbol_constructor_detection();var $String=String;var $stringify=getBuiltIn("JSON","stringify");var exec=uncurryThis(/./.exec);var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var replace=uncurryThis("".replace);var numberToString=uncurryThis(1.1.toString);var tester=/[\uD800-\uDFFF]/g;var low=/^[\uD800-\uDBFF]$/;var hi=/^[\uDC00-\uDFFF]$/;var WRONG_SYMBOLS_CONVERSION=!NATIVE_SYMBOL||fails(function(){var symbol=getBuiltIn("Symbol")("stringify detection");return $stringify([symbol])!=="[null]"||$stringify({a:symbol})!=="{}"||$stringify(Object(symbol))!=="{}";});var ILL_FORMED_UNICODE=fails(function(){return $stringify("\uDF06\uD834")!=='"\\udf06\\ud834"'||$stringify("\uDEAD")!=='"\\udead"';});var stringifyWithSymbolsFix=function(it,replacer){var args=arraySlice(arguments);var $replacer=getReplacerFunction(replacer);if(!isCallable($replacer)&&(it===void 0||isSymbol(it)))return;args[1]=function(key,value){if(isCallable($replacer))value=call($replacer,this,$String(key),value);if(!isSymbol(value))return value;};return apply($stringify,null,args);};var fixIllFormed=function(match,offset,string){var prev=charAt(string,offset-1);var next=charAt(string,offset+1);if(exec(low,match)&&!exec(hi,next)||exec(hi,match)&&!exec(low,prev)){return"\\u"+numberToString(charCodeAt(match,0),16);}return match;};if($stringify){$({target:"JSON",stat:true,arity:3,forced:WRONG_SYMBOLS_CONVERSION||ILL_FORMED_UNICODE},{// eslint-disable-next-line no-unused-vars -- required for `.length`
stringify:function stringify(it,replacer,space){var args=arraySlice(arguments);var result=apply(WRONG_SYMBOLS_CONVERSION?stringifyWithSymbolsFix:$stringify,null,args);return ILL_FORMED_UNICODE&&typeof result=="string"?replace(result,tester,fixIllFormed):result;}});}}});// node_modules/core-js/modules/es.object.get-own-property-symbols.js
var require_es_object_get_own_property_symbols=__commonJS({"node_modules/core-js/modules/es.object.get-own-property-symbols.js"(){"use strict";var $=require_export();var NATIVE_SYMBOL=require_symbol_constructor_detection();var fails=require_fails();var getOwnPropertySymbolsModule=require_object_get_own_property_symbols();var toObject=require_to_object();var FORCED=!NATIVE_SYMBOL||fails(function(){getOwnPropertySymbolsModule.f(1);});$({target:"Object",stat:true,forced:FORCED},{getOwnPropertySymbols:function getOwnPropertySymbols(it){var $getOwnPropertySymbols=getOwnPropertySymbolsModule.f;return $getOwnPropertySymbols?$getOwnPropertySymbols(toObject(it)):[];}});}});// node_modules/core-js/modules/es.symbol.js
var require_es_symbol=__commonJS({"node_modules/core-js/modules/es.symbol.js"(){"use strict";require_es_symbol_constructor();require_es_symbol_for();require_es_symbol_key_for();require_es_json_stringify();require_es_object_get_own_property_symbols();}});// node_modules/core-js/modules/es.symbol.description.js
var require_es_symbol_description=__commonJS({"node_modules/core-js/modules/es.symbol.description.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var hasOwn=require_has_own_property();var isCallable=require_is_callable();var isPrototypeOf=require_object_is_prototype_of();var toString=require_to_string();var defineBuiltInAccessor=require_define_built_in_accessor();var copyConstructorProperties=require_copy_constructor_properties();var NativeSymbol=globalThis2.Symbol;var SymbolPrototype=NativeSymbol&&NativeSymbol.prototype;if(DESCRIPTORS&&isCallable(NativeSymbol)&&(!("description"in SymbolPrototype)||// Safari 12 bug
NativeSymbol().description!==void 0)){EmptyStringDescriptionStore={};SymbolWrapper=function Symbol2(){var description=arguments.length<1||arguments[0]===void 0?void 0:toString(arguments[0]);var result=isPrototypeOf(SymbolPrototype,this)?new NativeSymbol(description):description===void 0?NativeSymbol():NativeSymbol(description);if(description==="")EmptyStringDescriptionStore[result]=true;return result;};copyConstructorProperties(SymbolWrapper,NativeSymbol);SymbolWrapper.prototype=SymbolPrototype;SymbolPrototype.constructor=SymbolWrapper;NATIVE_SYMBOL=String(NativeSymbol("description detection"))==="Symbol(description detection)";thisSymbolValue=uncurryThis(SymbolPrototype.valueOf);symbolDescriptiveString=uncurryThis(SymbolPrototype.toString);regexp=/^Symbol\((.*)\)[^)]+$/;replace=uncurryThis("".replace);stringSlice=uncurryThis("".slice);defineBuiltInAccessor(SymbolPrototype,"description",{configurable:true,get:function description(){var symbol=thisSymbolValue(this);if(hasOwn(EmptyStringDescriptionStore,symbol))return"";var string=symbolDescriptiveString(symbol);var desc=NATIVE_SYMBOL?stringSlice(string,7,-1):replace(string,regexp,"$1");return desc===""?void 0:desc;}});$({global:true,constructor:true,forced:true},{Symbol:SymbolWrapper});}var EmptyStringDescriptionStore;var SymbolWrapper;var NATIVE_SYMBOL;var thisSymbolValue;var symbolDescriptiveString;var regexp;var replace;var stringSlice;}});// node_modules/core-js/modules/es.symbol.async-dispose.js
var require_es_symbol_async_dispose=__commonJS({"node_modules/core-js/modules/es.symbol.async-dispose.js"(){"use strict";var globalThis2=require_global_this();var defineWellKnownSymbol=require_well_known_symbol_define();var defineProperty=require_object_define_property().f;var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var Symbol2=globalThis2.Symbol;defineWellKnownSymbol("asyncDispose");if(Symbol2){descriptor=getOwnPropertyDescriptor(Symbol2,"asyncDispose");if(descriptor.enumerable&&descriptor.configurable&&descriptor.writable){defineProperty(Symbol2,"asyncDispose",{value:descriptor.value,enumerable:false,configurable:false,writable:false});}}var descriptor;}});// node_modules/core-js/modules/es.symbol.async-iterator.js
var require_es_symbol_async_iterator=__commonJS({"node_modules/core-js/modules/es.symbol.async-iterator.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("asyncIterator");}});// node_modules/core-js/modules/es.symbol.dispose.js
var require_es_symbol_dispose=__commonJS({"node_modules/core-js/modules/es.symbol.dispose.js"(){"use strict";var globalThis2=require_global_this();var defineWellKnownSymbol=require_well_known_symbol_define();var defineProperty=require_object_define_property().f;var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var Symbol2=globalThis2.Symbol;defineWellKnownSymbol("dispose");if(Symbol2){descriptor=getOwnPropertyDescriptor(Symbol2,"dispose");if(descriptor.enumerable&&descriptor.configurable&&descriptor.writable){defineProperty(Symbol2,"dispose",{value:descriptor.value,enumerable:false,configurable:false,writable:false});}}var descriptor;}});// node_modules/core-js/modules/es.symbol.has-instance.js
var require_es_symbol_has_instance=__commonJS({"node_modules/core-js/modules/es.symbol.has-instance.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("hasInstance");}});// node_modules/core-js/modules/es.symbol.is-concat-spreadable.js
var require_es_symbol_is_concat_spreadable=__commonJS({"node_modules/core-js/modules/es.symbol.is-concat-spreadable.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("isConcatSpreadable");}});// node_modules/core-js/modules/es.symbol.iterator.js
var require_es_symbol_iterator=__commonJS({"node_modules/core-js/modules/es.symbol.iterator.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("iterator");}});// node_modules/core-js/modules/es.symbol.match.js
var require_es_symbol_match=__commonJS({"node_modules/core-js/modules/es.symbol.match.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("match");}});// node_modules/core-js/modules/es.symbol.match-all.js
var require_es_symbol_match_all=__commonJS({"node_modules/core-js/modules/es.symbol.match-all.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("matchAll");}});// node_modules/core-js/modules/es.symbol.replace.js
var require_es_symbol_replace=__commonJS({"node_modules/core-js/modules/es.symbol.replace.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("replace");}});// node_modules/core-js/modules/es.symbol.search.js
var require_es_symbol_search=__commonJS({"node_modules/core-js/modules/es.symbol.search.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("search");}});// node_modules/core-js/modules/es.symbol.species.js
var require_es_symbol_species=__commonJS({"node_modules/core-js/modules/es.symbol.species.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("species");}});// node_modules/core-js/modules/es.symbol.split.js
var require_es_symbol_split=__commonJS({"node_modules/core-js/modules/es.symbol.split.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("split");}});// node_modules/core-js/modules/es.symbol.to-primitive.js
var require_es_symbol_to_primitive=__commonJS({"node_modules/core-js/modules/es.symbol.to-primitive.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();var defineSymbolToPrimitive=require_symbol_define_to_primitive();defineWellKnownSymbol("toPrimitive");defineSymbolToPrimitive();}});// node_modules/core-js/modules/es.symbol.to-string-tag.js
var require_es_symbol_to_string_tag=__commonJS({"node_modules/core-js/modules/es.symbol.to-string-tag.js"(){"use strict";var getBuiltIn=require_get_built_in();var defineWellKnownSymbol=require_well_known_symbol_define();var setToStringTag=require_set_to_string_tag();defineWellKnownSymbol("toStringTag");setToStringTag(getBuiltIn("Symbol"),"Symbol");}});// node_modules/core-js/modules/es.symbol.unscopables.js
var require_es_symbol_unscopables=__commonJS({"node_modules/core-js/modules/es.symbol.unscopables.js"(){"use strict";var defineWellKnownSymbol=require_well_known_symbol_define();defineWellKnownSymbol("unscopables");}});// node_modules/core-js/internals/function-uncurry-this-accessor.js
var require_function_uncurry_this_accessor=__commonJS({"node_modules/core-js/internals/function-uncurry-this-accessor.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();module2.exports=function(object,key,method){try{return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object,key)[method]));}catch(error){}};}});// node_modules/core-js/internals/is-possible-prototype.js
var require_is_possible_prototype=__commonJS({"node_modules/core-js/internals/is-possible-prototype.js"(exports,module2){"use strict";var isObject=require_is_object();module2.exports=function(argument){return isObject(argument)||argument===null;};}});// node_modules/core-js/internals/a-possible-prototype.js
var require_a_possible_prototype=__commonJS({"node_modules/core-js/internals/a-possible-prototype.js"(exports,module2){"use strict";var isPossiblePrototype=require_is_possible_prototype();var $String=String;var $TypeError=TypeError;module2.exports=function(argument){if(isPossiblePrototype(argument))return argument;throw new $TypeError("Can't set "+$String(argument)+" as a prototype");};}});// node_modules/core-js/internals/object-set-prototype-of.js
var require_object_set_prototype_of=__commonJS({"node_modules/core-js/internals/object-set-prototype-of.js"(exports,module2){"use strict";var uncurryThisAccessor=require_function_uncurry_this_accessor();var isObject=require_is_object();var requireObjectCoercible=require_require_object_coercible();var aPossiblePrototype=require_a_possible_prototype();module2.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var CORRECT_SETTER=false;var test={};var setter;try{setter=uncurryThisAccessor(Object.prototype,"__proto__","set");setter(test,[]);CORRECT_SETTER=test instanceof Array;}catch(error){}return function setPrototypeOf(O,proto){requireObjectCoercible(O);aPossiblePrototype(proto);if(!isObject(O))return O;if(CORRECT_SETTER)setter(O,proto);else O.__proto__=proto;return O;};}():void 0);}});// node_modules/core-js/internals/proxy-accessor.js
var require_proxy_accessor=__commonJS({"node_modules/core-js/internals/proxy-accessor.js"(exports,module2){"use strict";var defineProperty=require_object_define_property().f;module2.exports=function(Target,Source,key){key in Target||defineProperty(Target,key,{configurable:true,get:function(){return Source[key];},set:function(it){Source[key]=it;}});};}});// node_modules/core-js/internals/inherit-if-required.js
var require_inherit_if_required=__commonJS({"node_modules/core-js/internals/inherit-if-required.js"(exports,module2){"use strict";var isCallable=require_is_callable();var isObject=require_is_object();var setPrototypeOf=require_object_set_prototype_of();module2.exports=function($this,dummy2,Wrapper){var NewTarget,NewTargetPrototype;if(// it can work only with native `setPrototypeOf`
setPrototypeOf&&// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
isCallable(NewTarget=dummy2.constructor)&&NewTarget!==Wrapper&&isObject(NewTargetPrototype=NewTarget.prototype)&&NewTargetPrototype!==Wrapper.prototype)setPrototypeOf($this,NewTargetPrototype);return $this;};}});// node_modules/core-js/internals/normalize-string-argument.js
var require_normalize_string_argument=__commonJS({"node_modules/core-js/internals/normalize-string-argument.js"(exports,module2){"use strict";var toString=require_to_string();module2.exports=function(argument,$default){return argument===void 0?arguments.length<2?"":$default:toString(argument);};}});// node_modules/core-js/internals/install-error-cause.js
var require_install_error_cause=__commonJS({"node_modules/core-js/internals/install-error-cause.js"(exports,module2){"use strict";var isObject=require_is_object();var createNonEnumerableProperty=require_create_non_enumerable_property();module2.exports=function(O,options){if(isObject(options)&&"cause"in options){createNonEnumerableProperty(O,"cause",options.cause);}};}});// node_modules/core-js/internals/error-stack-clear.js
var require_error_stack_clear=__commonJS({"node_modules/core-js/internals/error-stack-clear.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var $Error=Error;var replace=uncurryThis("".replace);var TEST=function(arg){return String(new $Error(arg).stack);}("zxcasd");var V8_OR_CHAKRA_STACK_ENTRY=/\n\s*at [^:]*:[^\n]*/;var IS_V8_OR_CHAKRA_STACK=V8_OR_CHAKRA_STACK_ENTRY.test(TEST);module2.exports=function(stack,dropEntries){if(IS_V8_OR_CHAKRA_STACK&&typeof stack=="string"&&!$Error.prepareStackTrace){while(dropEntries--)stack=replace(stack,V8_OR_CHAKRA_STACK_ENTRY,"");}return stack;};}});// node_modules/core-js/internals/error-stack-installable.js
var require_error_stack_installable=__commonJS({"node_modules/core-js/internals/error-stack-installable.js"(exports,module2){"use strict";var fails=require_fails();var createPropertyDescriptor=require_create_property_descriptor();module2.exports=!fails(function(){var error=new Error("a");if(!("stack"in error))return true;Object.defineProperty(error,"stack",createPropertyDescriptor(1,7));return error.stack!==7;});}});// node_modules/core-js/internals/error-stack-install.js
var require_error_stack_install=__commonJS({"node_modules/core-js/internals/error-stack-install.js"(exports,module2){"use strict";var createNonEnumerableProperty=require_create_non_enumerable_property();var clearErrorStack=require_error_stack_clear();var ERROR_STACK_INSTALLABLE=require_error_stack_installable();var captureStackTrace=Error.captureStackTrace;module2.exports=function(error,C,stack,dropEntries){if(ERROR_STACK_INSTALLABLE){if(captureStackTrace)captureStackTrace(error,C);else createNonEnumerableProperty(error,"stack",clearErrorStack(stack,dropEntries));}};}});// node_modules/core-js/internals/wrap-error-constructor-with-cause.js
var require_wrap_error_constructor_with_cause=__commonJS({"node_modules/core-js/internals/wrap-error-constructor-with-cause.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var hasOwn=require_has_own_property();var createNonEnumerableProperty=require_create_non_enumerable_property();var isPrototypeOf=require_object_is_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var copyConstructorProperties=require_copy_constructor_properties();var proxyAccessor=require_proxy_accessor();var inheritIfRequired=require_inherit_if_required();var normalizeStringArgument=require_normalize_string_argument();var installErrorCause=require_install_error_cause();var installErrorStack=require_error_stack_install();var DESCRIPTORS=require_descriptors();var IS_PURE=require_is_pure();module2.exports=function(FULL_NAME,wrapper,FORCED,IS_AGGREGATE_ERROR){var STACK_TRACE_LIMIT="stackTraceLimit";var OPTIONS_POSITION=IS_AGGREGATE_ERROR?2:1;var path=FULL_NAME.split(".");var ERROR_NAME=path[path.length-1];var OriginalError=getBuiltIn.apply(null,path);if(!OriginalError)return;var OriginalErrorPrototype=OriginalError.prototype;if(!IS_PURE&&hasOwn(OriginalErrorPrototype,"cause"))delete OriginalErrorPrototype.cause;if(!FORCED)return OriginalError;var BaseError=getBuiltIn("Error");var WrappedError=wrapper(function(a,b){var message=normalizeStringArgument(IS_AGGREGATE_ERROR?b:a,void 0);var result=IS_AGGREGATE_ERROR?new OriginalError(a):new OriginalError();if(message!==void 0)createNonEnumerableProperty(result,"message",message);installErrorStack(result,WrappedError,result.stack,2);if(this&&isPrototypeOf(OriginalErrorPrototype,this))inheritIfRequired(result,this,WrappedError);if(arguments.length>OPTIONS_POSITION)installErrorCause(result,arguments[OPTIONS_POSITION]);return result;});WrappedError.prototype=OriginalErrorPrototype;if(ERROR_NAME!=="Error"){if(setPrototypeOf)setPrototypeOf(WrappedError,BaseError);else copyConstructorProperties(WrappedError,BaseError,{name:true});}else if(DESCRIPTORS&&STACK_TRACE_LIMIT in OriginalError){proxyAccessor(WrappedError,OriginalError,STACK_TRACE_LIMIT);proxyAccessor(WrappedError,OriginalError,"prepareStackTrace");}copyConstructorProperties(WrappedError,OriginalError);if(!IS_PURE)try{if(OriginalErrorPrototype.name!==ERROR_NAME){createNonEnumerableProperty(OriginalErrorPrototype,"name",ERROR_NAME);}OriginalErrorPrototype.constructor=WrappedError;}catch(error){}return WrappedError;};}});// node_modules/core-js/modules/es.error.cause.js
var require_es_error_cause=__commonJS({"node_modules/core-js/modules/es.error.cause.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var apply=require_function_apply();var wrapErrorConstructorWithCause=require_wrap_error_constructor_with_cause();var WEB_ASSEMBLY="WebAssembly";var WebAssembly2=globalThis2[WEB_ASSEMBLY];var FORCED=new Error("e",{cause:7}).cause!==7;var exportGlobalErrorCauseWrapper=function(ERROR_NAME,wrapper){var O={};O[ERROR_NAME]=wrapErrorConstructorWithCause(ERROR_NAME,wrapper,FORCED);$({global:true,constructor:true,arity:1,forced:FORCED},O);};var exportWebAssemblyErrorCauseWrapper=function(ERROR_NAME,wrapper){if(WebAssembly2&&WebAssembly2[ERROR_NAME]){var O={};O[ERROR_NAME]=wrapErrorConstructorWithCause(WEB_ASSEMBLY+"."+ERROR_NAME,wrapper,FORCED);$({target:WEB_ASSEMBLY,stat:true,constructor:true,arity:1,forced:FORCED},O);}};exportGlobalErrorCauseWrapper("Error",function(init){return function Error2(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("EvalError",function(init){return function EvalError(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("RangeError",function(init){return function RangeError2(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("ReferenceError",function(init){return function ReferenceError2(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("SyntaxError",function(init){return function SyntaxError2(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("TypeError",function(init){return function TypeError2(message){return apply(init,this,arguments);};});exportGlobalErrorCauseWrapper("URIError",function(init){return function URIError(message){return apply(init,this,arguments);};});exportWebAssemblyErrorCauseWrapper("CompileError",function(init){return function CompileError(message){return apply(init,this,arguments);};});exportWebAssemblyErrorCauseWrapper("LinkError",function(init){return function LinkError(message){return apply(init,this,arguments);};});exportWebAssemblyErrorCauseWrapper("RuntimeError",function(init){return function RuntimeError(message){return apply(init,this,arguments);};});}});// node_modules/core-js/modules/es.error.is-error.js
var require_es_error_is_error=__commonJS({"node_modules/core-js/modules/es.error.is-error.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var isObject=require_is_object();var classof=require_classof();var fails=require_fails();var ERROR="Error";var DOM_EXCEPTION="DOMException";var PROTOTYPE_SETTING_AVAILABLE=Object.setPrototypeOf||{}.__proto__;var DOMException=getBuiltIn(DOM_EXCEPTION);var $Error=Error;var $isError=$Error.isError;var FORCED=!$isError||!PROTOTYPE_SETTING_AVAILABLE||fails(function(){return DOMException&&!$isError(new DOMException(DOM_EXCEPTION))||// structuredClone-based implementations
// eslint-disable-next-line es/no-error-cause -- detection
!$isError(new $Error(ERROR,{cause:function(){}}))||// instanceof-based and FF Error#stack-based implementations
$isError(getBuiltIn("Object","create")($Error.prototype));});$({target:"Error",stat:true,sham:true,forced:FORCED},{isError:function isError(arg){if(!isObject(arg))return false;var tag=classof(arg);return tag===ERROR||tag===DOM_EXCEPTION;}});}});// node_modules/core-js/internals/error-to-string.js
var require_error_to_string=__commonJS({"node_modules/core-js/internals/error-to-string.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var fails=require_fails();var anObject=require_an_object();var normalizeStringArgument=require_normalize_string_argument();var nativeErrorToString=Error.prototype.toString;var INCORRECT_TO_STRING=fails(function(){if(DESCRIPTORS){var object=Object.create(Object.defineProperty({},"name",{get:function(){return this===object;}}));if(nativeErrorToString.call(object)!=="true")return true;}return nativeErrorToString.call({message:1,name:2})!=="2: 1"||nativeErrorToString.call({})!=="Error";});module2.exports=INCORRECT_TO_STRING?function toString(){var O=anObject(this);var name=normalizeStringArgument(O.name,"Error");var message=normalizeStringArgument(O.message);return!name?message:!message?name:name+": "+message;}:nativeErrorToString;}});// node_modules/core-js/modules/es.error.to-string.js
var require_es_error_to_string=__commonJS({"node_modules/core-js/modules/es.error.to-string.js"(){"use strict";var defineBuiltIn=require_define_built_in();var errorToString=require_error_to_string();var ErrorPrototype=Error.prototype;if(ErrorPrototype.toString!==errorToString){defineBuiltIn(ErrorPrototype,"toString",errorToString);}}});// node_modules/core-js/internals/correct-prototype-getter.js
var require_correct_prototype_getter=__commonJS({"node_modules/core-js/internals/correct-prototype-getter.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=!fails(function(){function F(){}F.prototype.constructor=null;return Object.getPrototypeOf(new F())!==F.prototype;});}});// node_modules/core-js/internals/object-get-prototype-of.js
var require_object_get_prototype_of=__commonJS({"node_modules/core-js/internals/object-get-prototype-of.js"(exports,module2){"use strict";var hasOwn=require_has_own_property();var isCallable=require_is_callable();var toObject=require_to_object();var sharedKey=require_shared_key();var CORRECT_PROTOTYPE_GETTER=require_correct_prototype_getter();var IE_PROTO=sharedKey("IE_PROTO");var $Object=Object;var ObjectPrototype=$Object.prototype;module2.exports=CORRECT_PROTOTYPE_GETTER?$Object.getPrototypeOf:function(O){var object=toObject(O);if(hasOwn(object,IE_PROTO))return object[IE_PROTO];var constructor=object.constructor;if(isCallable(constructor)&&object instanceof constructor){return constructor.prototype;}return object instanceof $Object?ObjectPrototype:null;};}});// node_modules/core-js/internals/iterators.js
var require_iterators=__commonJS({"node_modules/core-js/internals/iterators.js"(exports,module2){"use strict";module2.exports={};}});// node_modules/core-js/internals/is-array-iterator-method.js
var require_is_array_iterator_method=__commonJS({"node_modules/core-js/internals/is-array-iterator-method.js"(exports,module2){"use strict";var wellKnownSymbol=require_well_known_symbol();var Iterators=require_iterators();var ITERATOR=wellKnownSymbol("iterator");var ArrayPrototype=Array.prototype;module2.exports=function(it){return it!==void 0&&(Iterators.Array===it||ArrayPrototype[ITERATOR]===it);};}});// node_modules/core-js/internals/get-iterator-method.js
var require_get_iterator_method=__commonJS({"node_modules/core-js/internals/get-iterator-method.js"(exports,module2){"use strict";var classof=require_classof();var getMethod=require_get_method();var isNullOrUndefined=require_is_null_or_undefined();var Iterators=require_iterators();var wellKnownSymbol=require_well_known_symbol();var ITERATOR=wellKnownSymbol("iterator");module2.exports=function(it){if(!isNullOrUndefined(it))return getMethod(it,ITERATOR)||getMethod(it,"@@iterator")||Iterators[classof(it)];};}});// node_modules/core-js/internals/get-iterator.js
var require_get_iterator=__commonJS({"node_modules/core-js/internals/get-iterator.js"(exports,module2){"use strict";var call=require_function_call();var aCallable=require_a_callable();var anObject=require_an_object();var tryToString=require_try_to_string();var getIteratorMethod=require_get_iterator_method();var $TypeError=TypeError;module2.exports=function(argument,usingIterator){var iteratorMethod=arguments.length<2?getIteratorMethod(argument):usingIterator;if(aCallable(iteratorMethod))return anObject(call(iteratorMethod,argument));throw new $TypeError(tryToString(argument)+" is not iterable");};}});// node_modules/core-js/internals/iterator-close.js
var require_iterator_close=__commonJS({"node_modules/core-js/internals/iterator-close.js"(exports,module2){"use strict";var call=require_function_call();var anObject=require_an_object();var getMethod=require_get_method();module2.exports=function(iterator,kind,value){var innerResult,innerError;anObject(iterator);try{innerResult=getMethod(iterator,"return");if(!innerResult){if(kind==="throw")throw value;return value;}innerResult=call(innerResult,iterator);}catch(error){innerError=true;innerResult=error;}if(kind==="throw")throw value;if(innerError)throw innerResult;anObject(innerResult);return value;};}});// node_modules/core-js/internals/iterate.js
var require_iterate=__commonJS({"node_modules/core-js/internals/iterate.js"(exports,module2){"use strict";var bind=require_function_bind_context();var call=require_function_call();var anObject=require_an_object();var tryToString=require_try_to_string();var isArrayIteratorMethod=require_is_array_iterator_method();var lengthOfArrayLike=require_length_of_array_like();var isPrototypeOf=require_object_is_prototype_of();var getIterator=require_get_iterator();var getIteratorMethod=require_get_iterator_method();var iteratorClose=require_iterator_close();var $TypeError=TypeError;var Result=function(stopped,result){this.stopped=stopped;this.result=result;};var ResultPrototype=Result.prototype;module2.exports=function(iterable,unboundFunction,options){var that=options&&options.that;var AS_ENTRIES=!!(options&&options.AS_ENTRIES);var IS_RECORD=!!(options&&options.IS_RECORD);var IS_ITERATOR=!!(options&&options.IS_ITERATOR);var INTERRUPTED=!!(options&&options.INTERRUPTED);var fn=bind(unboundFunction,that);var iterator,iterFn,index,length,result,next,step;var stop=function(condition){if(iterator)iteratorClose(iterator,"normal");return new Result(true,condition);};var callFn=function(value){if(AS_ENTRIES){anObject(value);return INTERRUPTED?fn(value[0],value[1],stop):fn(value[0],value[1]);}return INTERRUPTED?fn(value,stop):fn(value);};if(IS_RECORD){iterator=iterable.iterator;}else if(IS_ITERATOR){iterator=iterable;}else{iterFn=getIteratorMethod(iterable);if(!iterFn)throw new $TypeError(tryToString(iterable)+" is not iterable");if(isArrayIteratorMethod(iterFn)){for(index=0,length=lengthOfArrayLike(iterable);length>index;index++){result=callFn(iterable[index]);if(result&&isPrototypeOf(ResultPrototype,result))return result;}return new Result(false);}iterator=getIterator(iterable,iterFn);}next=IS_RECORD?iterable.next:iterator.next;while(!(step=call(next,iterator)).done){try{result=callFn(step.value);}catch(error){iteratorClose(iterator,"throw",error);}if(typeof result=="object"&&result&&isPrototypeOf(ResultPrototype,result))return result;}return new Result(false);};}});// node_modules/core-js/modules/es.aggregate-error.constructor.js
var require_es_aggregate_error_constructor=__commonJS({"node_modules/core-js/modules/es.aggregate-error.constructor.js"(){"use strict";var $=require_export();var isPrototypeOf=require_object_is_prototype_of();var getPrototypeOf=require_object_get_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var copyConstructorProperties=require_copy_constructor_properties();var create=require_object_create();var createNonEnumerableProperty=require_create_non_enumerable_property();var createPropertyDescriptor=require_create_property_descriptor();var installErrorCause=require_install_error_cause();var installErrorStack=require_error_stack_install();var iterate=require_iterate();var normalizeStringArgument=require_normalize_string_argument();var wellKnownSymbol=require_well_known_symbol();var TO_STRING_TAG=wellKnownSymbol("toStringTag");var $Error=Error;var push=[].push;var $AggregateError=function AggregateError(errors,message){var isInstance=isPrototypeOf(AggregateErrorPrototype,this);var that;if(setPrototypeOf){that=setPrototypeOf(new $Error(),isInstance?getPrototypeOf(this):AggregateErrorPrototype);}else{that=isInstance?this:create(AggregateErrorPrototype);createNonEnumerableProperty(that,TO_STRING_TAG,"Error");}if(message!==void 0)createNonEnumerableProperty(that,"message",normalizeStringArgument(message));installErrorStack(that,$AggregateError,that.stack,1);if(arguments.length>2)installErrorCause(that,arguments[2]);var errorsArray=[];iterate(errors,push,{that:errorsArray});createNonEnumerableProperty(that,"errors",errorsArray);return that;};if(setPrototypeOf)setPrototypeOf($AggregateError,$Error);else copyConstructorProperties($AggregateError,$Error,{name:true});var AggregateErrorPrototype=$AggregateError.prototype=create($Error.prototype,{constructor:createPropertyDescriptor(1,$AggregateError),message:createPropertyDescriptor(1,""),name:createPropertyDescriptor(1,"AggregateError")});$({global:true,constructor:true,arity:2},{AggregateError:$AggregateError});}});// node_modules/core-js/modules/es.aggregate-error.js
var require_es_aggregate_error=__commonJS({"node_modules/core-js/modules/es.aggregate-error.js"(){"use strict";require_es_aggregate_error_constructor();}});// node_modules/core-js/modules/es.aggregate-error.cause.js
var require_es_aggregate_error_cause=__commonJS({"node_modules/core-js/modules/es.aggregate-error.cause.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var apply=require_function_apply();var fails=require_fails();var wrapErrorConstructorWithCause=require_wrap_error_constructor_with_cause();var AGGREGATE_ERROR="AggregateError";var $AggregateError=getBuiltIn(AGGREGATE_ERROR);var FORCED=!fails(function(){return $AggregateError([1]).errors[0]!==1;})&&fails(function(){return $AggregateError([1],AGGREGATE_ERROR,{cause:7}).cause!==7;});$({global:true,constructor:true,arity:2,forced:FORCED},{AggregateError:wrapErrorConstructorWithCause(AGGREGATE_ERROR,function(init){return function AggregateError(errors,message){return apply(init,this,arguments);};},FORCED,true)});}});// node_modules/core-js/modules/es.suppressed-error.constructor.js
var require_es_suppressed_error_constructor=__commonJS({"node_modules/core-js/modules/es.suppressed-error.constructor.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var isPrototypeOf=require_object_is_prototype_of();var getPrototypeOf=require_object_get_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var copyConstructorProperties=require_copy_constructor_properties();var create=require_object_create();var createNonEnumerableProperty=require_create_non_enumerable_property();var createPropertyDescriptor=require_create_property_descriptor();var installErrorStack=require_error_stack_install();var normalizeStringArgument=require_normalize_string_argument();var wellKnownSymbol=require_well_known_symbol();var fails=require_fails();var IS_PURE=require_is_pure();var NativeSuppressedError=globalThis2.SuppressedError;var TO_STRING_TAG=wellKnownSymbol("toStringTag");var $Error=Error;var WRONG_ARITY=!!NativeSuppressedError&&NativeSuppressedError.length!==3;var EXTRA_ARGS_SUPPORT=!!NativeSuppressedError&&fails(function(){return new NativeSuppressedError(1,2,3,{cause:4}).cause===4;});var PATCH=WRONG_ARITY||EXTRA_ARGS_SUPPORT;var $SuppressedError=function SuppressedError2(error,suppressed,message){var isInstance=isPrototypeOf(SuppressedErrorPrototype,this);var that;if(setPrototypeOf){that=PATCH&&(!isInstance||getPrototypeOf(this)===SuppressedErrorPrototype)?new NativeSuppressedError():setPrototypeOf(new $Error(),isInstance?getPrototypeOf(this):SuppressedErrorPrototype);}else{that=isInstance?this:create(SuppressedErrorPrototype);createNonEnumerableProperty(that,TO_STRING_TAG,"Error");}if(message!==void 0)createNonEnumerableProperty(that,"message",normalizeStringArgument(message));installErrorStack(that,$SuppressedError,that.stack,1);createNonEnumerableProperty(that,"error",error);createNonEnumerableProperty(that,"suppressed",suppressed);return that;};if(setPrototypeOf)setPrototypeOf($SuppressedError,$Error);else copyConstructorProperties($SuppressedError,$Error,{name:true});var SuppressedErrorPrototype=$SuppressedError.prototype=PATCH?NativeSuppressedError.prototype:create($Error.prototype,{constructor:createPropertyDescriptor(1,$SuppressedError),message:createPropertyDescriptor(1,""),name:createPropertyDescriptor(1,"SuppressedError")});if(PATCH&&!IS_PURE)SuppressedErrorPrototype.constructor=$SuppressedError;$({global:true,constructor:true,arity:3,forced:PATCH},{SuppressedError:$SuppressedError});}});// node_modules/core-js/internals/add-to-unscopables.js
var require_add_to_unscopables=__commonJS({"node_modules/core-js/internals/add-to-unscopables.js"(exports,module2){"use strict";var wellKnownSymbol=require_well_known_symbol();var create=require_object_create();var defineProperty=require_object_define_property().f;var UNSCOPABLES=wellKnownSymbol("unscopables");var ArrayPrototype=Array.prototype;if(ArrayPrototype[UNSCOPABLES]===void 0){defineProperty(ArrayPrototype,UNSCOPABLES,{configurable:true,value:create(null)});}module2.exports=function(key){ArrayPrototype[UNSCOPABLES][key]=true;};}});// node_modules/core-js/modules/es.array.at.js
var require_es_array_at=__commonJS({"node_modules/core-js/modules/es.array.at.js"(){"use strict";var $=require_export();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var toIntegerOrInfinity=require_to_integer_or_infinity();var addToUnscopables=require_add_to_unscopables();$({target:"Array",proto:true},{at:function at(index){var O=toObject(this);var len=lengthOfArrayLike(O);var relativeIndex=toIntegerOrInfinity(index);var k=relativeIndex>=0?relativeIndex:len+relativeIndex;return k<0||k>=len?void 0:O[k];}});addToUnscopables("at");}});// node_modules/core-js/internals/does-not-exceed-safe-integer.js
var require_does_not_exceed_safe_integer=__commonJS({"node_modules/core-js/internals/does-not-exceed-safe-integer.js"(exports,module2){"use strict";var $TypeError=TypeError;var MAX_SAFE_INTEGER=9007199254740991;module2.exports=function(it){if(it>MAX_SAFE_INTEGER)throw $TypeError("Maximum allowed index exceeded");return it;};}});// node_modules/core-js/internals/create-property.js
var require_create_property=__commonJS({"node_modules/core-js/internals/create-property.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var definePropertyModule=require_object_define_property();var createPropertyDescriptor=require_create_property_descriptor();module2.exports=function(object,key,value){if(DESCRIPTORS)definePropertyModule.f(object,key,createPropertyDescriptor(0,value));else object[key]=value;};}});// node_modules/core-js/internals/array-method-has-species-support.js
var require_array_method_has_species_support=__commonJS({"node_modules/core-js/internals/array-method-has-species-support.js"(exports,module2){"use strict";var fails=require_fails();var wellKnownSymbol=require_well_known_symbol();var V8_VERSION=require_environment_v8_version();var SPECIES=wellKnownSymbol("species");module2.exports=function(METHOD_NAME){return V8_VERSION>=51||!fails(function(){var array=[];var constructor=array.constructor={};constructor[SPECIES]=function(){return{foo:1};};return array[METHOD_NAME](Boolean).foo!==1;});};}});// node_modules/core-js/modules/es.array.concat.js
var require_es_array_concat=__commonJS({"node_modules/core-js/modules/es.array.concat.js"(){"use strict";var $=require_export();var fails=require_fails();var isArray=require_is_array();var isObject=require_is_object();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var createProperty=require_create_property();var arraySpeciesCreate=require_array_species_create();var arrayMethodHasSpeciesSupport=require_array_method_has_species_support();var wellKnownSymbol=require_well_known_symbol();var V8_VERSION=require_environment_v8_version();var IS_CONCAT_SPREADABLE=wellKnownSymbol("isConcatSpreadable");var IS_CONCAT_SPREADABLE_SUPPORT=V8_VERSION>=51||!fails(function(){var array=[];array[IS_CONCAT_SPREADABLE]=false;return array.concat()[0]!==array;});var isConcatSpreadable=function(O){if(!isObject(O))return false;var spreadable=O[IS_CONCAT_SPREADABLE];return spreadable!==void 0?!!spreadable:isArray(O);};var FORCED=!IS_CONCAT_SPREADABLE_SUPPORT||!arrayMethodHasSpeciesSupport("concat");$({target:"Array",proto:true,arity:1,forced:FORCED},{// eslint-disable-next-line no-unused-vars -- required for `.length`
concat:function concat(arg){var O=toObject(this);var A=arraySpeciesCreate(O,0);var n=0;var i,k,length,len,E;for(i=-1,length=arguments.length;i<length;i++){E=i===-1?O:arguments[i];if(isConcatSpreadable(E)){len=lengthOfArrayLike(E);doesNotExceedSafeInteger(n+len);for(k=0;k<len;k++,n++)if(k in E)createProperty(A,n,E[k]);}else{doesNotExceedSafeInteger(n+1);createProperty(A,n++,E);}}A.length=n;return A;}});}});// node_modules/core-js/internals/delete-property-or-throw.js
var require_delete_property_or_throw=__commonJS({"node_modules/core-js/internals/delete-property-or-throw.js"(exports,module2){"use strict";var tryToString=require_try_to_string();var $TypeError=TypeError;module2.exports=function(O,P){if(!delete O[P])throw new $TypeError("Cannot delete property "+tryToString(P)+" of "+tryToString(O));};}});// node_modules/core-js/internals/array-copy-within.js
var require_array_copy_within=__commonJS({"node_modules/core-js/internals/array-copy-within.js"(exports,module2){"use strict";var toObject=require_to_object();var toAbsoluteIndex=require_to_absolute_index();var lengthOfArrayLike=require_length_of_array_like();var deletePropertyOrThrow=require_delete_property_or_throw();var min=Math.min;module2.exports=[].copyWithin||function copyWithin(target,start){var O=toObject(this);var len=lengthOfArrayLike(O);var to=toAbsoluteIndex(target,len);var from=toAbsoluteIndex(start,len);var end=arguments.length>2?arguments[2]:void 0;var count=min((end===void 0?len:toAbsoluteIndex(end,len))-from,len-to);var inc=1;if(from<to&&to<from+count){inc=-1;from+=count-1;to+=count-1;}while(count-->0){if(from in O)O[to]=O[from];else deletePropertyOrThrow(O,to);to+=inc;from+=inc;}return O;};}});// node_modules/core-js/modules/es.array.copy-within.js
var require_es_array_copy_within=__commonJS({"node_modules/core-js/modules/es.array.copy-within.js"(){"use strict";var $=require_export();var copyWithin=require_array_copy_within();var addToUnscopables=require_add_to_unscopables();$({target:"Array",proto:true},{copyWithin});addToUnscopables("copyWithin");}});// node_modules/core-js/internals/array-method-is-strict.js
var require_array_method_is_strict=__commonJS({"node_modules/core-js/internals/array-method-is-strict.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=function(METHOD_NAME,argument){var method=[][METHOD_NAME];return!!method&&fails(function(){method.call(null,argument||function(){return 1;},1);});};}});// node_modules/core-js/modules/es.array.every.js
var require_es_array_every=__commonJS({"node_modules/core-js/modules/es.array.every.js"(){"use strict";var $=require_export();var $every=require_array_iteration().every;var arrayMethodIsStrict=require_array_method_is_strict();var STRICT_METHOD=arrayMethodIsStrict("every");$({target:"Array",proto:true,forced:!STRICT_METHOD},{every:function every(callbackfn){return $every(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/internals/array-fill.js
var require_array_fill=__commonJS({"node_modules/core-js/internals/array-fill.js"(exports,module2){"use strict";var toObject=require_to_object();var toAbsoluteIndex=require_to_absolute_index();var lengthOfArrayLike=require_length_of_array_like();module2.exports=function fill(value){var O=toObject(this);var length=lengthOfArrayLike(O);var argumentsLength=arguments.length;var index=toAbsoluteIndex(argumentsLength>1?arguments[1]:void 0,length);var end=argumentsLength>2?arguments[2]:void 0;var endPos=end===void 0?length:toAbsoluteIndex(end,length);while(endPos>index)O[index++]=value;return O;};}});// node_modules/core-js/modules/es.array.fill.js
var require_es_array_fill=__commonJS({"node_modules/core-js/modules/es.array.fill.js"(){"use strict";var $=require_export();var fill=require_array_fill();var addToUnscopables=require_add_to_unscopables();$({target:"Array",proto:true},{fill});addToUnscopables("fill");}});// node_modules/core-js/modules/es.array.filter.js
var require_es_array_filter=__commonJS({"node_modules/core-js/modules/es.array.filter.js"(){"use strict";var $=require_export();var $filter=require_array_iteration().filter;var arrayMethodHasSpeciesSupport=require_array_method_has_species_support();var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("filter");$({target:"Array",proto:true,forced:!HAS_SPECIES_SUPPORT},{filter:function filter(callbackfn){return $filter(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.array.find.js
var require_es_array_find=__commonJS({"node_modules/core-js/modules/es.array.find.js"(){"use strict";var $=require_export();var $find=require_array_iteration().find;var addToUnscopables=require_add_to_unscopables();var FIND="find";var SKIPS_HOLES=true;if(FIND in[])Array(1)[FIND](function(){SKIPS_HOLES=false;});$({target:"Array",proto:true,forced:SKIPS_HOLES},{find:function find(callbackfn){return $find(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});addToUnscopables(FIND);}});// node_modules/core-js/modules/es.array.find-index.js
var require_es_array_find_index=__commonJS({"node_modules/core-js/modules/es.array.find-index.js"(){"use strict";var $=require_export();var $findIndex=require_array_iteration().findIndex;var addToUnscopables=require_add_to_unscopables();var FIND_INDEX="findIndex";var SKIPS_HOLES=true;if(FIND_INDEX in[])Array(1)[FIND_INDEX](function(){SKIPS_HOLES=false;});$({target:"Array",proto:true,forced:SKIPS_HOLES},{findIndex:function findIndex(callbackfn){return $findIndex(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});addToUnscopables(FIND_INDEX);}});// node_modules/core-js/internals/array-iteration-from-last.js
var require_array_iteration_from_last=__commonJS({"node_modules/core-js/internals/array-iteration-from-last.js"(exports,module2){"use strict";var bind=require_function_bind_context();var IndexedObject=require_indexed_object();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var createMethod=function(TYPE){var IS_FIND_LAST_INDEX=TYPE===1;return function($this,callbackfn,that){var O=toObject($this);var self2=IndexedObject(O);var index=lengthOfArrayLike(self2);var boundFunction=bind(callbackfn,that);var value,result;while(index-->0){value=self2[index];result=boundFunction(value,index,O);if(result)switch(TYPE){case 0:return value;// findLast
case 1:return index;}}return IS_FIND_LAST_INDEX?-1:void 0;};};module2.exports={// `Array.prototype.findLast` method
// https://github.com/tc39/proposal-array-find-from-last
findLast:createMethod(0),// `Array.prototype.findLastIndex` method
// https://github.com/tc39/proposal-array-find-from-last
findLastIndex:createMethod(1)};}});// node_modules/core-js/modules/es.array.find-last.js
var require_es_array_find_last=__commonJS({"node_modules/core-js/modules/es.array.find-last.js"(){"use strict";var $=require_export();var $findLast=require_array_iteration_from_last().findLast;var addToUnscopables=require_add_to_unscopables();$({target:"Array",proto:true},{findLast:function findLast(callbackfn){return $findLast(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});addToUnscopables("findLast");}});// node_modules/core-js/modules/es.array.find-last-index.js
var require_es_array_find_last_index=__commonJS({"node_modules/core-js/modules/es.array.find-last-index.js"(){"use strict";var $=require_export();var $findLastIndex=require_array_iteration_from_last().findLastIndex;var addToUnscopables=require_add_to_unscopables();$({target:"Array",proto:true},{findLastIndex:function findLastIndex(callbackfn){return $findLastIndex(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});addToUnscopables("findLastIndex");}});// node_modules/core-js/internals/flatten-into-array.js
var require_flatten_into_array=__commonJS({"node_modules/core-js/internals/flatten-into-array.js"(exports,module2){"use strict";var isArray=require_is_array();var lengthOfArrayLike=require_length_of_array_like();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var bind=require_function_bind_context();var flattenIntoArray=function(target,original,source,sourceLen,start,depth,mapper,thisArg){var targetIndex=start;var sourceIndex=0;var mapFn=mapper?bind(mapper,thisArg):false;var element,elementLen;while(sourceIndex<sourceLen){if(sourceIndex in source){element=mapFn?mapFn(source[sourceIndex],sourceIndex,original):source[sourceIndex];if(depth>0&&isArray(element)){elementLen=lengthOfArrayLike(element);targetIndex=flattenIntoArray(target,original,element,elementLen,targetIndex,depth-1)-1;}else{doesNotExceedSafeInteger(targetIndex+1);target[targetIndex]=element;}targetIndex++;}sourceIndex++;}return targetIndex;};module2.exports=flattenIntoArray;}});// node_modules/core-js/modules/es.array.flat.js
var require_es_array_flat=__commonJS({"node_modules/core-js/modules/es.array.flat.js"(){"use strict";var $=require_export();var flattenIntoArray=require_flatten_into_array();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var toIntegerOrInfinity=require_to_integer_or_infinity();var arraySpeciesCreate=require_array_species_create();$({target:"Array",proto:true},{flat:function flat(){var depthArg=arguments.length?arguments[0]:void 0;var O=toObject(this);var sourceLen=lengthOfArrayLike(O);var A=arraySpeciesCreate(O,0);A.length=flattenIntoArray(A,O,O,sourceLen,0,depthArg===void 0?1:toIntegerOrInfinity(depthArg));return A;}});}});// node_modules/core-js/modules/es.array.flat-map.js
var require_es_array_flat_map=__commonJS({"node_modules/core-js/modules/es.array.flat-map.js"(){"use strict";var $=require_export();var flattenIntoArray=require_flatten_into_array();var aCallable=require_a_callable();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var arraySpeciesCreate=require_array_species_create();$({target:"Array",proto:true},{flatMap:function flatMap(callbackfn){var O=toObject(this);var sourceLen=lengthOfArrayLike(O);var A;aCallable(callbackfn);A=arraySpeciesCreate(O,0);A.length=flattenIntoArray(A,O,O,sourceLen,0,1,callbackfn,arguments.length>1?arguments[1]:void 0);return A;}});}});// node_modules/core-js/internals/array-for-each.js
var require_array_for_each=__commonJS({"node_modules/core-js/internals/array-for-each.js"(exports,module2){"use strict";var $forEach=require_array_iteration().forEach;var arrayMethodIsStrict=require_array_method_is_strict();var STRICT_METHOD=arrayMethodIsStrict("forEach");module2.exports=!STRICT_METHOD?function forEach(callbackfn){return $forEach(this,callbackfn,arguments.length>1?arguments[1]:void 0);}:[].forEach;}});// node_modules/core-js/modules/es.array.for-each.js
var require_es_array_for_each=__commonJS({"node_modules/core-js/modules/es.array.for-each.js"(){"use strict";var $=require_export();var forEach=require_array_for_each();$({target:"Array",proto:true,forced:[].forEach!==forEach},{forEach});}});// node_modules/core-js/internals/call-with-safe-iteration-closing.js
var require_call_with_safe_iteration_closing=__commonJS({"node_modules/core-js/internals/call-with-safe-iteration-closing.js"(exports,module2){"use strict";var anObject=require_an_object();var iteratorClose=require_iterator_close();module2.exports=function(iterator,fn,value,ENTRIES){try{return ENTRIES?fn(anObject(value)[0],value[1]):fn(value);}catch(error){iteratorClose(iterator,"throw",error);}};}});// node_modules/core-js/internals/array-from.js
var require_array_from=__commonJS({"node_modules/core-js/internals/array-from.js"(exports,module2){"use strict";var bind=require_function_bind_context();var call=require_function_call();var toObject=require_to_object();var callWithSafeIterationClosing=require_call_with_safe_iteration_closing();var isArrayIteratorMethod=require_is_array_iterator_method();var isConstructor=require_is_constructor();var lengthOfArrayLike=require_length_of_array_like();var createProperty=require_create_property();var getIterator=require_get_iterator();var getIteratorMethod=require_get_iterator_method();var $Array=Array;module2.exports=function from(arrayLike){var O=toObject(arrayLike);var IS_CONSTRUCTOR=isConstructor(this);var argumentsLength=arguments.length;var mapfn=argumentsLength>1?arguments[1]:void 0;var mapping=mapfn!==void 0;if(mapping)mapfn=bind(mapfn,argumentsLength>2?arguments[2]:void 0);var iteratorMethod=getIteratorMethod(O);var index=0;var length,result,step,iterator,next,value;if(iteratorMethod&&!(this===$Array&&isArrayIteratorMethod(iteratorMethod))){result=IS_CONSTRUCTOR?new this():[];iterator=getIterator(O,iteratorMethod);next=iterator.next;for(;!(step=call(next,iterator)).done;index++){value=mapping?callWithSafeIterationClosing(iterator,mapfn,[step.value,index],true):step.value;createProperty(result,index,value);}}else{length=lengthOfArrayLike(O);result=IS_CONSTRUCTOR?new this(length):$Array(length);for(;length>index;index++){value=mapping?mapfn(O[index],index):O[index];createProperty(result,index,value);}}result.length=index;return result;};}});// node_modules/core-js/internals/check-correctness-of-iteration.js
var require_check_correctness_of_iteration=__commonJS({"node_modules/core-js/internals/check-correctness-of-iteration.js"(exports,module2){"use strict";var wellKnownSymbol=require_well_known_symbol();var ITERATOR=wellKnownSymbol("iterator");var SAFE_CLOSING=false;try{called=0;iteratorWithReturn={next:function(){return{done:!!called++};},"return":function(){SAFE_CLOSING=true;}};iteratorWithReturn[ITERATOR]=function(){return this;};Array.from(iteratorWithReturn,function(){throw 2;});}catch(error){}var called;var iteratorWithReturn;module2.exports=function(exec,SKIP_CLOSING){try{if(!SKIP_CLOSING&&!SAFE_CLOSING)return false;}catch(error){return false;}var ITERATION_SUPPORT=false;try{var object={};object[ITERATOR]=function(){return{next:function(){return{done:ITERATION_SUPPORT=true};}};};exec(object);}catch(error){}return ITERATION_SUPPORT;};}});// node_modules/core-js/modules/es.array.from.js
var require_es_array_from=__commonJS({"node_modules/core-js/modules/es.array.from.js"(){"use strict";var $=require_export();var from=require_array_from();var checkCorrectnessOfIteration=require_check_correctness_of_iteration();var INCORRECT_ITERATION=!checkCorrectnessOfIteration(function(iterable){Array.from(iterable);});$({target:"Array",stat:true,forced:INCORRECT_ITERATION},{from});}});// node_modules/core-js/modules/es.array.includes.js
var require_es_array_includes=__commonJS({"node_modules/core-js/modules/es.array.includes.js"(){"use strict";var $=require_export();var $includes=require_array_includes().includes;var fails=require_fails();var addToUnscopables=require_add_to_unscopables();var BROKEN_ON_SPARSE=fails(function(){return!Array(1).includes();});$({target:"Array",proto:true,forced:BROKEN_ON_SPARSE},{includes:function includes(el){return $includes(this,el,arguments.length>1?arguments[1]:void 0);}});addToUnscopables("includes");}});// node_modules/core-js/modules/es.array.index-of.js
var require_es_array_index_of=__commonJS({"node_modules/core-js/modules/es.array.index-of.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this_clause();var $indexOf=require_array_includes().indexOf;var arrayMethodIsStrict=require_array_method_is_strict();var nativeIndexOf=uncurryThis([].indexOf);var NEGATIVE_ZERO=!!nativeIndexOf&&1/nativeIndexOf([1],1,-0)<0;var FORCED=NEGATIVE_ZERO||!arrayMethodIsStrict("indexOf");$({target:"Array",proto:true,forced:FORCED},{indexOf:function indexOf(searchElement){var fromIndex=arguments.length>1?arguments[1]:void 0;return NEGATIVE_ZERO?nativeIndexOf(this,searchElement,fromIndex)||0:$indexOf(this,searchElement,fromIndex);}});}});// node_modules/core-js/modules/es.array.is-array.js
var require_es_array_is_array=__commonJS({"node_modules/core-js/modules/es.array.is-array.js"(){"use strict";var $=require_export();var isArray=require_is_array();$({target:"Array",stat:true},{isArray});}});// node_modules/core-js/internals/iterators-core.js
var require_iterators_core=__commonJS({"node_modules/core-js/internals/iterators-core.js"(exports,module2){"use strict";var fails=require_fails();var isCallable=require_is_callable();var isObject=require_is_object();var create=require_object_create();var getPrototypeOf=require_object_get_prototype_of();var defineBuiltIn=require_define_built_in();var wellKnownSymbol=require_well_known_symbol();var IS_PURE=require_is_pure();var ITERATOR=wellKnownSymbol("iterator");var BUGGY_SAFARI_ITERATORS=false;var IteratorPrototype;var PrototypeOfArrayIteratorPrototype;var arrayIterator;if([].keys){arrayIterator=[].keys();if(!("next"in arrayIterator))BUGGY_SAFARI_ITERATORS=true;else{PrototypeOfArrayIteratorPrototype=getPrototypeOf(getPrototypeOf(arrayIterator));if(PrototypeOfArrayIteratorPrototype!==Object.prototype)IteratorPrototype=PrototypeOfArrayIteratorPrototype;}}var NEW_ITERATOR_PROTOTYPE=!isObject(IteratorPrototype)||fails(function(){var test={};return IteratorPrototype[ITERATOR].call(test)!==test;});if(NEW_ITERATOR_PROTOTYPE)IteratorPrototype={};else if(IS_PURE)IteratorPrototype=create(IteratorPrototype);if(!isCallable(IteratorPrototype[ITERATOR])){defineBuiltIn(IteratorPrototype,ITERATOR,function(){return this;});}module2.exports={IteratorPrototype,BUGGY_SAFARI_ITERATORS};}});// node_modules/core-js/internals/iterator-create-constructor.js
var require_iterator_create_constructor=__commonJS({"node_modules/core-js/internals/iterator-create-constructor.js"(exports,module2){"use strict";var IteratorPrototype=require_iterators_core().IteratorPrototype;var create=require_object_create();var createPropertyDescriptor=require_create_property_descriptor();var setToStringTag=require_set_to_string_tag();var Iterators=require_iterators();var returnThis=function(){return this;};module2.exports=function(IteratorConstructor,NAME,next,ENUMERABLE_NEXT){var TO_STRING_TAG=NAME+" Iterator";IteratorConstructor.prototype=create(IteratorPrototype,{next:createPropertyDescriptor(+!ENUMERABLE_NEXT,next)});setToStringTag(IteratorConstructor,TO_STRING_TAG,false,true);Iterators[TO_STRING_TAG]=returnThis;return IteratorConstructor;};}});// node_modules/core-js/internals/iterator-define.js
var require_iterator_define=__commonJS({"node_modules/core-js/internals/iterator-define.js"(exports,module2){"use strict";var $=require_export();var call=require_function_call();var IS_PURE=require_is_pure();var FunctionName=require_function_name();var isCallable=require_is_callable();var createIteratorConstructor=require_iterator_create_constructor();var getPrototypeOf=require_object_get_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var setToStringTag=require_set_to_string_tag();var createNonEnumerableProperty=require_create_non_enumerable_property();var defineBuiltIn=require_define_built_in();var wellKnownSymbol=require_well_known_symbol();var Iterators=require_iterators();var IteratorsCore=require_iterators_core();var PROPER_FUNCTION_NAME=FunctionName.PROPER;var CONFIGURABLE_FUNCTION_NAME=FunctionName.CONFIGURABLE;var IteratorPrototype=IteratorsCore.IteratorPrototype;var BUGGY_SAFARI_ITERATORS=IteratorsCore.BUGGY_SAFARI_ITERATORS;var ITERATOR=wellKnownSymbol("iterator");var KEYS="keys";var VALUES="values";var ENTRIES="entries";var returnThis=function(){return this;};module2.exports=function(Iterable,NAME,IteratorConstructor,next,DEFAULT,IS_SET,FORCED){createIteratorConstructor(IteratorConstructor,NAME,next);var getIterationMethod=function(KIND){if(KIND===DEFAULT&&defaultIterator)return defaultIterator;if(!BUGGY_SAFARI_ITERATORS&&KIND&&KIND in IterablePrototype)return IterablePrototype[KIND];switch(KIND){case KEYS:return function keys(){return new IteratorConstructor(this,KIND);};case VALUES:return function values(){return new IteratorConstructor(this,KIND);};case ENTRIES:return function entries(){return new IteratorConstructor(this,KIND);};}return function(){return new IteratorConstructor(this);};};var TO_STRING_TAG=NAME+" Iterator";var INCORRECT_VALUES_NAME=false;var IterablePrototype=Iterable.prototype;var nativeIterator=IterablePrototype[ITERATOR]||IterablePrototype["@@iterator"]||DEFAULT&&IterablePrototype[DEFAULT];var defaultIterator=!BUGGY_SAFARI_ITERATORS&&nativeIterator||getIterationMethod(DEFAULT);var anyNativeIterator=NAME==="Array"?IterablePrototype.entries||nativeIterator:nativeIterator;var CurrentIteratorPrototype,methods,KEY;if(anyNativeIterator){CurrentIteratorPrototype=getPrototypeOf(anyNativeIterator.call(new Iterable()));if(CurrentIteratorPrototype!==Object.prototype&&CurrentIteratorPrototype.next){if(!IS_PURE&&getPrototypeOf(CurrentIteratorPrototype)!==IteratorPrototype){if(setPrototypeOf){setPrototypeOf(CurrentIteratorPrototype,IteratorPrototype);}else if(!isCallable(CurrentIteratorPrototype[ITERATOR])){defineBuiltIn(CurrentIteratorPrototype,ITERATOR,returnThis);}}setToStringTag(CurrentIteratorPrototype,TO_STRING_TAG,true,true);if(IS_PURE)Iterators[TO_STRING_TAG]=returnThis;}}if(PROPER_FUNCTION_NAME&&DEFAULT===VALUES&&nativeIterator&&nativeIterator.name!==VALUES){if(!IS_PURE&&CONFIGURABLE_FUNCTION_NAME){createNonEnumerableProperty(IterablePrototype,"name",VALUES);}else{INCORRECT_VALUES_NAME=true;defaultIterator=function values(){return call(nativeIterator,this);};}}if(DEFAULT){methods={values:getIterationMethod(VALUES),keys:IS_SET?defaultIterator:getIterationMethod(KEYS),entries:getIterationMethod(ENTRIES)};if(FORCED)for(KEY in methods){if(BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME||!(KEY in IterablePrototype)){defineBuiltIn(IterablePrototype,KEY,methods[KEY]);}}else $({target:NAME,proto:true,forced:BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME},methods);}if((!IS_PURE||FORCED)&&IterablePrototype[ITERATOR]!==defaultIterator){defineBuiltIn(IterablePrototype,ITERATOR,defaultIterator,{name:DEFAULT});}Iterators[NAME]=defaultIterator;return methods;};}});// node_modules/core-js/internals/create-iter-result-object.js
var require_create_iter_result_object=__commonJS({"node_modules/core-js/internals/create-iter-result-object.js"(exports,module2){"use strict";module2.exports=function(value,done){return{value,done};};}});// node_modules/core-js/modules/es.array.iterator.js
var require_es_array_iterator=__commonJS({"node_modules/core-js/modules/es.array.iterator.js"(exports,module2){"use strict";var toIndexedObject=require_to_indexed_object();var addToUnscopables=require_add_to_unscopables();var Iterators=require_iterators();var InternalStateModule=require_internal_state();var defineProperty=require_object_define_property().f;var defineIterator=require_iterator_define();var createIterResultObject=require_create_iter_result_object();var IS_PURE=require_is_pure();var DESCRIPTORS=require_descriptors();var ARRAY_ITERATOR="Array Iterator";var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(ARRAY_ITERATOR);module2.exports=defineIterator(Array,"Array",function(iterated,kind){setInternalState(this,{type:ARRAY_ITERATOR,target:toIndexedObject(iterated),// target
index:0,// next index
kind// kind
});},function(){var state=getInternalState(this);var target=state.target;var index=state.index++;if(!target||index>=target.length){state.target=null;return createIterResultObject(void 0,true);}switch(state.kind){case"keys":return createIterResultObject(index,false);case"values":return createIterResultObject(target[index],false);}return createIterResultObject([index,target[index]],false);},"values");var values=Iterators.Arguments=Iterators.Array;addToUnscopables("keys");addToUnscopables("values");addToUnscopables("entries");if(!IS_PURE&&DESCRIPTORS&&values.name!=="values")try{defineProperty(values,"name",{value:"values"});}catch(error){}}});// node_modules/core-js/modules/es.array.join.js
var require_es_array_join=__commonJS({"node_modules/core-js/modules/es.array.join.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var IndexedObject=require_indexed_object();var toIndexedObject=require_to_indexed_object();var arrayMethodIsStrict=require_array_method_is_strict();var nativeJoin=uncurryThis([].join);var ES3_STRINGS=IndexedObject!==Object;var FORCED=ES3_STRINGS||!arrayMethodIsStrict("join",",");$({target:"Array",proto:true,forced:FORCED},{join:function join(separator){return nativeJoin(toIndexedObject(this),separator===void 0?",":separator);}});}});// node_modules/core-js/internals/array-last-index-of.js
var require_array_last_index_of=__commonJS({"node_modules/core-js/internals/array-last-index-of.js"(exports,module2){"use strict";var apply=require_function_apply();var toIndexedObject=require_to_indexed_object();var toIntegerOrInfinity=require_to_integer_or_infinity();var lengthOfArrayLike=require_length_of_array_like();var arrayMethodIsStrict=require_array_method_is_strict();var min=Math.min;var $lastIndexOf=[].lastIndexOf;var NEGATIVE_ZERO=!!$lastIndexOf&&1/[1].lastIndexOf(1,-0)<0;var STRICT_METHOD=arrayMethodIsStrict("lastIndexOf");var FORCED=NEGATIVE_ZERO||!STRICT_METHOD;module2.exports=FORCED?function lastIndexOf(searchElement){if(NEGATIVE_ZERO)return apply($lastIndexOf,this,arguments)||0;var O=toIndexedObject(this);var length=lengthOfArrayLike(O);if(length===0)return-1;var index=length-1;if(arguments.length>1)index=min(index,toIntegerOrInfinity(arguments[1]));if(index<0)index=length+index;for(;index>=0;index--)if(index in O&&O[index]===searchElement)return index||0;return-1;}:$lastIndexOf;}});// node_modules/core-js/modules/es.array.last-index-of.js
var require_es_array_last_index_of=__commonJS({"node_modules/core-js/modules/es.array.last-index-of.js"(){"use strict";var $=require_export();var lastIndexOf=require_array_last_index_of();$({target:"Array",proto:true,forced:lastIndexOf!==[].lastIndexOf},{lastIndexOf});}});// node_modules/core-js/modules/es.array.map.js
var require_es_array_map=__commonJS({"node_modules/core-js/modules/es.array.map.js"(){"use strict";var $=require_export();var $map=require_array_iteration().map;var arrayMethodHasSpeciesSupport=require_array_method_has_species_support();var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("map");$({target:"Array",proto:true,forced:!HAS_SPECIES_SUPPORT},{map:function map(callbackfn){return $map(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.array.of.js
var require_es_array_of=__commonJS({"node_modules/core-js/modules/es.array.of.js"(){"use strict";var $=require_export();var fails=require_fails();var isConstructor=require_is_constructor();var createProperty=require_create_property();var $Array=Array;var ISNT_GENERIC=fails(function(){function F(){}return!($Array.of.call(F)instanceof F);});$({target:"Array",stat:true,forced:ISNT_GENERIC},{of:function of(){var index=0;var argumentsLength=arguments.length;var result=new(isConstructor(this)?this:$Array)(argumentsLength);while(argumentsLength>index)createProperty(result,index,arguments[index++]);result.length=argumentsLength;return result;}});}});// node_modules/core-js/internals/array-set-length.js
var require_array_set_length=__commonJS({"node_modules/core-js/internals/array-set-length.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var isArray=require_is_array();var $TypeError=TypeError;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var SILENT_ON_NON_WRITABLE_LENGTH_SET=DESCRIPTORS&&!function(){if(this!==void 0)return true;try{Object.defineProperty([],"length",{writable:false}).length=1;}catch(error){return error instanceof TypeError;}}();module2.exports=SILENT_ON_NON_WRITABLE_LENGTH_SET?function(O,length){if(isArray(O)&&!getOwnPropertyDescriptor(O,"length").writable){throw new $TypeError("Cannot set read only .length");}return O.length=length;}:function(O,length){return O.length=length;};}});// node_modules/core-js/modules/es.array.push.js
var require_es_array_push=__commonJS({"node_modules/core-js/modules/es.array.push.js"(){"use strict";var $=require_export();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var setArrayLength=require_array_set_length();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var fails=require_fails();var INCORRECT_TO_LENGTH=fails(function(){return[].push.call({length:4294967296},1)!==4294967297;});var properErrorOnNonWritableLength=function(){try{Object.defineProperty([],"length",{writable:false}).push();}catch(error){return error instanceof TypeError;}};var FORCED=INCORRECT_TO_LENGTH||!properErrorOnNonWritableLength();$({target:"Array",proto:true,arity:1,forced:FORCED},{// eslint-disable-next-line no-unused-vars -- required for `.length`
push:function push(item){var O=toObject(this);var len=lengthOfArrayLike(O);var argCount=arguments.length;doesNotExceedSafeInteger(len+argCount);for(var i=0;i<argCount;i++){O[len]=arguments[i];len++;}setArrayLength(O,len);return len;}});}});// node_modules/core-js/internals/array-reduce.js
var require_array_reduce=__commonJS({"node_modules/core-js/internals/array-reduce.js"(exports,module2){"use strict";var aCallable=require_a_callable();var toObject=require_to_object();var IndexedObject=require_indexed_object();var lengthOfArrayLike=require_length_of_array_like();var $TypeError=TypeError;var REDUCE_EMPTY="Reduce of empty array with no initial value";var createMethod=function(IS_RIGHT){return function(that,callbackfn,argumentsLength,memo){var O=toObject(that);var self2=IndexedObject(O);var length=lengthOfArrayLike(O);aCallable(callbackfn);if(length===0&&argumentsLength<2)throw new $TypeError(REDUCE_EMPTY);var index=IS_RIGHT?length-1:0;var i=IS_RIGHT?-1:1;if(argumentsLength<2)while(true){if(index in self2){memo=self2[index];index+=i;break;}index+=i;if(IS_RIGHT?index<0:length<=index){throw new $TypeError(REDUCE_EMPTY);}}for(;IS_RIGHT?index>=0:length>index;index+=i)if(index in self2){memo=callbackfn(memo,self2[index],index,O);}return memo;};};module2.exports={// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
left:createMethod(false),// `Array.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-array.prototype.reduceright
right:createMethod(true)};}});// node_modules/core-js/internals/environment.js
var require_environment=__commonJS({"node_modules/core-js/internals/environment.js"(exports,module2){"use strict";var globalThis2=require_global_this();var userAgent=require_environment_user_agent();var classof=require_classof_raw();var userAgentStartsWith=function(string){return userAgent.slice(0,string.length)===string;};module2.exports=function(){if(userAgentStartsWith("Bun/"))return"BUN";if(userAgentStartsWith("Cloudflare-Workers"))return"CLOUDFLARE";if(userAgentStartsWith("Deno/"))return"DENO";if(userAgentStartsWith("Node.js/"))return"NODE";if(globalThis2.Bun&&typeof Bun.version=="string")return"BUN";if(globalThis2.Deno&&typeof Deno.version=="object")return"DENO";if(classof(globalThis2.process)==="process")return"NODE";if(globalThis2.window&&globalThis2.document)return"BROWSER";return"REST";}();}});// node_modules/core-js/internals/environment-is-node.js
var require_environment_is_node=__commonJS({"node_modules/core-js/internals/environment-is-node.js"(exports,module2){"use strict";var ENVIRONMENT=require_environment();module2.exports=ENVIRONMENT==="NODE";}});// node_modules/core-js/modules/es.array.reduce.js
var require_es_array_reduce=__commonJS({"node_modules/core-js/modules/es.array.reduce.js"(){"use strict";var $=require_export();var $reduce=require_array_reduce().left;var arrayMethodIsStrict=require_array_method_is_strict();var CHROME_VERSION=require_environment_v8_version();var IS_NODE=require_environment_is_node();var CHROME_BUG=!IS_NODE&&CHROME_VERSION>79&&CHROME_VERSION<83;var FORCED=CHROME_BUG||!arrayMethodIsStrict("reduce");$({target:"Array",proto:true,forced:FORCED},{reduce:function reduce(callbackfn){var length=arguments.length;return $reduce(this,callbackfn,length,length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.array.reduce-right.js
var require_es_array_reduce_right=__commonJS({"node_modules/core-js/modules/es.array.reduce-right.js"(){"use strict";var $=require_export();var $reduceRight=require_array_reduce().right;var arrayMethodIsStrict=require_array_method_is_strict();var CHROME_VERSION=require_environment_v8_version();var IS_NODE=require_environment_is_node();var CHROME_BUG=!IS_NODE&&CHROME_VERSION>79&&CHROME_VERSION<83;var FORCED=CHROME_BUG||!arrayMethodIsStrict("reduceRight");$({target:"Array",proto:true,forced:FORCED},{reduceRight:function reduceRight(callbackfn){return $reduceRight(this,callbackfn,arguments.length,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.array.reverse.js
var require_es_array_reverse=__commonJS({"node_modules/core-js/modules/es.array.reverse.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var isArray=require_is_array();var nativeReverse=uncurryThis([].reverse);var test=[1,2];$({target:"Array",proto:true,forced:String(test)===String(test.reverse())},{reverse:function reverse(){if(isArray(this))this.length=this.length;return nativeReverse(this);}});}});// node_modules/core-js/modules/es.array.slice.js
var require_es_array_slice=__commonJS({"node_modules/core-js/modules/es.array.slice.js"(){"use strict";var $=require_export();var isArray=require_is_array();var isConstructor=require_is_constructor();var isObject=require_is_object();var toAbsoluteIndex=require_to_absolute_index();var lengthOfArrayLike=require_length_of_array_like();var toIndexedObject=require_to_indexed_object();var createProperty=require_create_property();var wellKnownSymbol=require_well_known_symbol();var arrayMethodHasSpeciesSupport=require_array_method_has_species_support();var nativeSlice=require_array_slice();var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("slice");var SPECIES=wellKnownSymbol("species");var $Array=Array;var max=Math.max;$({target:"Array",proto:true,forced:!HAS_SPECIES_SUPPORT},{slice:function slice(start,end){var O=toIndexedObject(this);var length=lengthOfArrayLike(O);var k=toAbsoluteIndex(start,length);var fin=toAbsoluteIndex(end===void 0?length:end,length);var Constructor,result,n;if(isArray(O)){Constructor=O.constructor;if(isConstructor(Constructor)&&(Constructor===$Array||isArray(Constructor.prototype))){Constructor=void 0;}else if(isObject(Constructor)){Constructor=Constructor[SPECIES];if(Constructor===null)Constructor=void 0;}if(Constructor===$Array||Constructor===void 0){return nativeSlice(O,k,fin);}}result=new(Constructor===void 0?$Array:Constructor)(max(fin-k,0));for(n=0;k<fin;k++,n++)if(k in O)createProperty(result,n,O[k]);result.length=n;return result;}});}});// node_modules/core-js/modules/es.array.some.js
var require_es_array_some=__commonJS({"node_modules/core-js/modules/es.array.some.js"(){"use strict";var $=require_export();var $some=require_array_iteration().some;var arrayMethodIsStrict=require_array_method_is_strict();var STRICT_METHOD=arrayMethodIsStrict("some");$({target:"Array",proto:true,forced:!STRICT_METHOD},{some:function some(callbackfn){return $some(this,callbackfn,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/internals/array-sort.js
var require_array_sort=__commonJS({"node_modules/core-js/internals/array-sort.js"(exports,module2){"use strict";var arraySlice=require_array_slice();var floor=Math.floor;var sort=function(array,comparefn){var length=array.length;if(length<8){var i=1;var element,j;while(i<length){j=i;element=array[i];while(j&&comparefn(array[j-1],element)>0){array[j]=array[--j];}if(j!==i++)array[j]=element;}}else{var middle=floor(length/2);var left=sort(arraySlice(array,0,middle),comparefn);var right=sort(arraySlice(array,middle),comparefn);var llength=left.length;var rlength=right.length;var lindex=0;var rindex=0;while(lindex<llength||rindex<rlength){array[lindex+rindex]=lindex<llength&&rindex<rlength?comparefn(left[lindex],right[rindex])<=0?left[lindex++]:right[rindex++]:lindex<llength?left[lindex++]:right[rindex++];}}return array;};module2.exports=sort;}});// node_modules/core-js/internals/environment-ff-version.js
var require_environment_ff_version=__commonJS({"node_modules/core-js/internals/environment-ff-version.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();var firefox=userAgent.match(/firefox\/(\d+)/i);module2.exports=!!firefox&&+firefox[1];}});// node_modules/core-js/internals/environment-is-ie-or-edge.js
var require_environment_is_ie_or_edge=__commonJS({"node_modules/core-js/internals/environment-is-ie-or-edge.js"(exports,module2){"use strict";var UA=require_environment_user_agent();module2.exports=/MSIE|Trident/.test(UA);}});// node_modules/core-js/internals/environment-webkit-version.js
var require_environment_webkit_version=__commonJS({"node_modules/core-js/internals/environment-webkit-version.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();var webkit=userAgent.match(/AppleWebKit\/(\d+)\./);module2.exports=!!webkit&&+webkit[1];}});// node_modules/core-js/modules/es.array.sort.js
var require_es_array_sort=__commonJS({"node_modules/core-js/modules/es.array.sort.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var deletePropertyOrThrow=require_delete_property_or_throw();var toString=require_to_string();var fails=require_fails();var internalSort=require_array_sort();var arrayMethodIsStrict=require_array_method_is_strict();var FF=require_environment_ff_version();var IE_OR_EDGE=require_environment_is_ie_or_edge();var V8=require_environment_v8_version();var WEBKIT=require_environment_webkit_version();var test=[];var nativeSort=uncurryThis(test.sort);var push=uncurryThis(test.push);var FAILS_ON_UNDEFINED=fails(function(){test.sort(void 0);});var FAILS_ON_NULL=fails(function(){test.sort(null);});var STRICT_METHOD=arrayMethodIsStrict("sort");var STABLE_SORT=!fails(function(){if(V8)return V8<70;if(FF&&FF>3)return;if(IE_OR_EDGE)return true;if(WEBKIT)return WEBKIT<603;var result="";var code,chr,value,index;for(code=65;code<76;code++){chr=String.fromCharCode(code);switch(code){case 66:case 69:case 70:case 72:value=3;break;case 68:case 71:value=4;break;default:value=2;}for(index=0;index<47;index++){test.push({k:chr+index,v:value});}}test.sort(function(a,b){return b.v-a.v;});for(index=0;index<test.length;index++){chr=test[index].k.charAt(0);if(result.charAt(result.length-1)!==chr)result+=chr;}return result!=="DGBEFHACIJK";});var FORCED=FAILS_ON_UNDEFINED||!FAILS_ON_NULL||!STRICT_METHOD||!STABLE_SORT;var getSortCompare=function(comparefn){return function(x,y){if(y===void 0)return-1;if(x===void 0)return 1;if(comparefn!==void 0)return+comparefn(x,y)||0;return toString(x)>toString(y)?1:-1;};};$({target:"Array",proto:true,forced:FORCED},{sort:function sort(comparefn){if(comparefn!==void 0)aCallable(comparefn);var array=toObject(this);if(STABLE_SORT)return comparefn===void 0?nativeSort(array):nativeSort(array,comparefn);var items=[];var arrayLength=lengthOfArrayLike(array);var itemsLength,index;for(index=0;index<arrayLength;index++){if(index in array)push(items,array[index]);}internalSort(items,getSortCompare(comparefn));itemsLength=lengthOfArrayLike(items);index=0;while(index<itemsLength)array[index]=items[index++];while(index<arrayLength)deletePropertyOrThrow(array,index++);return array;}});}});// node_modules/core-js/internals/set-species.js
var require_set_species=__commonJS({"node_modules/core-js/internals/set-species.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var wellKnownSymbol=require_well_known_symbol();var DESCRIPTORS=require_descriptors();var SPECIES=wellKnownSymbol("species");module2.exports=function(CONSTRUCTOR_NAME){var Constructor=getBuiltIn(CONSTRUCTOR_NAME);if(DESCRIPTORS&&Constructor&&!Constructor[SPECIES]){defineBuiltInAccessor(Constructor,SPECIES,{configurable:true,get:function(){return this;}});}};}});// node_modules/core-js/modules/es.array.species.js
var require_es_array_species=__commonJS({"node_modules/core-js/modules/es.array.species.js"(){"use strict";var setSpecies=require_set_species();setSpecies("Array");}});// node_modules/core-js/modules/es.array.splice.js
var require_es_array_splice=__commonJS({"node_modules/core-js/modules/es.array.splice.js"(){"use strict";var $=require_export();var toObject=require_to_object();var toAbsoluteIndex=require_to_absolute_index();var toIntegerOrInfinity=require_to_integer_or_infinity();var lengthOfArrayLike=require_length_of_array_like();var setArrayLength=require_array_set_length();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var arraySpeciesCreate=require_array_species_create();var createProperty=require_create_property();var deletePropertyOrThrow=require_delete_property_or_throw();var arrayMethodHasSpeciesSupport=require_array_method_has_species_support();var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("splice");var max=Math.max;var min=Math.min;$({target:"Array",proto:true,forced:!HAS_SPECIES_SUPPORT},{splice:function splice(start,deleteCount){var O=toObject(this);var len=lengthOfArrayLike(O);var actualStart=toAbsoluteIndex(start,len);var argumentsLength=arguments.length;var insertCount,actualDeleteCount,A,k,from,to;if(argumentsLength===0){insertCount=actualDeleteCount=0;}else if(argumentsLength===1){insertCount=0;actualDeleteCount=len-actualStart;}else{insertCount=argumentsLength-2;actualDeleteCount=min(max(toIntegerOrInfinity(deleteCount),0),len-actualStart);}doesNotExceedSafeInteger(len+insertCount-actualDeleteCount);A=arraySpeciesCreate(O,actualDeleteCount);for(k=0;k<actualDeleteCount;k++){from=actualStart+k;if(from in O)createProperty(A,k,O[from]);}A.length=actualDeleteCount;if(insertCount<actualDeleteCount){for(k=actualStart;k<len-actualDeleteCount;k++){from=k+actualDeleteCount;to=k+insertCount;if(from in O)O[to]=O[from];else deletePropertyOrThrow(O,to);}for(k=len;k>len-actualDeleteCount+insertCount;k--)deletePropertyOrThrow(O,k-1);}else if(insertCount>actualDeleteCount){for(k=len-actualDeleteCount;k>actualStart;k--){from=k+actualDeleteCount-1;to=k+insertCount-1;if(from in O)O[to]=O[from];else deletePropertyOrThrow(O,to);}}for(k=0;k<insertCount;k++){O[k+actualStart]=arguments[k+2];}setArrayLength(O,len-actualDeleteCount+insertCount);return A;}});}});// node_modules/core-js/internals/array-to-reversed.js
var require_array_to_reversed=__commonJS({"node_modules/core-js/internals/array-to-reversed.js"(exports,module2){"use strict";var lengthOfArrayLike=require_length_of_array_like();module2.exports=function(O,C){var len=lengthOfArrayLike(O);var A=new C(len);var k=0;for(;k<len;k++)A[k]=O[len-k-1];return A;};}});// node_modules/core-js/modules/es.array.to-reversed.js
var require_es_array_to_reversed=__commonJS({"node_modules/core-js/modules/es.array.to-reversed.js"(){"use strict";var $=require_export();var arrayToReversed=require_array_to_reversed();var toIndexedObject=require_to_indexed_object();var addToUnscopables=require_add_to_unscopables();var $Array=Array;$({target:"Array",proto:true},{toReversed:function toReversed(){return arrayToReversed(toIndexedObject(this),$Array);}});addToUnscopables("toReversed");}});// node_modules/core-js/internals/array-from-constructor-and-list.js
var require_array_from_constructor_and_list=__commonJS({"node_modules/core-js/internals/array-from-constructor-and-list.js"(exports,module2){"use strict";var lengthOfArrayLike=require_length_of_array_like();module2.exports=function(Constructor,list,$length){var index=0;var length=arguments.length>2?$length:lengthOfArrayLike(list);var result=new Constructor(length);while(length>index)result[index]=list[index++];return result;};}});// node_modules/core-js/internals/get-built-in-prototype-method.js
var require_get_built_in_prototype_method=__commonJS({"node_modules/core-js/internals/get-built-in-prototype-method.js"(exports,module2){"use strict";var globalThis2=require_global_this();module2.exports=function(CONSTRUCTOR,METHOD){var Constructor=globalThis2[CONSTRUCTOR];var Prototype=Constructor&&Constructor.prototype;return Prototype&&Prototype[METHOD];};}});// node_modules/core-js/modules/es.array.to-sorted.js
var require_es_array_to_sorted=__commonJS({"node_modules/core-js/modules/es.array.to-sorted.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var toIndexedObject=require_to_indexed_object();var arrayFromConstructorAndList=require_array_from_constructor_and_list();var getBuiltInPrototypeMethod=require_get_built_in_prototype_method();var addToUnscopables=require_add_to_unscopables();var $Array=Array;var sort=uncurryThis(getBuiltInPrototypeMethod("Array","sort"));$({target:"Array",proto:true},{toSorted:function toSorted(compareFn){if(compareFn!==void 0)aCallable(compareFn);var O=toIndexedObject(this);var A=arrayFromConstructorAndList($Array,O);return sort(A,compareFn);}});addToUnscopables("toSorted");}});// node_modules/core-js/modules/es.array.to-spliced.js
var require_es_array_to_spliced=__commonJS({"node_modules/core-js/modules/es.array.to-spliced.js"(){"use strict";var $=require_export();var addToUnscopables=require_add_to_unscopables();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var lengthOfArrayLike=require_length_of_array_like();var toAbsoluteIndex=require_to_absolute_index();var toIndexedObject=require_to_indexed_object();var toIntegerOrInfinity=require_to_integer_or_infinity();var $Array=Array;var max=Math.max;var min=Math.min;$({target:"Array",proto:true},{toSpliced:function toSpliced(start,deleteCount){var O=toIndexedObject(this);var len=lengthOfArrayLike(O);var actualStart=toAbsoluteIndex(start,len);var argumentsLength=arguments.length;var k=0;var insertCount,actualDeleteCount,newLen,A;if(argumentsLength===0){insertCount=actualDeleteCount=0;}else if(argumentsLength===1){insertCount=0;actualDeleteCount=len-actualStart;}else{insertCount=argumentsLength-2;actualDeleteCount=min(max(toIntegerOrInfinity(deleteCount),0),len-actualStart);}newLen=doesNotExceedSafeInteger(len+insertCount-actualDeleteCount);A=$Array(newLen);for(;k<actualStart;k++)A[k]=O[k];for(;k<actualStart+insertCount;k++)A[k]=arguments[k-actualStart+2];for(;k<newLen;k++)A[k]=O[k+actualDeleteCount-insertCount];return A;}});addToUnscopables("toSpliced");}});// node_modules/core-js/modules/es.array.unscopables.flat.js
var require_es_array_unscopables_flat=__commonJS({"node_modules/core-js/modules/es.array.unscopables.flat.js"(){"use strict";var addToUnscopables=require_add_to_unscopables();addToUnscopables("flat");}});// node_modules/core-js/modules/es.array.unscopables.flat-map.js
var require_es_array_unscopables_flat_map=__commonJS({"node_modules/core-js/modules/es.array.unscopables.flat-map.js"(){"use strict";var addToUnscopables=require_add_to_unscopables();addToUnscopables("flatMap");}});// node_modules/core-js/modules/es.array.unshift.js
var require_es_array_unshift=__commonJS({"node_modules/core-js/modules/es.array.unshift.js"(){"use strict";var $=require_export();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var setArrayLength=require_array_set_length();var deletePropertyOrThrow=require_delete_property_or_throw();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var INCORRECT_RESULT=[].unshift(0)!==1;var properErrorOnNonWritableLength=function(){try{Object.defineProperty([],"length",{writable:false}).unshift();}catch(error){return error instanceof TypeError;}};var FORCED=INCORRECT_RESULT||!properErrorOnNonWritableLength();$({target:"Array",proto:true,arity:1,forced:FORCED},{// eslint-disable-next-line no-unused-vars -- required for `.length`
unshift:function unshift(item){var O=toObject(this);var len=lengthOfArrayLike(O);var argCount=arguments.length;if(argCount){doesNotExceedSafeInteger(len+argCount);var k=len;while(k--){var to=k+argCount;if(k in O)O[to]=O[k];else deletePropertyOrThrow(O,to);}for(var j=0;j<argCount;j++){O[j]=arguments[j];}}return setArrayLength(O,len+argCount);}});}});// node_modules/core-js/internals/array-with.js
var require_array_with=__commonJS({"node_modules/core-js/internals/array-with.js"(exports,module2){"use strict";var lengthOfArrayLike=require_length_of_array_like();var toIntegerOrInfinity=require_to_integer_or_infinity();var $RangeError=RangeError;module2.exports=function(O,C,index,value){var len=lengthOfArrayLike(O);var relativeIndex=toIntegerOrInfinity(index);var actualIndex=relativeIndex<0?len+relativeIndex:relativeIndex;if(actualIndex>=len||actualIndex<0)throw new $RangeError("Incorrect index");var A=new C(len);var k=0;for(;k<len;k++)A[k]=k===actualIndex?value:O[k];return A;};}});// node_modules/core-js/modules/es.array.with.js
var require_es_array_with=__commonJS({"node_modules/core-js/modules/es.array.with.js"(){"use strict";var $=require_export();var arrayWith=require_array_with();var toIndexedObject=require_to_indexed_object();var $Array=Array;var INCORRECT_EXCEPTION_ON_COERCION_FAIL=function(){try{[]["with"]({valueOf:function(){throw 4;}},null);}catch(error){return error!==4;}}();$({target:"Array",proto:true,forced:INCORRECT_EXCEPTION_ON_COERCION_FAIL},{"with":function(index,value){return arrayWith(toIndexedObject(this),$Array,index,value);}});}});// node_modules/core-js/internals/array-buffer-basic-detection.js
var require_array_buffer_basic_detection=__commonJS({"node_modules/core-js/internals/array-buffer-basic-detection.js"(exports,module2){"use strict";module2.exports=typeof ArrayBuffer!="undefined"&&typeof DataView!="undefined";}});// node_modules/core-js/internals/define-built-ins.js
var require_define_built_ins=__commonJS({"node_modules/core-js/internals/define-built-ins.js"(exports,module2){"use strict";var defineBuiltIn=require_define_built_in();module2.exports=function(target,src,options){for(var key in src)defineBuiltIn(target,key,src[key],options);return target;};}});// node_modules/core-js/internals/an-instance.js
var require_an_instance=__commonJS({"node_modules/core-js/internals/an-instance.js"(exports,module2){"use strict";var isPrototypeOf=require_object_is_prototype_of();var $TypeError=TypeError;module2.exports=function(it,Prototype){if(isPrototypeOf(Prototype,it))return it;throw new $TypeError("Incorrect invocation");};}});// node_modules/core-js/internals/to-index.js
var require_to_index=__commonJS({"node_modules/core-js/internals/to-index.js"(exports,module2){"use strict";var toIntegerOrInfinity=require_to_integer_or_infinity();var toLength=require_to_length();var $RangeError=RangeError;module2.exports=function(it){if(it===void 0)return 0;var number=toIntegerOrInfinity(it);var length=toLength(number);if(number!==length)throw new $RangeError("Wrong length or index");return length;};}});// node_modules/core-js/internals/math-sign.js
var require_math_sign=__commonJS({"node_modules/core-js/internals/math-sign.js"(exports,module2){"use strict";module2.exports=Math.sign||function sign(x){var n=+x;return n===0||n!==n?n:n<0?-1:1;};}});// node_modules/core-js/internals/math-round-ties-to-even.js
var require_math_round_ties_to_even=__commonJS({"node_modules/core-js/internals/math-round-ties-to-even.js"(exports,module2){"use strict";var EPSILON=2220446049250313e-31;var INVERSE_EPSILON=1/EPSILON;module2.exports=function(n){return n+INVERSE_EPSILON-INVERSE_EPSILON;};}});// node_modules/core-js/internals/math-float-round.js
var require_math_float_round=__commonJS({"node_modules/core-js/internals/math-float-round.js"(exports,module2){"use strict";var sign=require_math_sign();var roundTiesToEven=require_math_round_ties_to_even();var abs=Math.abs;var EPSILON=2220446049250313e-31;module2.exports=function(x,FLOAT_EPSILON,FLOAT_MAX_VALUE,FLOAT_MIN_VALUE){var n=+x;var absolute=abs(n);var s=sign(n);if(absolute<FLOAT_MIN_VALUE)return s*roundTiesToEven(absolute/FLOAT_MIN_VALUE/FLOAT_EPSILON)*FLOAT_MIN_VALUE*FLOAT_EPSILON;var a=(1+FLOAT_EPSILON/EPSILON)*absolute;var result=a-(a-absolute);if(result>FLOAT_MAX_VALUE||result!==result)return s*Infinity;return s*result;};}});// node_modules/core-js/internals/math-fround.js
var require_math_fround=__commonJS({"node_modules/core-js/internals/math-fround.js"(exports,module2){"use strict";var floatRound=require_math_float_round();var FLOAT32_EPSILON=11920928955078125e-23;var FLOAT32_MAX_VALUE=34028234663852886e22;var FLOAT32_MIN_VALUE=11754943508222875e-54;module2.exports=Math.fround||function fround(x){return floatRound(x,FLOAT32_EPSILON,FLOAT32_MAX_VALUE,FLOAT32_MIN_VALUE);};}});// node_modules/core-js/internals/ieee754.js
var require_ieee754=__commonJS({"node_modules/core-js/internals/ieee754.js"(exports,module2){"use strict";var $Array=Array;var abs=Math.abs;var pow=Math.pow;var floor=Math.floor;var log=Math.log;var LN2=Math.LN2;var pack=function(number,mantissaLength,bytes){var buffer=$Array(bytes);var exponentLength=bytes*8-mantissaLength-1;var eMax=(1<<exponentLength)-1;var eBias=eMax>>1;var rt=mantissaLength===23?pow(2,-24)-pow(2,-77):0;var sign=number<0||number===0&&1/number<0?1:0;var index=0;var exponent,mantissa,c;number=abs(number);if(number!==number||number===Infinity){mantissa=number!==number?1:0;exponent=eMax;}else{exponent=floor(log(number)/LN2);c=pow(2,-exponent);if(number*c<1){exponent--;c*=2;}if(exponent+eBias>=1){number+=rt/c;}else{number+=rt*pow(2,1-eBias);}if(number*c>=2){exponent++;c/=2;}if(exponent+eBias>=eMax){mantissa=0;exponent=eMax;}else if(exponent+eBias>=1){mantissa=(number*c-1)*pow(2,mantissaLength);exponent+=eBias;}else{mantissa=number*pow(2,eBias-1)*pow(2,mantissaLength);exponent=0;}}while(mantissaLength>=8){buffer[index++]=mantissa&255;mantissa/=256;mantissaLength-=8;}exponent=exponent<<mantissaLength|mantissa;exponentLength+=mantissaLength;while(exponentLength>0){buffer[index++]=exponent&255;exponent/=256;exponentLength-=8;}buffer[index-1]|=sign*128;return buffer;};var unpack=function(buffer,mantissaLength){var bytes=buffer.length;var exponentLength=bytes*8-mantissaLength-1;var eMax=(1<<exponentLength)-1;var eBias=eMax>>1;var nBits=exponentLength-7;var index=bytes-1;var sign=buffer[index--];var exponent=sign&127;var mantissa;sign>>=7;while(nBits>0){exponent=exponent*256+buffer[index--];nBits-=8;}mantissa=exponent&(1<<-nBits)-1;exponent>>=-nBits;nBits+=mantissaLength;while(nBits>0){mantissa=mantissa*256+buffer[index--];nBits-=8;}if(exponent===0){exponent=1-eBias;}else if(exponent===eMax){return mantissa?NaN:sign?-Infinity:Infinity;}else{mantissa+=pow(2,mantissaLength);exponent-=eBias;}return(sign?-1:1)*mantissa*pow(2,exponent-mantissaLength);};module2.exports={pack,unpack};}});// node_modules/core-js/internals/array-buffer.js
var require_array_buffer=__commonJS({"node_modules/core-js/internals/array-buffer.js"(exports,module2){"use strict";var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var DESCRIPTORS=require_descriptors();var NATIVE_ARRAY_BUFFER=require_array_buffer_basic_detection();var FunctionName=require_function_name();var createNonEnumerableProperty=require_create_non_enumerable_property();var defineBuiltInAccessor=require_define_built_in_accessor();var defineBuiltIns=require_define_built_ins();var fails=require_fails();var anInstance=require_an_instance();var toIntegerOrInfinity=require_to_integer_or_infinity();var toLength=require_to_length();var toIndex=require_to_index();var fround=require_math_fround();var IEEE754=require_ieee754();var getPrototypeOf=require_object_get_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var arrayFill=require_array_fill();var arraySlice=require_array_slice();var inheritIfRequired=require_inherit_if_required();var copyConstructorProperties=require_copy_constructor_properties();var setToStringTag=require_set_to_string_tag();var InternalStateModule=require_internal_state();var PROPER_FUNCTION_NAME=FunctionName.PROPER;var CONFIGURABLE_FUNCTION_NAME=FunctionName.CONFIGURABLE;var ARRAY_BUFFER="ArrayBuffer";var DATA_VIEW="DataView";var PROTOTYPE="prototype";var WRONG_LENGTH="Wrong length";var WRONG_INDEX="Wrong index";var getInternalArrayBufferState=InternalStateModule.getterFor(ARRAY_BUFFER);var getInternalDataViewState=InternalStateModule.getterFor(DATA_VIEW);var setInternalState=InternalStateModule.set;var NativeArrayBuffer=globalThis2[ARRAY_BUFFER];var $ArrayBuffer=NativeArrayBuffer;var ArrayBufferPrototype=$ArrayBuffer&&$ArrayBuffer[PROTOTYPE];var $DataView=globalThis2[DATA_VIEW];var DataViewPrototype=$DataView&&$DataView[PROTOTYPE];var ObjectPrototype=Object.prototype;var Array2=globalThis2.Array;var RangeError2=globalThis2.RangeError;var fill=uncurryThis(arrayFill);var reverse=uncurryThis([].reverse);var packIEEE754=IEEE754.pack;var unpackIEEE754=IEEE754.unpack;var packInt8=function(number){return[number&255];};var packInt16=function(number){return[number&255,number>>8&255];};var packInt32=function(number){return[number&255,number>>8&255,number>>16&255,number>>24&255];};var unpackInt32=function(buffer){return buffer[3]<<24|buffer[2]<<16|buffer[1]<<8|buffer[0];};var packFloat32=function(number){return packIEEE754(fround(number),23,4);};var packFloat64=function(number){return packIEEE754(number,52,8);};var addGetter=function(Constructor,key,getInternalState){defineBuiltInAccessor(Constructor[PROTOTYPE],key,{configurable:true,get:function(){return getInternalState(this)[key];}});};var get=function(view,count,index,isLittleEndian){var store=getInternalDataViewState(view);var intIndex=toIndex(index);var boolIsLittleEndian=!!isLittleEndian;if(intIndex+count>store.byteLength)throw new RangeError2(WRONG_INDEX);var bytes=store.bytes;var start=intIndex+store.byteOffset;var pack=arraySlice(bytes,start,start+count);return boolIsLittleEndian?pack:reverse(pack);};var set=function(view,count,index,conversion,value,isLittleEndian){var store=getInternalDataViewState(view);var intIndex=toIndex(index);var pack=conversion(+value);var boolIsLittleEndian=!!isLittleEndian;if(intIndex+count>store.byteLength)throw new RangeError2(WRONG_INDEX);var bytes=store.bytes;var start=intIndex+store.byteOffset;for(var i=0;i<count;i++)bytes[start+i]=pack[boolIsLittleEndian?i:count-i-1];};if(!NATIVE_ARRAY_BUFFER){$ArrayBuffer=function ArrayBuffer2(length){anInstance(this,ArrayBufferPrototype);var byteLength=toIndex(length);setInternalState(this,{type:ARRAY_BUFFER,bytes:fill(Array2(byteLength),0),byteLength});if(!DESCRIPTORS){this.byteLength=byteLength;this.detached=false;}};ArrayBufferPrototype=$ArrayBuffer[PROTOTYPE];$DataView=function DataView2(buffer,byteOffset,byteLength){anInstance(this,DataViewPrototype);anInstance(buffer,ArrayBufferPrototype);var bufferState=getInternalArrayBufferState(buffer);var bufferLength=bufferState.byteLength;var offset=toIntegerOrInfinity(byteOffset);if(offset<0||offset>bufferLength)throw new RangeError2("Wrong offset");byteLength=byteLength===void 0?bufferLength-offset:toLength(byteLength);if(offset+byteLength>bufferLength)throw new RangeError2(WRONG_LENGTH);setInternalState(this,{type:DATA_VIEW,buffer,byteLength,byteOffset:offset,bytes:bufferState.bytes});if(!DESCRIPTORS){this.buffer=buffer;this.byteLength=byteLength;this.byteOffset=offset;}};DataViewPrototype=$DataView[PROTOTYPE];if(DESCRIPTORS){addGetter($ArrayBuffer,"byteLength",getInternalArrayBufferState);addGetter($DataView,"buffer",getInternalDataViewState);addGetter($DataView,"byteLength",getInternalDataViewState);addGetter($DataView,"byteOffset",getInternalDataViewState);}defineBuiltIns(DataViewPrototype,{getInt8:function getInt8(byteOffset){return get(this,1,byteOffset)[0]<<24>>24;},getUint8:function getUint8(byteOffset){return get(this,1,byteOffset)[0];},getInt16:function getInt16(byteOffset){var bytes=get(this,2,byteOffset,arguments.length>1?arguments[1]:false);return(bytes[1]<<8|bytes[0])<<16>>16;},getUint16:function getUint16(byteOffset){var bytes=get(this,2,byteOffset,arguments.length>1?arguments[1]:false);return bytes[1]<<8|bytes[0];},getInt32:function getInt32(byteOffset){return unpackInt32(get(this,4,byteOffset,arguments.length>1?arguments[1]:false));},getUint32:function getUint32(byteOffset){return unpackInt32(get(this,4,byteOffset,arguments.length>1?arguments[1]:false))>>>0;},getFloat32:function getFloat32(byteOffset){return unpackIEEE754(get(this,4,byteOffset,arguments.length>1?arguments[1]:false),23);},getFloat64:function getFloat64(byteOffset){return unpackIEEE754(get(this,8,byteOffset,arguments.length>1?arguments[1]:false),52);},setInt8:function setInt8(byteOffset,value){set(this,1,byteOffset,packInt8,value);},setUint8:function setUint8(byteOffset,value){set(this,1,byteOffset,packInt8,value);},setInt16:function setInt16(byteOffset,value){set(this,2,byteOffset,packInt16,value,arguments.length>2?arguments[2]:false);},setUint16:function setUint16(byteOffset,value){set(this,2,byteOffset,packInt16,value,arguments.length>2?arguments[2]:false);},setInt32:function setInt32(byteOffset,value){set(this,4,byteOffset,packInt32,value,arguments.length>2?arguments[2]:false);},setUint32:function setUint32(byteOffset,value){set(this,4,byteOffset,packInt32,value,arguments.length>2?arguments[2]:false);},setFloat32:function setFloat32(byteOffset,value){set(this,4,byteOffset,packFloat32,value,arguments.length>2?arguments[2]:false);},setFloat64:function setFloat64(byteOffset,value){set(this,8,byteOffset,packFloat64,value,arguments.length>2?arguments[2]:false);}});}else{INCORRECT_ARRAY_BUFFER_NAME=PROPER_FUNCTION_NAME&&NativeArrayBuffer.name!==ARRAY_BUFFER;if(!fails(function(){NativeArrayBuffer(1);})||!fails(function(){new NativeArrayBuffer(-1);})||fails(function(){new NativeArrayBuffer();new NativeArrayBuffer(1.5);new NativeArrayBuffer(NaN);return NativeArrayBuffer.length!==1||INCORRECT_ARRAY_BUFFER_NAME&&!CONFIGURABLE_FUNCTION_NAME;})){$ArrayBuffer=function ArrayBuffer2(length){anInstance(this,ArrayBufferPrototype);return inheritIfRequired(new NativeArrayBuffer(toIndex(length)),this,$ArrayBuffer);};$ArrayBuffer[PROTOTYPE]=ArrayBufferPrototype;ArrayBufferPrototype.constructor=$ArrayBuffer;copyConstructorProperties($ArrayBuffer,NativeArrayBuffer);}else if(INCORRECT_ARRAY_BUFFER_NAME&&CONFIGURABLE_FUNCTION_NAME){createNonEnumerableProperty(NativeArrayBuffer,"name",ARRAY_BUFFER);}if(setPrototypeOf&&getPrototypeOf(DataViewPrototype)!==ObjectPrototype){setPrototypeOf(DataViewPrototype,ObjectPrototype);}testView=new $DataView(new $ArrayBuffer(2));$setInt8=uncurryThis(DataViewPrototype.setInt8);testView.setInt8(0,2147483648);testView.setInt8(1,2147483649);if(testView.getInt8(0)||!testView.getInt8(1))defineBuiltIns(DataViewPrototype,{setInt8:function setInt8(byteOffset,value){$setInt8(this,byteOffset,value<<24>>24);},setUint8:function setUint8(byteOffset,value){$setInt8(this,byteOffset,value<<24>>24);}},{unsafe:true});}var INCORRECT_ARRAY_BUFFER_NAME;var testView;var $setInt8;setToStringTag($ArrayBuffer,ARRAY_BUFFER);setToStringTag($DataView,DATA_VIEW);module2.exports={ArrayBuffer:$ArrayBuffer,DataView:$DataView};}});// node_modules/core-js/modules/es.array-buffer.constructor.js
var require_es_array_buffer_constructor=__commonJS({"node_modules/core-js/modules/es.array-buffer.constructor.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var arrayBufferModule=require_array_buffer();var setSpecies=require_set_species();var ARRAY_BUFFER="ArrayBuffer";var ArrayBuffer2=arrayBufferModule[ARRAY_BUFFER];var NativeArrayBuffer=globalThis2[ARRAY_BUFFER];$({global:true,constructor:true,forced:NativeArrayBuffer!==ArrayBuffer2},{ArrayBuffer:ArrayBuffer2});setSpecies(ARRAY_BUFFER);}});// node_modules/core-js/internals/array-buffer-view-core.js
var require_array_buffer_view_core=__commonJS({"node_modules/core-js/internals/array-buffer-view-core.js"(exports,module2){"use strict";var NATIVE_ARRAY_BUFFER=require_array_buffer_basic_detection();var DESCRIPTORS=require_descriptors();var globalThis2=require_global_this();var isCallable=require_is_callable();var isObject=require_is_object();var hasOwn=require_has_own_property();var classof=require_classof();var tryToString=require_try_to_string();var createNonEnumerableProperty=require_create_non_enumerable_property();var defineBuiltIn=require_define_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var isPrototypeOf=require_object_is_prototype_of();var getPrototypeOf=require_object_get_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var wellKnownSymbol=require_well_known_symbol();var uid=require_uid();var InternalStateModule=require_internal_state();var enforceInternalState=InternalStateModule.enforce;var getInternalState=InternalStateModule.get;var Int8Array2=globalThis2.Int8Array;var Int8ArrayPrototype=Int8Array2&&Int8Array2.prototype;var Uint8ClampedArray2=globalThis2.Uint8ClampedArray;var Uint8ClampedArrayPrototype=Uint8ClampedArray2&&Uint8ClampedArray2.prototype;var TypedArray=Int8Array2&&getPrototypeOf(Int8Array2);var TypedArrayPrototype=Int8ArrayPrototype&&getPrototypeOf(Int8ArrayPrototype);var ObjectPrototype=Object.prototype;var TypeError2=globalThis2.TypeError;var TO_STRING_TAG=wellKnownSymbol("toStringTag");var TYPED_ARRAY_TAG=uid("TYPED_ARRAY_TAG");var TYPED_ARRAY_CONSTRUCTOR="TypedArrayConstructor";var NATIVE_ARRAY_BUFFER_VIEWS=NATIVE_ARRAY_BUFFER&&!!setPrototypeOf&&classof(globalThis2.opera)!=="Opera";var TYPED_ARRAY_TAG_REQUIRED=false;var NAME;var Constructor;var Prototype;var TypedArrayConstructorsList={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8};var BigIntArrayConstructorsList={BigInt64Array:8,BigUint64Array:8};var isView=function isView2(it){if(!isObject(it))return false;var klass=classof(it);return klass==="DataView"||hasOwn(TypedArrayConstructorsList,klass)||hasOwn(BigIntArrayConstructorsList,klass);};var getTypedArrayConstructor=function(it){var proto=getPrototypeOf(it);if(!isObject(proto))return;var state=getInternalState(proto);return state&&hasOwn(state,TYPED_ARRAY_CONSTRUCTOR)?state[TYPED_ARRAY_CONSTRUCTOR]:getTypedArrayConstructor(proto);};var isTypedArray=function(it){if(!isObject(it))return false;var klass=classof(it);return hasOwn(TypedArrayConstructorsList,klass)||hasOwn(BigIntArrayConstructorsList,klass);};var aTypedArray=function(it){if(isTypedArray(it))return it;throw new TypeError2("Target is not a typed array");};var aTypedArrayConstructor=function(C){if(isCallable(C)&&(!setPrototypeOf||isPrototypeOf(TypedArray,C)))return C;throw new TypeError2(tryToString(C)+" is not a typed array constructor");};var exportTypedArrayMethod=function(KEY,property,forced,options){if(!DESCRIPTORS)return;if(forced)for(var ARRAY in TypedArrayConstructorsList){var TypedArrayConstructor=globalThis2[ARRAY];if(TypedArrayConstructor&&hasOwn(TypedArrayConstructor.prototype,KEY))try{delete TypedArrayConstructor.prototype[KEY];}catch(error){try{TypedArrayConstructor.prototype[KEY]=property;}catch(error2){}}}if(!TypedArrayPrototype[KEY]||forced){defineBuiltIn(TypedArrayPrototype,KEY,forced?property:NATIVE_ARRAY_BUFFER_VIEWS&&Int8ArrayPrototype[KEY]||property,options);}};var exportTypedArrayStaticMethod=function(KEY,property,forced){var ARRAY,TypedArrayConstructor;if(!DESCRIPTORS)return;if(setPrototypeOf){if(forced)for(ARRAY in TypedArrayConstructorsList){TypedArrayConstructor=globalThis2[ARRAY];if(TypedArrayConstructor&&hasOwn(TypedArrayConstructor,KEY))try{delete TypedArrayConstructor[KEY];}catch(error){}}if(!TypedArray[KEY]||forced){try{return defineBuiltIn(TypedArray,KEY,forced?property:NATIVE_ARRAY_BUFFER_VIEWS&&TypedArray[KEY]||property);}catch(error){}}else return;}for(ARRAY in TypedArrayConstructorsList){TypedArrayConstructor=globalThis2[ARRAY];if(TypedArrayConstructor&&(!TypedArrayConstructor[KEY]||forced)){defineBuiltIn(TypedArrayConstructor,KEY,property);}}};for(NAME in TypedArrayConstructorsList){Constructor=globalThis2[NAME];Prototype=Constructor&&Constructor.prototype;if(Prototype)enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR]=Constructor;else NATIVE_ARRAY_BUFFER_VIEWS=false;}for(NAME in BigIntArrayConstructorsList){Constructor=globalThis2[NAME];Prototype=Constructor&&Constructor.prototype;if(Prototype)enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR]=Constructor;}if(!NATIVE_ARRAY_BUFFER_VIEWS||!isCallable(TypedArray)||TypedArray===Function.prototype){TypedArray=function TypedArray2(){throw new TypeError2("Incorrect invocation");};if(NATIVE_ARRAY_BUFFER_VIEWS)for(NAME in TypedArrayConstructorsList){if(globalThis2[NAME])setPrototypeOf(globalThis2[NAME],TypedArray);}}if(!NATIVE_ARRAY_BUFFER_VIEWS||!TypedArrayPrototype||TypedArrayPrototype===ObjectPrototype){TypedArrayPrototype=TypedArray.prototype;if(NATIVE_ARRAY_BUFFER_VIEWS)for(NAME in TypedArrayConstructorsList){if(globalThis2[NAME])setPrototypeOf(globalThis2[NAME].prototype,TypedArrayPrototype);}}if(NATIVE_ARRAY_BUFFER_VIEWS&&getPrototypeOf(Uint8ClampedArrayPrototype)!==TypedArrayPrototype){setPrototypeOf(Uint8ClampedArrayPrototype,TypedArrayPrototype);}if(DESCRIPTORS&&!hasOwn(TypedArrayPrototype,TO_STRING_TAG)){TYPED_ARRAY_TAG_REQUIRED=true;defineBuiltInAccessor(TypedArrayPrototype,TO_STRING_TAG,{configurable:true,get:function(){return isObject(this)?this[TYPED_ARRAY_TAG]:void 0;}});for(NAME in TypedArrayConstructorsList)if(globalThis2[NAME]){createNonEnumerableProperty(globalThis2[NAME],TYPED_ARRAY_TAG,NAME);}}module2.exports={NATIVE_ARRAY_BUFFER_VIEWS,TYPED_ARRAY_TAG:TYPED_ARRAY_TAG_REQUIRED&&TYPED_ARRAY_TAG,aTypedArray,aTypedArrayConstructor,exportTypedArrayMethod,exportTypedArrayStaticMethod,getTypedArrayConstructor,isView,isTypedArray,TypedArray,TypedArrayPrototype};}});// node_modules/core-js/modules/es.array-buffer.is-view.js
var require_es_array_buffer_is_view=__commonJS({"node_modules/core-js/modules/es.array-buffer.is-view.js"(){"use strict";var $=require_export();var ArrayBufferViewCore=require_array_buffer_view_core();var NATIVE_ARRAY_BUFFER_VIEWS=ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;$({target:"ArrayBuffer",stat:true,forced:!NATIVE_ARRAY_BUFFER_VIEWS},{isView:ArrayBufferViewCore.isView});}});// node_modules/core-js/modules/es.array-buffer.slice.js
var require_es_array_buffer_slice=__commonJS({"node_modules/core-js/modules/es.array-buffer.slice.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this_clause();var fails=require_fails();var ArrayBufferModule=require_array_buffer();var anObject=require_an_object();var toAbsoluteIndex=require_to_absolute_index();var toLength=require_to_length();var ArrayBuffer2=ArrayBufferModule.ArrayBuffer;var DataView2=ArrayBufferModule.DataView;var DataViewPrototype=DataView2.prototype;var nativeArrayBufferSlice=uncurryThis(ArrayBuffer2.prototype.slice);var getUint8=uncurryThis(DataViewPrototype.getUint8);var setUint8=uncurryThis(DataViewPrototype.setUint8);var INCORRECT_SLICE=fails(function(){return!new ArrayBuffer2(2).slice(1,void 0).byteLength;});$({target:"ArrayBuffer",proto:true,unsafe:true,forced:INCORRECT_SLICE},{slice:function slice(start,end){if(nativeArrayBufferSlice&&end===void 0){return nativeArrayBufferSlice(anObject(this),start);}var length=anObject(this).byteLength;var first=toAbsoluteIndex(start,length);var fin=toAbsoluteIndex(end===void 0?length:end,length);var result=new ArrayBuffer2(toLength(fin-first));var viewSource=new DataView2(this);var viewTarget=new DataView2(result);var index=0;while(first<fin){setUint8(viewTarget,index++,getUint8(viewSource,first++));}return result;}});}});// node_modules/core-js/modules/es.data-view.constructor.js
var require_es_data_view_constructor=__commonJS({"node_modules/core-js/modules/es.data-view.constructor.js"(){"use strict";var $=require_export();var ArrayBufferModule=require_array_buffer();var NATIVE_ARRAY_BUFFER=require_array_buffer_basic_detection();$({global:true,constructor:true,forced:!NATIVE_ARRAY_BUFFER},{DataView:ArrayBufferModule.DataView});}});// node_modules/core-js/modules/es.data-view.js
var require_es_data_view=__commonJS({"node_modules/core-js/modules/es.data-view.js"(){"use strict";require_es_data_view_constructor();}});// node_modules/core-js/modules/es.data-view.get-float16.js
var require_es_data_view_get_float16=__commonJS({"node_modules/core-js/modules/es.data-view.get-float16.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var pow=Math.pow;var EXP_MASK16=31;var SIGNIFICAND_MASK16=1023;var MIN_SUBNORMAL16=pow(2,-24);var SIGNIFICAND_DENOM16=9765625e-10;var unpackFloat16=function(bytes){var sign=bytes>>>15;var exponent=bytes>>>10&EXP_MASK16;var significand=bytes&SIGNIFICAND_MASK16;if(exponent===EXP_MASK16)return significand===0?sign===0?Infinity:-Infinity:NaN;if(exponent===0)return significand*(sign===0?MIN_SUBNORMAL16:-MIN_SUBNORMAL16);return pow(2,exponent-15)*(sign===0?1+significand*SIGNIFICAND_DENOM16:-1-significand*SIGNIFICAND_DENOM16);};var getUint16=uncurryThis(DataView.prototype.getUint16);$({target:"DataView",proto:true},{getFloat16:function getFloat16(byteOffset){return unpackFloat16(getUint16(this,byteOffset,arguments.length>1?arguments[1]:false));}});}});// node_modules/core-js/internals/a-data-view.js
var require_a_data_view=__commonJS({"node_modules/core-js/internals/a-data-view.js"(exports,module2){"use strict";var classof=require_classof();var $TypeError=TypeError;module2.exports=function(argument){if(classof(argument)==="DataView")return argument;throw new $TypeError("Argument is not a DataView");};}});// node_modules/core-js/internals/math-log2.js
var require_math_log2=__commonJS({"node_modules/core-js/internals/math-log2.js"(exports,module2){"use strict";var log=Math.log;var LN2=Math.LN2;module2.exports=Math.log2||function log2(x){return log(x)/LN2;};}});// node_modules/core-js/modules/es.data-view.set-float16.js
var require_es_data_view_set_float16=__commonJS({"node_modules/core-js/modules/es.data-view.set-float16.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var aDataView=require_a_data_view();var toIndex=require_to_index();var log2=require_math_log2();var roundTiesToEven=require_math_round_ties_to_even();var pow=Math.pow;var MIN_INFINITY16=65520;var MIN_NORMAL16=61005353927612305e-21;var REC_MIN_SUBNORMAL16=16777216;var REC_SIGNIFICAND_DENOM16=1024;var packFloat16=function(value){if(value!==value)return 32256;if(value===0)return(1/value===-Infinity)<<15;var neg=value<0;if(neg)value=-value;if(value>=MIN_INFINITY16)return neg<<15|31744;if(value<MIN_NORMAL16)return neg<<15|roundTiesToEven(value*REC_MIN_SUBNORMAL16);var exponent=log2(value)|0;if(exponent===-15){return neg<<15|REC_SIGNIFICAND_DENOM16;}var significand=roundTiesToEven((value*pow(2,-exponent)-1)*REC_SIGNIFICAND_DENOM16);if(significand===REC_SIGNIFICAND_DENOM16){return neg<<15|exponent+16<<10;}return neg<<15|exponent+15<<10|significand;};var setUint16=uncurryThis(DataView.prototype.setUint16);$({target:"DataView",proto:true},{setFloat16:function setFloat16(byteOffset,value){setUint16(aDataView(this),toIndex(byteOffset),packFloat16(+value),arguments.length>2?arguments[2]:false);}});}});// node_modules/core-js/internals/array-buffer-byte-length.js
var require_array_buffer_byte_length=__commonJS({"node_modules/core-js/internals/array-buffer-byte-length.js"(exports,module2){"use strict";var globalThis2=require_global_this();var uncurryThisAccessor=require_function_uncurry_this_accessor();var classof=require_classof_raw();var ArrayBuffer2=globalThis2.ArrayBuffer;var TypeError2=globalThis2.TypeError;module2.exports=ArrayBuffer2&&uncurryThisAccessor(ArrayBuffer2.prototype,"byteLength","get")||function(O){if(classof(O)!=="ArrayBuffer")throw new TypeError2("ArrayBuffer expected");return O.byteLength;};}});// node_modules/core-js/internals/array-buffer-is-detached.js
var require_array_buffer_is_detached=__commonJS({"node_modules/core-js/internals/array-buffer-is-detached.js"(exports,module2){"use strict";var globalThis2=require_global_this();var NATIVE_ARRAY_BUFFER=require_array_buffer_basic_detection();var arrayBufferByteLength=require_array_buffer_byte_length();var DataView2=globalThis2.DataView;module2.exports=function(O){if(!NATIVE_ARRAY_BUFFER||arrayBufferByteLength(O)!==0)return false;try{new DataView2(O);return false;}catch(error){return true;}};}});// node_modules/core-js/modules/es.array-buffer.detached.js
var require_es_array_buffer_detached=__commonJS({"node_modules/core-js/modules/es.array-buffer.detached.js"(){"use strict";var DESCRIPTORS=require_descriptors();var defineBuiltInAccessor=require_define_built_in_accessor();var isDetached=require_array_buffer_is_detached();var ArrayBufferPrototype=ArrayBuffer.prototype;if(DESCRIPTORS&&!("detached"in ArrayBufferPrototype)){defineBuiltInAccessor(ArrayBufferPrototype,"detached",{configurable:true,get:function detached(){return isDetached(this);}});}}});// node_modules/core-js/internals/array-buffer-not-detached.js
var require_array_buffer_not_detached=__commonJS({"node_modules/core-js/internals/array-buffer-not-detached.js"(exports,module2){"use strict";var isDetached=require_array_buffer_is_detached();var $TypeError=TypeError;module2.exports=function(it){if(isDetached(it))throw new $TypeError("ArrayBuffer is detached");return it;};}});// node_modules/core-js/internals/get-built-in-node-module.js
var require_get_built_in_node_module=__commonJS({"node_modules/core-js/internals/get-built-in-node-module.js"(exports,module2){"use strict";var globalThis2=require_global_this();var IS_NODE=require_environment_is_node();module2.exports=function(name){if(IS_NODE){try{return globalThis2.process.getBuiltinModule(name);}catch(error){}try{return Function('return require("'+name+'")')();}catch(error){}}};}});// node_modules/core-js/internals/structured-clone-proper-transfer.js
var require_structured_clone_proper_transfer=__commonJS({"node_modules/core-js/internals/structured-clone-proper-transfer.js"(exports,module2){"use strict";var globalThis2=require_global_this();var fails=require_fails();var V8=require_environment_v8_version();var ENVIRONMENT=require_environment();var structuredClone=globalThis2.structuredClone;module2.exports=!!structuredClone&&!fails(function(){if(ENVIRONMENT==="DENO"&&V8>92||ENVIRONMENT==="NODE"&&V8>94||ENVIRONMENT==="BROWSER"&&V8>97)return false;var buffer=new ArrayBuffer(8);var clone=structuredClone(buffer,{transfer:[buffer]});return buffer.byteLength!==0||clone.byteLength!==8;});}});// node_modules/core-js/internals/detach-transferable.js
var require_detach_transferable=__commonJS({"node_modules/core-js/internals/detach-transferable.js"(exports,module2){"use strict";var globalThis2=require_global_this();var getBuiltInNodeModule=require_get_built_in_node_module();var PROPER_STRUCTURED_CLONE_TRANSFER=require_structured_clone_proper_transfer();var structuredClone=globalThis2.structuredClone;var $ArrayBuffer=globalThis2.ArrayBuffer;var $MessageChannel=globalThis2.MessageChannel;var detach=false;var WorkerThreads;var channel;var buffer;var $detach;if(PROPER_STRUCTURED_CLONE_TRANSFER){detach=function(transferable){structuredClone(transferable,{transfer:[transferable]});};}else if($ArrayBuffer)try{if(!$MessageChannel){WorkerThreads=getBuiltInNodeModule("worker_threads");if(WorkerThreads)$MessageChannel=WorkerThreads.MessageChannel;}if($MessageChannel){channel=new $MessageChannel();buffer=new $ArrayBuffer(2);$detach=function(transferable){channel.port1.postMessage(null,[transferable]);};if(buffer.byteLength===2){$detach(buffer);if(buffer.byteLength===0)detach=$detach;}}}catch(error){}module2.exports=detach;}});// node_modules/core-js/internals/array-buffer-transfer.js
var require_array_buffer_transfer=__commonJS({"node_modules/core-js/internals/array-buffer-transfer.js"(exports,module2){"use strict";var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var uncurryThisAccessor=require_function_uncurry_this_accessor();var toIndex=require_to_index();var notDetached=require_array_buffer_not_detached();var arrayBufferByteLength=require_array_buffer_byte_length();var detachTransferable=require_detach_transferable();var PROPER_STRUCTURED_CLONE_TRANSFER=require_structured_clone_proper_transfer();var structuredClone=globalThis2.structuredClone;var ArrayBuffer2=globalThis2.ArrayBuffer;var DataView2=globalThis2.DataView;var min=Math.min;var ArrayBufferPrototype=ArrayBuffer2.prototype;var DataViewPrototype=DataView2.prototype;var slice=uncurryThis(ArrayBufferPrototype.slice);var isResizable=uncurryThisAccessor(ArrayBufferPrototype,"resizable","get");var maxByteLength=uncurryThisAccessor(ArrayBufferPrototype,"maxByteLength","get");var getInt8=uncurryThis(DataViewPrototype.getInt8);var setInt8=uncurryThis(DataViewPrototype.setInt8);module2.exports=(PROPER_STRUCTURED_CLONE_TRANSFER||detachTransferable)&&function(arrayBuffer,newLength,preserveResizability){var byteLength=arrayBufferByteLength(arrayBuffer);var newByteLength=newLength===void 0?byteLength:toIndex(newLength);var fixedLength=!isResizable||!isResizable(arrayBuffer);var newBuffer;notDetached(arrayBuffer);if(PROPER_STRUCTURED_CLONE_TRANSFER){arrayBuffer=structuredClone(arrayBuffer,{transfer:[arrayBuffer]});if(byteLength===newByteLength&&(preserveResizability||fixedLength))return arrayBuffer;}if(byteLength>=newByteLength&&(!preserveResizability||fixedLength)){newBuffer=slice(arrayBuffer,0,newByteLength);}else{var options=preserveResizability&&!fixedLength&&maxByteLength?{maxByteLength:maxByteLength(arrayBuffer)}:void 0;newBuffer=new ArrayBuffer2(newByteLength,options);var a=new DataView2(arrayBuffer);var b=new DataView2(newBuffer);var copyLength=min(newByteLength,byteLength);for(var i=0;i<copyLength;i++)setInt8(b,i,getInt8(a,i));}if(!PROPER_STRUCTURED_CLONE_TRANSFER)detachTransferable(arrayBuffer);return newBuffer;};}});// node_modules/core-js/modules/es.array-buffer.transfer.js
var require_es_array_buffer_transfer=__commonJS({"node_modules/core-js/modules/es.array-buffer.transfer.js"(){"use strict";var $=require_export();var $transfer=require_array_buffer_transfer();if($transfer)$({target:"ArrayBuffer",proto:true},{transfer:function transfer(){return $transfer(this,arguments.length?arguments[0]:void 0,true);}});}});// node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js
var require_es_array_buffer_transfer_to_fixed_length=__commonJS({"node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js"(){"use strict";var $=require_export();var $transfer=require_array_buffer_transfer();if($transfer)$({target:"ArrayBuffer",proto:true},{transferToFixedLength:function transferToFixedLength(){return $transfer(this,arguments.length?arguments[0]:void 0,false);}});}});// node_modules/core-js/modules/es.date.get-year.js
var require_es_date_get_year=__commonJS({"node_modules/core-js/modules/es.date.get-year.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var fails=require_fails();var FORCED=fails(function(){return(/* @__PURE__ */new Date(16e11)).getYear()!==120;});var getFullYear=uncurryThis(Date.prototype.getFullYear);$({target:"Date",proto:true,forced:FORCED},{getYear:function getYear(){return getFullYear(this)-1900;}});}});// node_modules/core-js/modules/es.date.now.js
var require_es_date_now=__commonJS({"node_modules/core-js/modules/es.date.now.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var $Date=Date;var thisTimeValue=uncurryThis($Date.prototype.getTime);$({target:"Date",stat:true},{now:function now(){return thisTimeValue(new $Date());}});}});// node_modules/core-js/modules/es.date.set-year.js
var require_es_date_set_year=__commonJS({"node_modules/core-js/modules/es.date.set-year.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toIntegerOrInfinity=require_to_integer_or_infinity();var DatePrototype=Date.prototype;var thisTimeValue=uncurryThis(DatePrototype.getTime);var setFullYear=uncurryThis(DatePrototype.setFullYear);$({target:"Date",proto:true},{setYear:function setYear(year){thisTimeValue(this);var yi=toIntegerOrInfinity(year);var yyyy=yi>=0&&yi<=99?yi+1900:yi;return setFullYear(this,yyyy);}});}});// node_modules/core-js/modules/es.date.to-gmt-string.js
var require_es_date_to_gmt_string=__commonJS({"node_modules/core-js/modules/es.date.to-gmt-string.js"(){"use strict";var $=require_export();$({target:"Date",proto:true},{toGMTString:Date.prototype.toUTCString});}});// node_modules/core-js/internals/string-repeat.js
var require_string_repeat=__commonJS({"node_modules/core-js/internals/string-repeat.js"(exports,module2){"use strict";var toIntegerOrInfinity=require_to_integer_or_infinity();var toString=require_to_string();var requireObjectCoercible=require_require_object_coercible();var $RangeError=RangeError;module2.exports=function repeat(count){var str=toString(requireObjectCoercible(this));var result="";var n=toIntegerOrInfinity(count);if(n<0||n===Infinity)throw new $RangeError("Wrong number of repetitions");for(;n>0;(n>>>=1)&&(str+=str))if(n&1)result+=str;return result;};}});// node_modules/core-js/internals/string-pad.js
var require_string_pad=__commonJS({"node_modules/core-js/internals/string-pad.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var toLength=require_to_length();var toString=require_to_string();var $repeat=require_string_repeat();var requireObjectCoercible=require_require_object_coercible();var repeat=uncurryThis($repeat);var stringSlice=uncurryThis("".slice);var ceil=Math.ceil;var createMethod=function(IS_END){return function($this,maxLength,fillString){var S=toString(requireObjectCoercible($this));var intMaxLength=toLength(maxLength);var stringLength=S.length;var fillStr=fillString===void 0?" ":toString(fillString);var fillLen,stringFiller;if(intMaxLength<=stringLength||fillStr==="")return S;fillLen=intMaxLength-stringLength;stringFiller=repeat(fillStr,ceil(fillLen/fillStr.length));if(stringFiller.length>fillLen)stringFiller=stringSlice(stringFiller,0,fillLen);return IS_END?S+stringFiller:stringFiller+S;};};module2.exports={// `String.prototype.padStart` method
// https://tc39.es/ecma262/#sec-string.prototype.padstart
start:createMethod(false),// `String.prototype.padEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.padend
end:createMethod(true)};}});// node_modules/core-js/internals/date-to-iso-string.js
var require_date_to_iso_string=__commonJS({"node_modules/core-js/internals/date-to-iso-string.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var fails=require_fails();var padStart=require_string_pad().start;var $RangeError=RangeError;var $isFinite=isFinite;var abs=Math.abs;var DatePrototype=Date.prototype;var nativeDateToISOString=DatePrototype.toISOString;var thisTimeValue=uncurryThis(DatePrototype.getTime);var getUTCDate=uncurryThis(DatePrototype.getUTCDate);var getUTCFullYear=uncurryThis(DatePrototype.getUTCFullYear);var getUTCHours=uncurryThis(DatePrototype.getUTCHours);var getUTCMilliseconds=uncurryThis(DatePrototype.getUTCMilliseconds);var getUTCMinutes=uncurryThis(DatePrototype.getUTCMinutes);var getUTCMonth=uncurryThis(DatePrototype.getUTCMonth);var getUTCSeconds=uncurryThis(DatePrototype.getUTCSeconds);module2.exports=fails(function(){return nativeDateToISOString.call(new Date(-5e13-1))!=="0385-07-25T07:06:39.999Z";})||!fails(function(){nativeDateToISOString.call(/* @__PURE__ */new Date(NaN));})?function toISOString(){if(!$isFinite(thisTimeValue(this)))throw new $RangeError("Invalid time value");var date=this;var year=getUTCFullYear(date);var milliseconds=getUTCMilliseconds(date);var sign=year<0?"-":year>9999?"+":"";return sign+padStart(abs(year),sign?6:4,0)+"-"+padStart(getUTCMonth(date)+1,2,0)+"-"+padStart(getUTCDate(date),2,0)+"T"+padStart(getUTCHours(date),2,0)+":"+padStart(getUTCMinutes(date),2,0)+":"+padStart(getUTCSeconds(date),2,0)+"."+padStart(milliseconds,3,0)+"Z";}:nativeDateToISOString;}});// node_modules/core-js/modules/es.date.to-iso-string.js
var require_es_date_to_iso_string=__commonJS({"node_modules/core-js/modules/es.date.to-iso-string.js"(){"use strict";var $=require_export();var toISOString=require_date_to_iso_string();$({target:"Date",proto:true,forced:Date.prototype.toISOString!==toISOString},{toISOString});}});// node_modules/core-js/modules/es.date.to-json.js
var require_es_date_to_json=__commonJS({"node_modules/core-js/modules/es.date.to-json.js"(){"use strict";var $=require_export();var fails=require_fails();var toObject=require_to_object();var toPrimitive=require_to_primitive();var FORCED=fails(function(){return(/* @__PURE__ */new Date(NaN)).toJSON()!==null||Date.prototype.toJSON.call({toISOString:function(){return 1;}})!==1;});$({target:"Date",proto:true,arity:1,forced:FORCED},{// eslint-disable-next-line no-unused-vars -- required for `.length`
toJSON:function toJSON(key){var O=toObject(this);var pv=toPrimitive(O,"number");return typeof pv=="number"&&!isFinite(pv)?null:O.toISOString();}});}});// node_modules/core-js/internals/date-to-primitive.js
var require_date_to_primitive=__commonJS({"node_modules/core-js/internals/date-to-primitive.js"(exports,module2){"use strict";var anObject=require_an_object();var ordinaryToPrimitive=require_ordinary_to_primitive();var $TypeError=TypeError;module2.exports=function(hint){anObject(this);if(hint==="string"||hint==="default")hint="string";else if(hint!=="number")throw new $TypeError("Incorrect hint");return ordinaryToPrimitive(this,hint);};}});// node_modules/core-js/modules/es.date.to-primitive.js
var require_es_date_to_primitive=__commonJS({"node_modules/core-js/modules/es.date.to-primitive.js"(){"use strict";var hasOwn=require_has_own_property();var defineBuiltIn=require_define_built_in();var dateToPrimitive=require_date_to_primitive();var wellKnownSymbol=require_well_known_symbol();var TO_PRIMITIVE=wellKnownSymbol("toPrimitive");var DatePrototype=Date.prototype;if(!hasOwn(DatePrototype,TO_PRIMITIVE)){defineBuiltIn(DatePrototype,TO_PRIMITIVE,dateToPrimitive);}}});// node_modules/core-js/modules/es.date.to-string.js
var require_es_date_to_string=__commonJS({"node_modules/core-js/modules/es.date.to-string.js"(){"use strict";var uncurryThis=require_function_uncurry_this();var defineBuiltIn=require_define_built_in();var DatePrototype=Date.prototype;var INVALID_DATE="Invalid Date";var TO_STRING="toString";var nativeDateToString=uncurryThis(DatePrototype[TO_STRING]);var thisTimeValue=uncurryThis(DatePrototype.getTime);if(String(/* @__PURE__ */new Date(NaN))!==INVALID_DATE){defineBuiltIn(DatePrototype,TO_STRING,function toString(){var value=thisTimeValue(this);return value===value?nativeDateToString(this):INVALID_DATE;});}}});// node_modules/core-js/internals/add-disposable-resource.js
var require_add_disposable_resource=__commonJS({"node_modules/core-js/internals/add-disposable-resource.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var bind=require_function_bind_context();var anObject=require_an_object();var aCallable=require_a_callable();var isNullOrUndefined=require_is_null_or_undefined();var getMethod=require_get_method();var wellKnownSymbol=require_well_known_symbol();var ASYNC_DISPOSE=wellKnownSymbol("asyncDispose");var DISPOSE=wellKnownSymbol("dispose");var push=uncurryThis([].push);var getDisposeMethod=function(V,hint){if(hint==="async-dispose"){var method=getMethod(V,ASYNC_DISPOSE);if(method!==void 0)return method;method=getMethod(V,DISPOSE);if(method===void 0)return method;return function(){var O=this;var Promise2=getBuiltIn("Promise");return new Promise2(function(resolve){call(method,O);resolve(void 0);});};}return getMethod(V,DISPOSE);};var createDisposableResource=function(V,hint,method){if(arguments.length<3&&!isNullOrUndefined(V)){method=aCallable(getDisposeMethod(anObject(V),hint));}return method===void 0?function(){return void 0;}:bind(method,V);};module2.exports=function(disposable,V,hint,method){var resource;if(arguments.length<4){if(isNullOrUndefined(V)&&hint==="sync-dispose")return;resource=createDisposableResource(V,hint);}else{resource=createDisposableResource(void 0,hint,method);}push(disposable.stack,resource);};}});// node_modules/core-js/modules/es.disposable-stack.constructor.js
var require_es_disposable_stack_constructor=__commonJS({"node_modules/core-js/modules/es.disposable-stack.constructor.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var getBuiltIn=require_get_built_in();var aCallable=require_a_callable();var anInstance=require_an_instance();var defineBuiltIn=require_define_built_in();var defineBuiltIns=require_define_built_ins();var defineBuiltInAccessor=require_define_built_in_accessor();var wellKnownSymbol=require_well_known_symbol();var InternalStateModule=require_internal_state();var addDisposableResource=require_add_disposable_resource();var SuppressedError2=getBuiltIn("SuppressedError");var $ReferenceError=ReferenceError;var DISPOSE=wellKnownSymbol("dispose");var TO_STRING_TAG=wellKnownSymbol("toStringTag");var DISPOSABLE_STACK="DisposableStack";var setInternalState=InternalStateModule.set;var getDisposableStackInternalState=InternalStateModule.getterFor(DISPOSABLE_STACK);var HINT="sync-dispose";var DISPOSED="disposed";var PENDING="pending";var getPendingDisposableStackInternalState=function(stack){var internalState=getDisposableStackInternalState(stack);if(internalState.state===DISPOSED)throw new $ReferenceError(DISPOSABLE_STACK+" already disposed");return internalState;};var $DisposableStack=function DisposableStack(){setInternalState(anInstance(this,DisposableStackPrototype),{type:DISPOSABLE_STACK,state:PENDING,stack:[]});if(!DESCRIPTORS)this.disposed=false;};var DisposableStackPrototype=$DisposableStack.prototype;defineBuiltIns(DisposableStackPrototype,{dispose:function dispose(){var internalState=getDisposableStackInternalState(this);if(internalState.state===DISPOSED)return;internalState.state=DISPOSED;if(!DESCRIPTORS)this.disposed=true;var stack=internalState.stack;var i=stack.length;var thrown=false;var suppressed;while(i){var disposeMethod=stack[--i];stack[i]=null;try{disposeMethod();}catch(errorResult){if(thrown){suppressed=new SuppressedError2(errorResult,suppressed);}else{thrown=true;suppressed=errorResult;}}}internalState.stack=null;if(thrown)throw suppressed;},use:function use(value){addDisposableResource(getPendingDisposableStackInternalState(this),value,HINT);return value;},adopt:function adopt(value,onDispose){var internalState=getPendingDisposableStackInternalState(this);aCallable(onDispose);addDisposableResource(internalState,void 0,HINT,function(){onDispose(value);});return value;},defer:function defer(onDispose){var internalState=getPendingDisposableStackInternalState(this);aCallable(onDispose);addDisposableResource(internalState,void 0,HINT,onDispose);},move:function move(){var internalState=getPendingDisposableStackInternalState(this);var newDisposableStack=new $DisposableStack();getDisposableStackInternalState(newDisposableStack).stack=internalState.stack;internalState.stack=[];internalState.state=DISPOSED;if(!DESCRIPTORS)this.disposed=true;return newDisposableStack;}});if(DESCRIPTORS)defineBuiltInAccessor(DisposableStackPrototype,"disposed",{configurable:true,get:function disposed(){return getDisposableStackInternalState(this).state===DISPOSED;}});defineBuiltIn(DisposableStackPrototype,DISPOSE,DisposableStackPrototype.dispose,{name:"dispose"});defineBuiltIn(DisposableStackPrototype,TO_STRING_TAG,DISPOSABLE_STACK,{nonWritable:true});$({global:true,constructor:true},{DisposableStack:$DisposableStack});}});// node_modules/core-js/modules/es.escape.js
var require_es_escape=__commonJS({"node_modules/core-js/modules/es.escape.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var exec=uncurryThis(/./.exec);var numberToString=uncurryThis(1.1.toString);var toUpperCase=uncurryThis("".toUpperCase);var raw=/[\w*+\-./@]/;var hex=function(code,length){var result=numberToString(code,16);while(result.length<length)result="0"+result;return result;};$({global:true},{escape:function escape(string){var str=toString(string);var result="";var length=str.length;var index=0;var chr,code;while(index<length){chr=charAt(str,index++);if(exec(raw,chr)){result+=chr;}else{code=charCodeAt(chr,0);if(code<256){result+="%"+hex(code,2);}else{result+="%u"+toUpperCase(hex(code,4));}}}return result;}});}});// node_modules/core-js/internals/function-bind.js
var require_function_bind=__commonJS({"node_modules/core-js/internals/function-bind.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var isObject=require_is_object();var hasOwn=require_has_own_property();var arraySlice=require_array_slice();var NATIVE_BIND=require_function_bind_native();var $Function=Function;var concat=uncurryThis([].concat);var join=uncurryThis([].join);var factories={};var construct=function(C,argsLength,args){if(!hasOwn(factories,argsLength)){var list=[];var i=0;for(;i<argsLength;i++)list[i]="a["+i+"]";factories[argsLength]=$Function("C,a","return new C("+join(list,",")+")");}return factories[argsLength](C,args);};module2.exports=NATIVE_BIND?$Function.bind:function bind(that){var F=aCallable(this);var Prototype=F.prototype;var partArgs=arraySlice(arguments,1);var boundFunction=function bound(){var args=concat(partArgs,arraySlice(arguments));return this instanceof boundFunction?construct(F,args.length,args):F.apply(that,args);};if(isObject(Prototype))boundFunction.prototype=Prototype;return boundFunction;};}});// node_modules/core-js/modules/es.function.bind.js
var require_es_function_bind=__commonJS({"node_modules/core-js/modules/es.function.bind.js"(){"use strict";var $=require_export();var bind=require_function_bind();$({target:"Function",proto:true,forced:Function.bind!==bind},{bind});}});// node_modules/core-js/modules/es.function.has-instance.js
var require_es_function_has_instance=__commonJS({"node_modules/core-js/modules/es.function.has-instance.js"(){"use strict";var isCallable=require_is_callable();var isObject=require_is_object();var definePropertyModule=require_object_define_property();var isPrototypeOf=require_object_is_prototype_of();var wellKnownSymbol=require_well_known_symbol();var makeBuiltIn=require_make_built_in();var HAS_INSTANCE=wellKnownSymbol("hasInstance");var FunctionPrototype=Function.prototype;if(!(HAS_INSTANCE in FunctionPrototype)){definePropertyModule.f(FunctionPrototype,HAS_INSTANCE,{value:makeBuiltIn(function(O){if(!isCallable(this)||!isObject(O))return false;var P=this.prototype;return isObject(P)?isPrototypeOf(P,O):O instanceof this;},HAS_INSTANCE)});}}});// node_modules/core-js/modules/es.function.name.js
var require_es_function_name=__commonJS({"node_modules/core-js/modules/es.function.name.js"(){"use strict";var DESCRIPTORS=require_descriptors();var FUNCTION_NAME_EXISTS=require_function_name().EXISTS;var uncurryThis=require_function_uncurry_this();var defineBuiltInAccessor=require_define_built_in_accessor();var FunctionPrototype=Function.prototype;var functionToString=uncurryThis(FunctionPrototype.toString);var nameRE=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;var regExpExec=uncurryThis(nameRE.exec);var NAME="name";if(DESCRIPTORS&&!FUNCTION_NAME_EXISTS){defineBuiltInAccessor(FunctionPrototype,NAME,{configurable:true,get:function(){try{return regExpExec(nameRE,functionToString(this))[1];}catch(error){return"";}}});}}});// node_modules/core-js/modules/es.global-this.js
var require_es_global_this=__commonJS({"node_modules/core-js/modules/es.global-this.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();$({global:true,forced:globalThis2.globalThis!==globalThis2},{globalThis:globalThis2});}});// node_modules/core-js/modules/es.iterator.constructor.js
var require_es_iterator_constructor=__commonJS({"node_modules/core-js/modules/es.iterator.constructor.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var anInstance=require_an_instance();var anObject=require_an_object();var isCallable=require_is_callable();var getPrototypeOf=require_object_get_prototype_of();var defineBuiltInAccessor=require_define_built_in_accessor();var createProperty=require_create_property();var fails=require_fails();var hasOwn=require_has_own_property();var wellKnownSymbol=require_well_known_symbol();var IteratorPrototype=require_iterators_core().IteratorPrototype;var DESCRIPTORS=require_descriptors();var IS_PURE=require_is_pure();var CONSTRUCTOR="constructor";var ITERATOR="Iterator";var TO_STRING_TAG=wellKnownSymbol("toStringTag");var $TypeError=TypeError;var NativeIterator=globalThis2[ITERATOR];var FORCED=IS_PURE||!isCallable(NativeIterator)||NativeIterator.prototype!==IteratorPrototype||!fails(function(){NativeIterator({});});var IteratorConstructor=function Iterator2(){anInstance(this,IteratorPrototype);if(getPrototypeOf(this)===IteratorPrototype)throw new $TypeError("Abstract class Iterator not directly constructable");};var defineIteratorPrototypeAccessor=function(key,value){if(DESCRIPTORS){defineBuiltInAccessor(IteratorPrototype,key,{configurable:true,get:function(){return value;},set:function(replacement){anObject(this);if(this===IteratorPrototype)throw new $TypeError("You can't redefine this property");if(hasOwn(this,key))this[key]=replacement;else createProperty(this,key,replacement);}});}else IteratorPrototype[key]=value;};if(!hasOwn(IteratorPrototype,TO_STRING_TAG))defineIteratorPrototypeAccessor(TO_STRING_TAG,ITERATOR);if(FORCED||!hasOwn(IteratorPrototype,CONSTRUCTOR)||IteratorPrototype[CONSTRUCTOR]===Object){defineIteratorPrototypeAccessor(CONSTRUCTOR,IteratorConstructor);}IteratorConstructor.prototype=IteratorPrototype;$({global:true,constructor:true,forced:FORCED},{Iterator:IteratorConstructor});}});// node_modules/core-js/modules/es.iterator.dispose.js
var require_es_iterator_dispose=__commonJS({"node_modules/core-js/modules/es.iterator.dispose.js"(){"use strict";var call=require_function_call();var defineBuiltIn=require_define_built_in();var getMethod=require_get_method();var hasOwn=require_has_own_property();var wellKnownSymbol=require_well_known_symbol();var IteratorPrototype=require_iterators_core().IteratorPrototype;var DISPOSE=wellKnownSymbol("dispose");if(!hasOwn(IteratorPrototype,DISPOSE)){defineBuiltIn(IteratorPrototype,DISPOSE,function(){var $return=getMethod(this,"return");if($return)call($return,this);});}}});// node_modules/core-js/internals/get-iterator-direct.js
var require_get_iterator_direct=__commonJS({"node_modules/core-js/internals/get-iterator-direct.js"(exports,module2){"use strict";module2.exports=function(obj){return{iterator:obj,next:obj.next,done:false};};}});// node_modules/core-js/internals/not-a-nan.js
var require_not_a_nan=__commonJS({"node_modules/core-js/internals/not-a-nan.js"(exports,module2){"use strict";var $RangeError=RangeError;module2.exports=function(it){if(it===it)return it;throw new $RangeError("NaN is not allowed");};}});// node_modules/core-js/internals/to-positive-integer.js
var require_to_positive_integer=__commonJS({"node_modules/core-js/internals/to-positive-integer.js"(exports,module2){"use strict";var toIntegerOrInfinity=require_to_integer_or_infinity();var $RangeError=RangeError;module2.exports=function(it){var result=toIntegerOrInfinity(it);if(result<0)throw new $RangeError("The argument can't be less than 0");return result;};}});// node_modules/core-js/internals/iterator-close-all.js
var require_iterator_close_all=__commonJS({"node_modules/core-js/internals/iterator-close-all.js"(exports,module2){"use strict";var iteratorClose=require_iterator_close();module2.exports=function(iters,kind,value){for(var i=iters.length-1;i>=0;i--){if(iters[i]===void 0)continue;try{value=iteratorClose(iters[i].iterator,kind,value);}catch(error){kind="throw";value=error;}}if(kind==="throw")throw value;return value;};}});// node_modules/core-js/internals/iterator-create-proxy.js
var require_iterator_create_proxy=__commonJS({"node_modules/core-js/internals/iterator-create-proxy.js"(exports,module2){"use strict";var call=require_function_call();var create=require_object_create();var createNonEnumerableProperty=require_create_non_enumerable_property();var defineBuiltIns=require_define_built_ins();var wellKnownSymbol=require_well_known_symbol();var InternalStateModule=require_internal_state();var getMethod=require_get_method();var IteratorPrototype=require_iterators_core().IteratorPrototype;var createIterResultObject=require_create_iter_result_object();var iteratorClose=require_iterator_close();var iteratorCloseAll=require_iterator_close_all();var TO_STRING_TAG=wellKnownSymbol("toStringTag");var ITERATOR_HELPER="IteratorHelper";var WRAP_FOR_VALID_ITERATOR="WrapForValidIterator";var NORMAL="normal";var THROW="throw";var setInternalState=InternalStateModule.set;var createIteratorProxyPrototype=function(IS_ITERATOR){var getInternalState=InternalStateModule.getterFor(IS_ITERATOR?WRAP_FOR_VALID_ITERATOR:ITERATOR_HELPER);return defineBuiltIns(create(IteratorPrototype),{next:function next(){var state=getInternalState(this);if(IS_ITERATOR)return state.nextHandler();if(state.done)return createIterResultObject(void 0,true);try{var result=state.nextHandler();return state.returnHandlerResult?result:createIterResultObject(result,state.done);}catch(error){state.done=true;throw error;}},"return":function(){var state=getInternalState(this);var iterator=state.iterator;state.done=true;if(IS_ITERATOR){var returnMethod=getMethod(iterator,"return");return returnMethod?call(returnMethod,iterator):createIterResultObject(void 0,true);}if(state.inner)try{iteratorClose(state.inner.iterator,NORMAL);}catch(error){return iteratorClose(iterator,THROW,error);}if(state.openIters)try{iteratorCloseAll(state.openIters,NORMAL);}catch(error){return iteratorClose(iterator,THROW,error);}if(iterator)iteratorClose(iterator,NORMAL);return createIterResultObject(void 0,true);}});};var WrapForValidIteratorPrototype=createIteratorProxyPrototype(true);var IteratorHelperPrototype=createIteratorProxyPrototype(false);createNonEnumerableProperty(IteratorHelperPrototype,TO_STRING_TAG,"Iterator Helper");module2.exports=function(nextHandler,IS_ITERATOR,RETURN_HANDLER_RESULT){var IteratorProxy=function Iterator2(record,state){if(state){state.iterator=record.iterator;state.next=record.next;}else state=record;state.type=IS_ITERATOR?WRAP_FOR_VALID_ITERATOR:ITERATOR_HELPER;state.returnHandlerResult=!!RETURN_HANDLER_RESULT;state.nextHandler=nextHandler;state.counter=0;state.done=false;setInternalState(this,state);};IteratorProxy.prototype=IS_ITERATOR?WrapForValidIteratorPrototype:IteratorHelperPrototype;return IteratorProxy;};}});// node_modules/core-js/internals/iterator-helper-throws-on-invalid-iterator.js
var require_iterator_helper_throws_on_invalid_iterator=__commonJS({"node_modules/core-js/internals/iterator-helper-throws-on-invalid-iterator.js"(exports,module2){"use strict";module2.exports=function(methodName,argument){var method=typeof Iterator=="function"&&Iterator.prototype[methodName];if(method)try{method.call({next:null},argument).next();}catch(error){return true;}};}});// node_modules/core-js/internals/iterator-helper-without-closing-on-early-error.js
var require_iterator_helper_without_closing_on_early_error=__commonJS({"node_modules/core-js/internals/iterator-helper-without-closing-on-early-error.js"(exports,module2){"use strict";var globalThis2=require_global_this();module2.exports=function(METHOD_NAME,ExpectedError){var Iterator2=globalThis2.Iterator;var IteratorPrototype=Iterator2&&Iterator2.prototype;var method=IteratorPrototype&&IteratorPrototype[METHOD_NAME];var CLOSED=false;if(method)try{method.call({next:function(){return{done:true};},"return":function(){CLOSED=true;}},-1);}catch(error){if(!(error instanceof ExpectedError))CLOSED=false;}if(!CLOSED)return method;};}});// node_modules/core-js/modules/es.iterator.drop.js
var require_es_iterator_drop=__commonJS({"node_modules/core-js/modules/es.iterator.drop.js"(){"use strict";var $=require_export();var call=require_function_call();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var notANaN=require_not_a_nan();var toPositiveInteger=require_to_positive_integer();var iteratorClose=require_iterator_close();var createIteratorProxy=require_iterator_create_proxy();var iteratorHelperThrowsOnInvalidIterator=require_iterator_helper_throws_on_invalid_iterator();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var IS_PURE=require_is_pure();var DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR=!IS_PURE&&!iteratorHelperThrowsOnInvalidIterator("drop",0);var dropWithoutClosingOnEarlyError=!IS_PURE&&!DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR&&iteratorHelperWithoutClosingOnEarlyError("drop",RangeError);var FORCED=IS_PURE||DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR||dropWithoutClosingOnEarlyError;var IteratorProxy=createIteratorProxy(function(){var iterator=this.iterator;var next=this.next;var result,done;while(this.remaining){this.remaining--;result=anObject(call(next,iterator));done=this.done=!!result.done;if(done)return;}result=anObject(call(next,iterator));done=this.done=!!result.done;if(!done)return result.value;});$({target:"Iterator",proto:true,real:true,forced:FORCED},{drop:function drop(limit){anObject(this);var remaining;try{remaining=toPositiveInteger(notANaN(+limit));}catch(error){iteratorClose(this,"throw",error);}if(dropWithoutClosingOnEarlyError)return call(dropWithoutClosingOnEarlyError,this,remaining);return new IteratorProxy(getIteratorDirect(this),{remaining});}});}});// node_modules/core-js/modules/es.iterator.every.js
var require_es_iterator_every=__commonJS({"node_modules/core-js/modules/es.iterator.every.js"(){"use strict";var $=require_export();var call=require_function_call();var iterate=require_iterate();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var everyWithoutClosingOnEarlyError=iteratorHelperWithoutClosingOnEarlyError("every",TypeError);$({target:"Iterator",proto:true,real:true,forced:everyWithoutClosingOnEarlyError},{every:function every(predicate){anObject(this);try{aCallable(predicate);}catch(error){iteratorClose(this,"throw",error);}if(everyWithoutClosingOnEarlyError)return call(everyWithoutClosingOnEarlyError,this,predicate);var record=getIteratorDirect(this);var counter=0;return!iterate(record,function(value,stop){if(!predicate(value,counter++))return stop();},{IS_RECORD:true,INTERRUPTED:true}).stopped;}});}});// node_modules/core-js/modules/es.iterator.filter.js
var require_es_iterator_filter=__commonJS({"node_modules/core-js/modules/es.iterator.filter.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var createIteratorProxy=require_iterator_create_proxy();var callWithSafeIterationClosing=require_call_with_safe_iteration_closing();var IS_PURE=require_is_pure();var iteratorClose=require_iterator_close();var iteratorHelperThrowsOnInvalidIterator=require_iterator_helper_throws_on_invalid_iterator();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR=!IS_PURE&&!iteratorHelperThrowsOnInvalidIterator("filter",function(){});var filterWithoutClosingOnEarlyError=!IS_PURE&&!FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR&&iteratorHelperWithoutClosingOnEarlyError("filter",TypeError);var FORCED=IS_PURE||FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR||filterWithoutClosingOnEarlyError;var IteratorProxy=createIteratorProxy(function(){var iterator=this.iterator;var predicate=this.predicate;var next=this.next;var result,done,value;while(true){result=anObject(call(next,iterator));done=this.done=!!result.done;if(done)return;value=result.value;if(callWithSafeIterationClosing(iterator,predicate,[value,this.counter++],true))return value;}});$({target:"Iterator",proto:true,real:true,forced:FORCED},{filter:function filter(predicate){anObject(this);try{aCallable(predicate);}catch(error){iteratorClose(this,"throw",error);}if(filterWithoutClosingOnEarlyError)return call(filterWithoutClosingOnEarlyError,this,predicate);return new IteratorProxy(getIteratorDirect(this),{predicate});}});}});// node_modules/core-js/modules/es.iterator.find.js
var require_es_iterator_find=__commonJS({"node_modules/core-js/modules/es.iterator.find.js"(){"use strict";var $=require_export();var call=require_function_call();var iterate=require_iterate();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var findWithoutClosingOnEarlyError=iteratorHelperWithoutClosingOnEarlyError("find",TypeError);$({target:"Iterator",proto:true,real:true,forced:findWithoutClosingOnEarlyError},{find:function find(predicate){anObject(this);try{aCallable(predicate);}catch(error){iteratorClose(this,"throw",error);}if(findWithoutClosingOnEarlyError)return call(findWithoutClosingOnEarlyError,this,predicate);var record=getIteratorDirect(this);var counter=0;return iterate(record,function(value,stop){if(predicate(value,counter++))return stop(value);},{IS_RECORD:true,INTERRUPTED:true}).result;}});}});// node_modules/core-js/internals/get-iterator-flattenable.js
var require_get_iterator_flattenable=__commonJS({"node_modules/core-js/internals/get-iterator-flattenable.js"(exports,module2){"use strict";var call=require_function_call();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var getIteratorMethod=require_get_iterator_method();module2.exports=function(obj,stringHandling){if(!stringHandling||typeof obj!=="string")anObject(obj);var method=getIteratorMethod(obj);return getIteratorDirect(anObject(method!==void 0?call(method,obj):obj));};}});// node_modules/core-js/modules/es.iterator.flat-map.js
var require_es_iterator_flat_map=__commonJS({"node_modules/core-js/modules/es.iterator.flat-map.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var getIteratorFlattenable=require_get_iterator_flattenable();var createIteratorProxy=require_iterator_create_proxy();var iteratorClose=require_iterator_close();var IS_PURE=require_is_pure();var iteratorHelperThrowsOnInvalidIterator=require_iterator_helper_throws_on_invalid_iterator();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR=!IS_PURE&&!iteratorHelperThrowsOnInvalidIterator("flatMap",function(){});var flatMapWithoutClosingOnEarlyError=!IS_PURE&&!FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR&&iteratorHelperWithoutClosingOnEarlyError("flatMap",TypeError);var FORCED=IS_PURE||FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR||flatMapWithoutClosingOnEarlyError;var IteratorProxy=createIteratorProxy(function(){var iterator=this.iterator;var mapper=this.mapper;var result,inner;while(true){if(inner=this.inner)try{result=anObject(call(inner.next,inner.iterator));if(!result.done)return result.value;this.inner=null;}catch(error){iteratorClose(iterator,"throw",error);}result=anObject(call(this.next,iterator));if(this.done=!!result.done)return;try{this.inner=getIteratorFlattenable(mapper(result.value,this.counter++),false);}catch(error){iteratorClose(iterator,"throw",error);}}});$({target:"Iterator",proto:true,real:true,forced:FORCED},{flatMap:function flatMap(mapper){anObject(this);try{aCallable(mapper);}catch(error){iteratorClose(this,"throw",error);}if(flatMapWithoutClosingOnEarlyError)return call(flatMapWithoutClosingOnEarlyError,this,mapper);return new IteratorProxy(getIteratorDirect(this),{mapper,inner:null});}});}});// node_modules/core-js/modules/es.iterator.for-each.js
var require_es_iterator_for_each=__commonJS({"node_modules/core-js/modules/es.iterator.for-each.js"(){"use strict";var $=require_export();var call=require_function_call();var iterate=require_iterate();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var forEachWithoutClosingOnEarlyError=iteratorHelperWithoutClosingOnEarlyError("forEach",TypeError);$({target:"Iterator",proto:true,real:true,forced:forEachWithoutClosingOnEarlyError},{forEach:function forEach(fn){anObject(this);try{aCallable(fn);}catch(error){iteratorClose(this,"throw",error);}if(forEachWithoutClosingOnEarlyError)return call(forEachWithoutClosingOnEarlyError,this,fn);var record=getIteratorDirect(this);var counter=0;iterate(record,function(value){fn(value,counter++);},{IS_RECORD:true});}});}});// node_modules/core-js/modules/es.iterator.from.js
var require_es_iterator_from=__commonJS({"node_modules/core-js/modules/es.iterator.from.js"(){"use strict";var $=require_export();var call=require_function_call();var toObject=require_to_object();var isPrototypeOf=require_object_is_prototype_of();var IteratorPrototype=require_iterators_core().IteratorPrototype;var createIteratorProxy=require_iterator_create_proxy();var getIteratorFlattenable=require_get_iterator_flattenable();var IS_PURE=require_is_pure();var FORCED=IS_PURE||function(){try{Iterator.from({"return":null})["return"]();}catch(error){return true;}}();var IteratorProxy=createIteratorProxy(function(){return call(this.next,this.iterator);},true);$({target:"Iterator",stat:true,forced:FORCED},{from:function from(O){var iteratorRecord=getIteratorFlattenable(typeof O=="string"?toObject(O):O,true);return isPrototypeOf(IteratorPrototype,iteratorRecord.iterator)?iteratorRecord.iterator:new IteratorProxy(iteratorRecord);}});}});// node_modules/core-js/modules/es.iterator.map.js
var require_es_iterator_map=__commonJS({"node_modules/core-js/modules/es.iterator.map.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var createIteratorProxy=require_iterator_create_proxy();var callWithSafeIterationClosing=require_call_with_safe_iteration_closing();var iteratorClose=require_iterator_close();var iteratorHelperThrowsOnInvalidIterator=require_iterator_helper_throws_on_invalid_iterator();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var IS_PURE=require_is_pure();var MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR=!IS_PURE&&!iteratorHelperThrowsOnInvalidIterator("map",function(){});var mapWithoutClosingOnEarlyError=!IS_PURE&&!MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR&&iteratorHelperWithoutClosingOnEarlyError("map",TypeError);var FORCED=IS_PURE||MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR||mapWithoutClosingOnEarlyError;var IteratorProxy=createIteratorProxy(function(){var iterator=this.iterator;var result=anObject(call(this.next,iterator));var done=this.done=!!result.done;if(!done)return callWithSafeIterationClosing(iterator,this.mapper,[result.value,this.counter++],true);});$({target:"Iterator",proto:true,real:true,forced:FORCED},{map:function map(mapper){anObject(this);try{aCallable(mapper);}catch(error){iteratorClose(this,"throw",error);}if(mapWithoutClosingOnEarlyError)return call(mapWithoutClosingOnEarlyError,this,mapper);return new IteratorProxy(getIteratorDirect(this),{mapper});}});}});// node_modules/core-js/modules/es.iterator.reduce.js
var require_es_iterator_reduce=__commonJS({"node_modules/core-js/modules/es.iterator.reduce.js"(){"use strict";var $=require_export();var iterate=require_iterate();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var apply=require_function_apply();var fails=require_fails();var $TypeError=TypeError;var FAILS_ON_INITIAL_UNDEFINED=fails(function(){[].keys().reduce(function(){},void 0);});var reduceWithoutClosingOnEarlyError=!FAILS_ON_INITIAL_UNDEFINED&&iteratorHelperWithoutClosingOnEarlyError("reduce",$TypeError);$({target:"Iterator",proto:true,real:true,forced:FAILS_ON_INITIAL_UNDEFINED||reduceWithoutClosingOnEarlyError},{reduce:function reduce(reducer){anObject(this);try{aCallable(reducer);}catch(error){iteratorClose(this,"throw",error);}var noInitial=arguments.length<2;var accumulator=noInitial?void 0:arguments[1];if(reduceWithoutClosingOnEarlyError){return apply(reduceWithoutClosingOnEarlyError,this,noInitial?[reducer]:[reducer,accumulator]);}var record=getIteratorDirect(this);var counter=0;iterate(record,function(value){if(noInitial){noInitial=false;accumulator=value;}else{accumulator=reducer(accumulator,value,counter);}counter++;},{IS_RECORD:true});if(noInitial)throw new $TypeError("Reduce of empty iterator with no initial value");return accumulator;}});}});// node_modules/core-js/modules/es.iterator.some.js
var require_es_iterator_some=__commonJS({"node_modules/core-js/modules/es.iterator.some.js"(){"use strict";var $=require_export();var call=require_function_call();var iterate=require_iterate();var aCallable=require_a_callable();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var someWithoutClosingOnEarlyError=iteratorHelperWithoutClosingOnEarlyError("some",TypeError);$({target:"Iterator",proto:true,real:true,forced:someWithoutClosingOnEarlyError},{some:function some(predicate){anObject(this);try{aCallable(predicate);}catch(error){iteratorClose(this,"throw",error);}if(someWithoutClosingOnEarlyError)return call(someWithoutClosingOnEarlyError,this,predicate);var record=getIteratorDirect(this);var counter=0;return iterate(record,function(value,stop){if(predicate(value,counter++))return stop();},{IS_RECORD:true,INTERRUPTED:true}).stopped;}});}});// node_modules/core-js/modules/es.iterator.take.js
var require_es_iterator_take=__commonJS({"node_modules/core-js/modules/es.iterator.take.js"(){"use strict";var $=require_export();var call=require_function_call();var anObject=require_an_object();var getIteratorDirect=require_get_iterator_direct();var notANaN=require_not_a_nan();var toPositiveInteger=require_to_positive_integer();var createIteratorProxy=require_iterator_create_proxy();var iteratorClose=require_iterator_close();var iteratorHelperWithoutClosingOnEarlyError=require_iterator_helper_without_closing_on_early_error();var IS_PURE=require_is_pure();var takeWithoutClosingOnEarlyError=!IS_PURE&&iteratorHelperWithoutClosingOnEarlyError("take",RangeError);var IteratorProxy=createIteratorProxy(function(){var iterator=this.iterator;if(!this.remaining--){this.done=true;return iteratorClose(iterator,"normal",void 0);}var result=anObject(call(this.next,iterator));var done=this.done=!!result.done;if(!done)return result.value;});$({target:"Iterator",proto:true,real:true,forced:IS_PURE||takeWithoutClosingOnEarlyError},{take:function take(limit){anObject(this);var remaining;try{remaining=toPositiveInteger(notANaN(+limit));}catch(error){iteratorClose(this,"throw",error);}if(takeWithoutClosingOnEarlyError)return call(takeWithoutClosingOnEarlyError,this,remaining);return new IteratorProxy(getIteratorDirect(this),{remaining});}});}});// node_modules/core-js/modules/es.iterator.to-array.js
var require_es_iterator_to_array=__commonJS({"node_modules/core-js/modules/es.iterator.to-array.js"(){"use strict";var $=require_export();var anObject=require_an_object();var iterate=require_iterate();var getIteratorDirect=require_get_iterator_direct();var push=[].push;$({target:"Iterator",proto:true,real:true},{toArray:function toArray(){var result=[];iterate(getIteratorDirect(anObject(this)),push,{that:result,IS_RECORD:true});return result;}});}});// node_modules/core-js/modules/es.json.to-string-tag.js
var require_es_json_to_string_tag=__commonJS({"node_modules/core-js/modules/es.json.to-string-tag.js"(){"use strict";var globalThis2=require_global_this();var setToStringTag=require_set_to_string_tag();setToStringTag(globalThis2.JSON,"JSON",true);}});// node_modules/core-js/internals/array-buffer-non-extensible.js
var require_array_buffer_non_extensible=__commonJS({"node_modules/core-js/internals/array-buffer-non-extensible.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=fails(function(){if(typeof ArrayBuffer=="function"){var buffer=new ArrayBuffer(8);if(Object.isExtensible(buffer))Object.defineProperty(buffer,"a",{value:8});}});}});// node_modules/core-js/internals/object-is-extensible.js
var require_object_is_extensible=__commonJS({"node_modules/core-js/internals/object-is-extensible.js"(exports,module2){"use strict";var fails=require_fails();var isObject=require_is_object();var classof=require_classof_raw();var ARRAY_BUFFER_NON_EXTENSIBLE=require_array_buffer_non_extensible();var $isExtensible=Object.isExtensible;var FAILS_ON_PRIMITIVES=fails(function(){$isExtensible(1);});module2.exports=FAILS_ON_PRIMITIVES||ARRAY_BUFFER_NON_EXTENSIBLE?function isExtensible(it){if(!isObject(it))return false;if(ARRAY_BUFFER_NON_EXTENSIBLE&&classof(it)==="ArrayBuffer")return false;return $isExtensible?$isExtensible(it):true;}:$isExtensible;}});// node_modules/core-js/internals/freezing.js
var require_freezing=__commonJS({"node_modules/core-js/internals/freezing.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=!fails(function(){return Object.isExtensible(Object.preventExtensions({}));});}});// node_modules/core-js/internals/internal-metadata.js
var require_internal_metadata=__commonJS({"node_modules/core-js/internals/internal-metadata.js"(exports,module2){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var hiddenKeys=require_hidden_keys();var isObject=require_is_object();var hasOwn=require_has_own_property();var defineProperty=require_object_define_property().f;var getOwnPropertyNamesModule=require_object_get_own_property_names();var getOwnPropertyNamesExternalModule=require_object_get_own_property_names_external();var isExtensible=require_object_is_extensible();var uid=require_uid();var FREEZING=require_freezing();var REQUIRED=false;var METADATA=uid("meta");var id=0;var setMetadata=function(it){defineProperty(it,METADATA,{value:{objectID:"O"+id++,// object ID
weakData:{}// weak collections IDs
}});};var fastKey=function(it,create){if(!isObject(it))return typeof it=="symbol"?it:(typeof it=="string"?"S":"P")+it;if(!hasOwn(it,METADATA)){if(!isExtensible(it))return"F";if(!create)return"E";setMetadata(it);}return it[METADATA].objectID;};var getWeakData=function(it,create){if(!hasOwn(it,METADATA)){if(!isExtensible(it))return true;if(!create)return false;setMetadata(it);}return it[METADATA].weakData;};var onFreeze=function(it){if(FREEZING&&REQUIRED&&isExtensible(it)&&!hasOwn(it,METADATA))setMetadata(it);return it;};var enable=function(){meta.enable=function(){};REQUIRED=true;var getOwnPropertyNames=getOwnPropertyNamesModule.f;var splice=uncurryThis([].splice);var test={};test[METADATA]=1;if(getOwnPropertyNames(test).length){getOwnPropertyNamesModule.f=function(it){var result=getOwnPropertyNames(it);for(var i=0,length=result.length;i<length;i++){if(result[i]===METADATA){splice(result,i,1);break;}}return result;};$({target:"Object",stat:true,forced:true},{getOwnPropertyNames:getOwnPropertyNamesExternalModule.f});}};var meta=module2.exports={enable,fastKey,getWeakData,onFreeze};hiddenKeys[METADATA]=true;}});// node_modules/core-js/internals/collection.js
var require_collection=__commonJS({"node_modules/core-js/internals/collection.js"(exports,module2){"use strict";var $=require_export();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var isForced=require_is_forced();var defineBuiltIn=require_define_built_in();var InternalMetadataModule=require_internal_metadata();var iterate=require_iterate();var anInstance=require_an_instance();var isCallable=require_is_callable();var isNullOrUndefined=require_is_null_or_undefined();var isObject=require_is_object();var fails=require_fails();var checkCorrectnessOfIteration=require_check_correctness_of_iteration();var setToStringTag=require_set_to_string_tag();var inheritIfRequired=require_inherit_if_required();module2.exports=function(CONSTRUCTOR_NAME,wrapper,common){var IS_MAP=CONSTRUCTOR_NAME.indexOf("Map")!==-1;var IS_WEAK=CONSTRUCTOR_NAME.indexOf("Weak")!==-1;var ADDER=IS_MAP?"set":"add";var NativeConstructor=globalThis2[CONSTRUCTOR_NAME];var NativePrototype=NativeConstructor&&NativeConstructor.prototype;var Constructor=NativeConstructor;var exported={};var fixMethod=function(KEY){var uncurriedNativeMethod=uncurryThis(NativePrototype[KEY]);defineBuiltIn(NativePrototype,KEY,KEY==="add"?function add(value){uncurriedNativeMethod(this,value===0?0:value);return this;}:KEY==="delete"?function(key){return IS_WEAK&&!isObject(key)?false:uncurriedNativeMethod(this,key===0?0:key);}:KEY==="get"?function get(key){return IS_WEAK&&!isObject(key)?void 0:uncurriedNativeMethod(this,key===0?0:key);}:KEY==="has"?function has(key){return IS_WEAK&&!isObject(key)?false:uncurriedNativeMethod(this,key===0?0:key);}:function set(key,value){uncurriedNativeMethod(this,key===0?0:key,value);return this;});};var REPLACE=isForced(CONSTRUCTOR_NAME,!isCallable(NativeConstructor)||!(IS_WEAK||NativePrototype.forEach&&!fails(function(){new NativeConstructor().entries().next();})));if(REPLACE){Constructor=common.getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER);InternalMetadataModule.enable();}else if(isForced(CONSTRUCTOR_NAME,true)){var instance=new Constructor();var HASNT_CHAINING=instance[ADDER](IS_WEAK?{}:-0,1)!==instance;var THROWS_ON_PRIMITIVES=fails(function(){instance.has(1);});var ACCEPT_ITERABLES=checkCorrectnessOfIteration(function(iterable){new NativeConstructor(iterable);});var BUGGY_ZERO=!IS_WEAK&&fails(function(){var $instance=new NativeConstructor();var index=5;while(index--)$instance[ADDER](index,index);return!$instance.has(-0);});if(!ACCEPT_ITERABLES){Constructor=wrapper(function(dummy2,iterable){anInstance(dummy2,NativePrototype);var that=inheritIfRequired(new NativeConstructor(),dummy2,Constructor);if(!isNullOrUndefined(iterable))iterate(iterable,that[ADDER],{that,AS_ENTRIES:IS_MAP});return that;});Constructor.prototype=NativePrototype;NativePrototype.constructor=Constructor;}if(THROWS_ON_PRIMITIVES||BUGGY_ZERO){fixMethod("delete");fixMethod("has");IS_MAP&&fixMethod("get");}if(BUGGY_ZERO||HASNT_CHAINING)fixMethod(ADDER);if(IS_WEAK&&NativePrototype.clear)delete NativePrototype.clear;}exported[CONSTRUCTOR_NAME]=Constructor;$({global:true,constructor:true,forced:Constructor!==NativeConstructor},exported);setToStringTag(Constructor,CONSTRUCTOR_NAME);if(!IS_WEAK)common.setStrong(Constructor,CONSTRUCTOR_NAME,IS_MAP);return Constructor;};}});// node_modules/core-js/internals/collection-strong.js
var require_collection_strong=__commonJS({"node_modules/core-js/internals/collection-strong.js"(exports,module2){"use strict";var create=require_object_create();var defineBuiltInAccessor=require_define_built_in_accessor();var defineBuiltIns=require_define_built_ins();var bind=require_function_bind_context();var anInstance=require_an_instance();var isNullOrUndefined=require_is_null_or_undefined();var iterate=require_iterate();var defineIterator=require_iterator_define();var createIterResultObject=require_create_iter_result_object();var setSpecies=require_set_species();var DESCRIPTORS=require_descriptors();var fastKey=require_internal_metadata().fastKey;var InternalStateModule=require_internal_state();var setInternalState=InternalStateModule.set;var internalStateGetterFor=InternalStateModule.getterFor;module2.exports={getConstructor:function(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var Constructor=wrapper(function(that,iterable){anInstance(that,Prototype);setInternalState(that,{type:CONSTRUCTOR_NAME,index:create(null),first:null,last:null,size:0});if(!DESCRIPTORS)that.size=0;if(!isNullOrUndefined(iterable))iterate(iterable,that[ADDER],{that,AS_ENTRIES:IS_MAP});});var Prototype=Constructor.prototype;var getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME);var define=function(that,key,value){var state=getInternalState(that);var entry=getEntry(that,key);var previous,index;if(entry){entry.value=value;}else{state.last=entry={index:index=fastKey(key,true),key,value,previous:previous=state.last,next:null,removed:false};if(!state.first)state.first=entry;if(previous)previous.next=entry;if(DESCRIPTORS)state.size++;else that.size++;if(index!=="F")state.index[index]=entry;}return that;};var getEntry=function(that,key){var state=getInternalState(that);var index=fastKey(key);var entry;if(index!=="F")return state.index[index];for(entry=state.first;entry;entry=entry.next){if(entry.key===key)return entry;}};defineBuiltIns(Prototype,{// `{ Map, Set }.prototype.clear()` methods
// https://tc39.es/ecma262/#sec-map.prototype.clear
// https://tc39.es/ecma262/#sec-set.prototype.clear
clear:function clear(){var that=this;var state=getInternalState(that);var entry=state.first;while(entry){entry.removed=true;if(entry.previous)entry.previous=entry.previous.next=null;entry=entry.next;}state.first=state.last=null;state.index=create(null);if(DESCRIPTORS)state.size=0;else that.size=0;},// `{ Map, Set }.prototype.delete(key)` methods
// https://tc39.es/ecma262/#sec-map.prototype.delete
// https://tc39.es/ecma262/#sec-set.prototype.delete
"delete":function(key){var that=this;var state=getInternalState(that);var entry=getEntry(that,key);if(entry){var next=entry.next;var prev=entry.previous;delete state.index[entry.index];entry.removed=true;if(prev)prev.next=next;if(next)next.previous=prev;if(state.first===entry)state.first=next;if(state.last===entry)state.last=prev;if(DESCRIPTORS)state.size--;else that.size--;}return!!entry;},// `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
// https://tc39.es/ecma262/#sec-map.prototype.foreach
// https://tc39.es/ecma262/#sec-set.prototype.foreach
forEach:function forEach(callbackfn){var state=getInternalState(this);var boundFunction=bind(callbackfn,arguments.length>1?arguments[1]:void 0);var entry;while(entry=entry?entry.next:state.first){boundFunction(entry.value,entry.key,this);while(entry&&entry.removed)entry=entry.previous;}},// `{ Map, Set}.prototype.has(key)` methods
// https://tc39.es/ecma262/#sec-map.prototype.has
// https://tc39.es/ecma262/#sec-set.prototype.has
has:function has(key){return!!getEntry(this,key);}});defineBuiltIns(Prototype,IS_MAP?{// `Map.prototype.get(key)` method
// https://tc39.es/ecma262/#sec-map.prototype.get
get:function get(key){var entry=getEntry(this,key);return entry&&entry.value;},// `Map.prototype.set(key, value)` method
// https://tc39.es/ecma262/#sec-map.prototype.set
set:function set(key,value){return define(this,key===0?0:key,value);}}:{// `Set.prototype.add(value)` method
// https://tc39.es/ecma262/#sec-set.prototype.add
add:function add(value){return define(this,value=value===0?0:value,value);}});if(DESCRIPTORS)defineBuiltInAccessor(Prototype,"size",{configurable:true,get:function(){return getInternalState(this).size;}});return Constructor;},setStrong:function(Constructor,CONSTRUCTOR_NAME,IS_MAP){var ITERATOR_NAME=CONSTRUCTOR_NAME+" Iterator";var getInternalCollectionState=internalStateGetterFor(CONSTRUCTOR_NAME);var getInternalIteratorState=internalStateGetterFor(ITERATOR_NAME);defineIterator(Constructor,CONSTRUCTOR_NAME,function(iterated,kind){setInternalState(this,{type:ITERATOR_NAME,target:iterated,state:getInternalCollectionState(iterated),kind,last:null});},function(){var state=getInternalIteratorState(this);var kind=state.kind;var entry=state.last;while(entry&&entry.removed)entry=entry.previous;if(!state.target||!(state.last=entry=entry?entry.next:state.state.first)){state.target=null;return createIterResultObject(void 0,true);}if(kind==="keys")return createIterResultObject(entry.key,false);if(kind==="values")return createIterResultObject(entry.value,false);return createIterResultObject([entry.key,entry.value],false);},IS_MAP?"entries":"values",!IS_MAP,true);setSpecies(CONSTRUCTOR_NAME);}};}});// node_modules/core-js/modules/es.map.constructor.js
var require_es_map_constructor=__commonJS({"node_modules/core-js/modules/es.map.constructor.js"(){"use strict";var collection=require_collection();var collectionStrong=require_collection_strong();collection("Map",function(init){return function Map2(){return init(this,arguments.length?arguments[0]:void 0);};},collectionStrong);}});// node_modules/core-js/modules/es.map.js
var require_es_map=__commonJS({"node_modules/core-js/modules/es.map.js"(){"use strict";require_es_map_constructor();}});// node_modules/core-js/internals/map-helpers.js
var require_map_helpers=__commonJS({"node_modules/core-js/internals/map-helpers.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var MapPrototype=Map.prototype;module2.exports={// eslint-disable-next-line es/no-map -- safe
Map,set:uncurryThis(MapPrototype.set),get:uncurryThis(MapPrototype.get),has:uncurryThis(MapPrototype.has),remove:uncurryThis(MapPrototype["delete"]),proto:MapPrototype};}});// node_modules/core-js/modules/es.map.group-by.js
var require_es_map_group_by=__commonJS({"node_modules/core-js/modules/es.map.group-by.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var requireObjectCoercible=require_require_object_coercible();var iterate=require_iterate();var MapHelpers=require_map_helpers();var IS_PURE=require_is_pure();var fails=require_fails();var Map2=MapHelpers.Map;var has=MapHelpers.has;var get=MapHelpers.get;var set=MapHelpers.set;var push=uncurryThis([].push);var DOES_NOT_WORK_WITH_PRIMITIVES=IS_PURE||fails(function(){return Map2.groupBy("ab",function(it){return it;}).get("a").length!==1;});$({target:"Map",stat:true,forced:IS_PURE||DOES_NOT_WORK_WITH_PRIMITIVES},{groupBy:function groupBy(items,callbackfn){requireObjectCoercible(items);aCallable(callbackfn);var map=new Map2();var k=0;iterate(items,function(value){var key=callbackfn(value,k++);if(!has(map,key))set(map,key,[value]);else push(get(map,key),value);});return map;}});}});// node_modules/core-js/internals/math-log1p.js
var require_math_log1p=__commonJS({"node_modules/core-js/internals/math-log1p.js"(exports,module2){"use strict";var log=Math.log;module2.exports=Math.log1p||function log1p(x){var n=+x;return n>-1e-8&&n<1e-8?n-n*n/2:log(1+n);};}});// node_modules/core-js/modules/es.math.acosh.js
var require_es_math_acosh=__commonJS({"node_modules/core-js/modules/es.math.acosh.js"(){"use strict";var $=require_export();var log1p=require_math_log1p();var $acosh=Math.acosh;var log=Math.log;var sqrt=Math.sqrt;var LN2=Math.LN2;var FORCED=!$acosh||Math.floor($acosh(Number.MAX_VALUE))!==710||$acosh(Infinity)!==Infinity;$({target:"Math",stat:true,forced:FORCED},{acosh:function acosh(x){var n=+x;return n<1?NaN:n>9490626562425156e-8?log(n)+LN2:log1p(n-1+sqrt(n-1)*sqrt(n+1));}});}});// node_modules/core-js/modules/es.math.asinh.js
var require_es_math_asinh=__commonJS({"node_modules/core-js/modules/es.math.asinh.js"(){"use strict";var $=require_export();var $asinh=Math.asinh;var log=Math.log;var sqrt=Math.sqrt;function asinh(x){var n=+x;return!isFinite(n)||n===0?n:n<0?-asinh(-n):log(n+sqrt(n*n+1));}var FORCED=!($asinh&&1/$asinh(0)>0);$({target:"Math",stat:true,forced:FORCED},{asinh});}});// node_modules/core-js/modules/es.math.atanh.js
var require_es_math_atanh=__commonJS({"node_modules/core-js/modules/es.math.atanh.js"(){"use strict";var $=require_export();var $atanh=Math.atanh;var log=Math.log;var FORCED=!($atanh&&1/$atanh(-0)<0);$({target:"Math",stat:true,forced:FORCED},{atanh:function atanh(x){var n=+x;return n===0?n:log((1+n)/(1-n))/2;}});}});// node_modules/core-js/modules/es.math.cbrt.js
var require_es_math_cbrt=__commonJS({"node_modules/core-js/modules/es.math.cbrt.js"(){"use strict";var $=require_export();var sign=require_math_sign();var abs=Math.abs;var pow=Math.pow;$({target:"Math",stat:true},{cbrt:function cbrt(x){var n=+x;return sign(n)*pow(abs(n),1/3);}});}});// node_modules/core-js/modules/es.math.clz32.js
var require_es_math_clz32=__commonJS({"node_modules/core-js/modules/es.math.clz32.js"(){"use strict";var $=require_export();var floor=Math.floor;var log=Math.log;var LOG2E=Math.LOG2E;$({target:"Math",stat:true},{clz32:function clz32(x){var n=x>>>0;return n?31-floor(log(n+0.5)*LOG2E):32;}});}});// node_modules/core-js/internals/math-expm1.js
var require_math_expm1=__commonJS({"node_modules/core-js/internals/math-expm1.js"(exports,module2){"use strict";var $expm1=Math.expm1;var exp=Math.exp;module2.exports=!$expm1||$expm1(10)>22025.465794806718||$expm1(10)<22025.465794806718||$expm1(-2e-17)!==-2e-17?function expm1(x){var n=+x;return n===0?n:n>-1e-6&&n<1e-6?n+n*n/2:exp(n)-1;}:$expm1;}});// node_modules/core-js/modules/es.math.cosh.js
var require_es_math_cosh=__commonJS({"node_modules/core-js/modules/es.math.cosh.js"(){"use strict";var $=require_export();var expm1=require_math_expm1();var $cosh=Math.cosh;var abs=Math.abs;var E=Math.E;var FORCED=!$cosh||$cosh(710)===Infinity;$({target:"Math",stat:true,forced:FORCED},{cosh:function cosh(x){var t=expm1(abs(x)-1)+1;return(t+1/(t*E*E))*(E/2);}});}});// node_modules/core-js/modules/es.math.expm1.js
var require_es_math_expm1=__commonJS({"node_modules/core-js/modules/es.math.expm1.js"(){"use strict";var $=require_export();var expm1=require_math_expm1();$({target:"Math",stat:true,forced:expm1!==Math.expm1},{expm1});}});// node_modules/core-js/modules/es.math.fround.js
var require_es_math_fround=__commonJS({"node_modules/core-js/modules/es.math.fround.js"(){"use strict";var $=require_export();var fround=require_math_fround();$({target:"Math",stat:true},{fround});}});// node_modules/core-js/modules/es.math.f16round.js
var require_es_math_f16round=__commonJS({"node_modules/core-js/modules/es.math.f16round.js"(){"use strict";var $=require_export();var floatRound=require_math_float_round();var FLOAT16_EPSILON=9765625e-10;var FLOAT16_MAX_VALUE=65504;var FLOAT16_MIN_VALUE=6103515625e-14;$({target:"Math",stat:true},{f16round:function f16round(x){return floatRound(x,FLOAT16_EPSILON,FLOAT16_MAX_VALUE,FLOAT16_MIN_VALUE);}});}});// node_modules/core-js/modules/es.math.hypot.js
var require_es_math_hypot=__commonJS({"node_modules/core-js/modules/es.math.hypot.js"(){"use strict";var $=require_export();var $hypot=Math.hypot;var abs=Math.abs;var sqrt=Math.sqrt;var FORCED=!!$hypot&&$hypot(Infinity,NaN)!==Infinity;$({target:"Math",stat:true,arity:2,forced:FORCED},{// eslint-disable-next-line no-unused-vars -- required for `.length`
hypot:function hypot(value1,value2){var sum=0;var i=0;var aLen=arguments.length;var larg=0;var arg,div;while(i<aLen){arg=abs(arguments[i++]);if(larg<arg){div=larg/arg;sum=sum*div*div+1;larg=arg;}else if(arg>0){div=arg/larg;sum+=div*div;}else sum+=arg;}return larg===Infinity?Infinity:larg*sqrt(sum);}});}});// node_modules/core-js/modules/es.math.imul.js
var require_es_math_imul=__commonJS({"node_modules/core-js/modules/es.math.imul.js"(){"use strict";var $=require_export();var fails=require_fails();var $imul=Math.imul;var FORCED=fails(function(){return $imul(4294967295,5)!==-5||$imul.length!==2;});$({target:"Math",stat:true,forced:FORCED},{imul:function imul(x,y){var UINT16=65535;var xn=+x;var yn=+y;var xl=UINT16&xn;var yl=UINT16&yn;return 0|xl*yl+((UINT16&xn>>>16)*yl+xl*(UINT16&yn>>>16)<<16>>>0);}});}});// node_modules/core-js/internals/math-log10.js
var require_math_log10=__commonJS({"node_modules/core-js/internals/math-log10.js"(exports,module2){"use strict";var log=Math.log;var LOG10E=Math.LOG10E;module2.exports=Math.log10||function log10(x){return log(x)*LOG10E;};}});// node_modules/core-js/modules/es.math.log10.js
var require_es_math_log10=__commonJS({"node_modules/core-js/modules/es.math.log10.js"(){"use strict";var $=require_export();var log10=require_math_log10();$({target:"Math",stat:true},{log10});}});// node_modules/core-js/modules/es.math.log1p.js
var require_es_math_log1p=__commonJS({"node_modules/core-js/modules/es.math.log1p.js"(){"use strict";var $=require_export();var log1p=require_math_log1p();$({target:"Math",stat:true},{log1p});}});// node_modules/core-js/modules/es.math.log2.js
var require_es_math_log2=__commonJS({"node_modules/core-js/modules/es.math.log2.js"(){"use strict";var $=require_export();var log2=require_math_log2();$({target:"Math",stat:true},{log2});}});// node_modules/core-js/modules/es.math.sign.js
var require_es_math_sign=__commonJS({"node_modules/core-js/modules/es.math.sign.js"(){"use strict";var $=require_export();var sign=require_math_sign();$({target:"Math",stat:true},{sign});}});// node_modules/core-js/modules/es.math.sinh.js
var require_es_math_sinh=__commonJS({"node_modules/core-js/modules/es.math.sinh.js"(){"use strict";var $=require_export();var fails=require_fails();var expm1=require_math_expm1();var abs=Math.abs;var exp=Math.exp;var E=Math.E;var FORCED=fails(function(){return Math.sinh(-2e-17)!==-2e-17;});$({target:"Math",stat:true,forced:FORCED},{sinh:function sinh(x){var n=+x;return abs(n)<1?(expm1(n)-expm1(-n))/2:(exp(n-1)-exp(-n-1))*(E/2);}});}});// node_modules/core-js/modules/es.math.sum-precise.js
var require_es_math_sum_precise=__commonJS({"node_modules/core-js/modules/es.math.sum-precise.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var iterate=require_iterate();var $RangeError=RangeError;var $TypeError=TypeError;var $Infinity=Infinity;var $NaN=NaN;var abs=Math.abs;var pow=Math.pow;var push=uncurryThis([].push);var POW_2_1023=pow(2,1023);var MAX_SAFE_INTEGER=pow(2,53)-1;var MAX_DOUBLE=Number.MAX_VALUE;var MAX_ULP=pow(2,971);var NOT_A_NUMBER={};var MINUS_INFINITY={};var PLUS_INFINITY={};var MINUS_ZERO={};var FINITE={};var twosum=function(x,y){var hi=x+y;var lo=y-(hi-x);return{hi,lo};};$({target:"Math",stat:true},{// eslint-disable-next-line max-statements -- ok
sumPrecise:function sumPrecise(items){var numbers=[];var count=0;var state=MINUS_ZERO;iterate(items,function(n2){if(++count>=MAX_SAFE_INTEGER)throw new $RangeError("Maximum allowed index exceeded");if(typeof n2!="number")throw new $TypeError("Value is not a number");if(state!==NOT_A_NUMBER){if(n2!==n2)state=NOT_A_NUMBER;else if(n2===$Infinity)state=state===MINUS_INFINITY?NOT_A_NUMBER:PLUS_INFINITY;else if(n2===-$Infinity)state=state===PLUS_INFINITY?NOT_A_NUMBER:MINUS_INFINITY;else if((n2!==0||1/n2===$Infinity)&&(state===MINUS_ZERO||state===FINITE)){state=FINITE;push(numbers,n2);}}});switch(state){case NOT_A_NUMBER:return $NaN;case MINUS_INFINITY:return-$Infinity;case PLUS_INFINITY:return $Infinity;case MINUS_ZERO:return-0;}var partials=[];var overflow=0;var x,y,sum,hi,lo,tmp;for(var i=0;i<numbers.length;i++){x=numbers[i];var actuallyUsedPartials=0;for(var j=0;j<partials.length;j++){y=partials[j];if(abs(x)<abs(y)){tmp=x;x=y;y=tmp;}sum=twosum(x,y);hi=sum.hi;lo=sum.lo;if(abs(hi)===$Infinity){var sign=hi===$Infinity?1:-1;overflow+=sign;x=x-sign*POW_2_1023-sign*POW_2_1023;if(abs(x)<abs(y)){tmp=x;x=y;y=tmp;}sum=twosum(x,y);hi=sum.hi;lo=sum.lo;}if(lo!==0)partials[actuallyUsedPartials++]=lo;x=hi;}partials.length=actuallyUsedPartials;if(x!==0)push(partials,x);}var n=partials.length-1;hi=0;lo=0;if(overflow!==0){var next=n>=0?partials[n]:0;n--;if(abs(overflow)>1||overflow>0&&next>0||overflow<0&&next<0){return overflow>0?$Infinity:-$Infinity;}sum=twosum(overflow*POW_2_1023,next/2);hi=sum.hi;lo=sum.lo;lo*=2;if(abs(2*hi)===$Infinity){if(hi>0){return hi===POW_2_1023&&lo===-(MAX_ULP/2)&&n>=0&&partials[n]<0?MAX_DOUBLE:$Infinity;}return hi===-POW_2_1023&&lo===MAX_ULP/2&&n>=0&&partials[n]>0?-MAX_DOUBLE:-$Infinity;}if(lo!==0){partials[++n]=lo;lo=0;}hi*=2;}while(n>=0){sum=twosum(hi,partials[n--]);hi=sum.hi;lo=sum.lo;if(lo!==0)break;}if(n>=0&&(lo<0&&partials[n]<0||lo>0&&partials[n]>0)){y=lo*2;x=hi+y;if(y===x-hi)hi=x;}return hi;}});}});// node_modules/core-js/modules/es.math.tanh.js
var require_es_math_tanh=__commonJS({"node_modules/core-js/modules/es.math.tanh.js"(){"use strict";var $=require_export();var expm1=require_math_expm1();var exp=Math.exp;$({target:"Math",stat:true},{tanh:function tanh(x){var n=+x;var a=expm1(n);var b=expm1(-n);return a===Infinity?1:b===Infinity?-1:(a-b)/(exp(n)+exp(-n));}});}});// node_modules/core-js/modules/es.math.to-string-tag.js
var require_es_math_to_string_tag=__commonJS({"node_modules/core-js/modules/es.math.to-string-tag.js"(){"use strict";var setToStringTag=require_set_to_string_tag();setToStringTag(Math,"Math",true);}});// node_modules/core-js/modules/es.math.trunc.js
var require_es_math_trunc=__commonJS({"node_modules/core-js/modules/es.math.trunc.js"(){"use strict";var $=require_export();var trunc=require_math_trunc();$({target:"Math",stat:true},{trunc});}});// node_modules/core-js/internals/this-number-value.js
var require_this_number_value=__commonJS({"node_modules/core-js/internals/this-number-value.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();module2.exports=uncurryThis(1.1.valueOf);}});// node_modules/core-js/internals/whitespaces.js
var require_whitespaces=__commonJS({"node_modules/core-js/internals/whitespaces.js"(exports,module2){"use strict";module2.exports="	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";}});// node_modules/core-js/internals/string-trim.js
var require_string_trim=__commonJS({"node_modules/core-js/internals/string-trim.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toString=require_to_string();var whitespaces=require_whitespaces();var replace=uncurryThis("".replace);var ltrim=RegExp("^["+whitespaces+"]+");var rtrim=RegExp("(^|[^"+whitespaces+"])["+whitespaces+"]+$");var createMethod=function(TYPE){return function($this){var string=toString(requireObjectCoercible($this));if(TYPE&1)string=replace(string,ltrim,"");if(TYPE&2)string=replace(string,rtrim,"$1");return string;};};module2.exports={// `String.prototype.{ trimLeft, trimStart }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
start:createMethod(1),// `String.prototype.{ trimRight, trimEnd }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimend
end:createMethod(2),// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
trim:createMethod(3)};}});// node_modules/core-js/modules/es.number.constructor.js
var require_es_number_constructor=__commonJS({"node_modules/core-js/modules/es.number.constructor.js"(){"use strict";var $=require_export();var IS_PURE=require_is_pure();var DESCRIPTORS=require_descriptors();var globalThis2=require_global_this();var path=require_path();var uncurryThis=require_function_uncurry_this();var isForced=require_is_forced();var hasOwn=require_has_own_property();var inheritIfRequired=require_inherit_if_required();var isPrototypeOf=require_object_is_prototype_of();var isSymbol=require_is_symbol();var toPrimitive=require_to_primitive();var fails=require_fails();var getOwnPropertyNames=require_object_get_own_property_names().f;var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var defineProperty=require_object_define_property().f;var thisNumberValue=require_this_number_value();var trim=require_string_trim().trim;var NUMBER="Number";var NativeNumber=globalThis2[NUMBER];var PureNumberNamespace=path[NUMBER];var NumberPrototype=NativeNumber.prototype;var TypeError2=globalThis2.TypeError;var stringSlice=uncurryThis("".slice);var charCodeAt=uncurryThis("".charCodeAt);var toNumeric=function(value){var primValue=toPrimitive(value,"number");return typeof primValue=="bigint"?primValue:toNumber(primValue);};var toNumber=function(argument){var it=toPrimitive(argument,"number");var first,third,radix,maxCode,digits,length,index,code;if(isSymbol(it))throw new TypeError2("Cannot convert a Symbol value to a number");if(typeof it=="string"&&it.length>2){it=trim(it);first=charCodeAt(it,0);if(first===43||first===45){third=charCodeAt(it,2);if(third===88||third===120)return NaN;}else if(first===48){switch(charCodeAt(it,1)){// fast equal of /^0b[01]+$/i
case 66:case 98:radix=2;maxCode=49;break;// fast equal of /^0o[0-7]+$/i
case 79:case 111:radix=8;maxCode=55;break;default:return+it;}digits=stringSlice(it,2);length=digits.length;for(index=0;index<length;index++){code=charCodeAt(digits,index);if(code<48||code>maxCode)return NaN;}return parseInt(digits,radix);}}return+it;};var FORCED=isForced(NUMBER,!NativeNumber(" 0o1")||!NativeNumber("0b1")||NativeNumber("+0x1"));var calledWithNew=function(dummy2){return isPrototypeOf(NumberPrototype,dummy2)&&fails(function(){thisNumberValue(dummy2);});};var NumberWrapper=function Number2(value){var n=arguments.length<1?0:NativeNumber(toNumeric(value));return calledWithNew(this)?inheritIfRequired(Object(n),this,NumberWrapper):n;};NumberWrapper.prototype=NumberPrototype;if(FORCED&&!IS_PURE)NumberPrototype.constructor=NumberWrapper;$({global:true,constructor:true,wrap:true,forced:FORCED},{Number:NumberWrapper});var copyConstructorProperties=function(target,source){for(var keys=DESCRIPTORS?getOwnPropertyNames(source):// ES3:
"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),j=0,key;keys.length>j;j++){if(hasOwn(source,key=keys[j])&&!hasOwn(target,key)){defineProperty(target,key,getOwnPropertyDescriptor(source,key));}}};if(IS_PURE&&PureNumberNamespace)copyConstructorProperties(path[NUMBER],PureNumberNamespace);if(FORCED||IS_PURE)copyConstructorProperties(path[NUMBER],NativeNumber);}});// node_modules/core-js/modules/es.number.epsilon.js
var require_es_number_epsilon=__commonJS({"node_modules/core-js/modules/es.number.epsilon.js"(){"use strict";var $=require_export();$({target:"Number",stat:true,nonConfigurable:true,nonWritable:true},{EPSILON:Math.pow(2,-52)});}});// node_modules/core-js/internals/number-is-finite.js
var require_number_is_finite=__commonJS({"node_modules/core-js/internals/number-is-finite.js"(exports,module2){"use strict";var globalThis2=require_global_this();var globalIsFinite=globalThis2.isFinite;module2.exports=Number.isFinite||function isFinite2(it){return typeof it=="number"&&globalIsFinite(it);};}});// node_modules/core-js/modules/es.number.is-finite.js
var require_es_number_is_finite=__commonJS({"node_modules/core-js/modules/es.number.is-finite.js"(){"use strict";var $=require_export();var numberIsFinite=require_number_is_finite();$({target:"Number",stat:true},{isFinite:numberIsFinite});}});// node_modules/core-js/internals/is-integral-number.js
var require_is_integral_number=__commonJS({"node_modules/core-js/internals/is-integral-number.js"(exports,module2){"use strict";var isObject=require_is_object();var floor=Math.floor;module2.exports=Number.isInteger||function isInteger(it){return!isObject(it)&&isFinite(it)&&floor(it)===it;};}});// node_modules/core-js/modules/es.number.is-integer.js
var require_es_number_is_integer=__commonJS({"node_modules/core-js/modules/es.number.is-integer.js"(){"use strict";var $=require_export();var isIntegralNumber=require_is_integral_number();$({target:"Number",stat:true},{isInteger:isIntegralNumber});}});// node_modules/core-js/modules/es.number.is-nan.js
var require_es_number_is_nan=__commonJS({"node_modules/core-js/modules/es.number.is-nan.js"(){"use strict";var $=require_export();$({target:"Number",stat:true},{isNaN:function isNaN2(number){return number!==number;}});}});// node_modules/core-js/modules/es.number.is-safe-integer.js
var require_es_number_is_safe_integer=__commonJS({"node_modules/core-js/modules/es.number.is-safe-integer.js"(){"use strict";var $=require_export();var isIntegralNumber=require_is_integral_number();var abs=Math.abs;$({target:"Number",stat:true},{isSafeInteger:function isSafeInteger(number){return isIntegralNumber(number)&&abs(number)<=9007199254740991;}});}});// node_modules/core-js/modules/es.number.max-safe-integer.js
var require_es_number_max_safe_integer=__commonJS({"node_modules/core-js/modules/es.number.max-safe-integer.js"(){"use strict";var $=require_export();$({target:"Number",stat:true,nonConfigurable:true,nonWritable:true},{MAX_SAFE_INTEGER:9007199254740991});}});// node_modules/core-js/modules/es.number.min-safe-integer.js
var require_es_number_min_safe_integer=__commonJS({"node_modules/core-js/modules/es.number.min-safe-integer.js"(){"use strict";var $=require_export();$({target:"Number",stat:true,nonConfigurable:true,nonWritable:true},{MIN_SAFE_INTEGER:-9007199254740991});}});// node_modules/core-js/internals/number-parse-float.js
var require_number_parse_float=__commonJS({"node_modules/core-js/internals/number-parse-float.js"(exports,module2){"use strict";var globalThis2=require_global_this();var fails=require_fails();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var trim=require_string_trim().trim;var whitespaces=require_whitespaces();var charAt=uncurryThis("".charAt);var $parseFloat=globalThis2.parseFloat;var Symbol2=globalThis2.Symbol;var ITERATOR=Symbol2&&Symbol2.iterator;var FORCED=1/$parseFloat(whitespaces+"-0")!==-Infinity||ITERATOR&&!fails(function(){$parseFloat(Object(ITERATOR));});module2.exports=FORCED?function parseFloat2(string){var trimmedString=trim(toString(string));var result=$parseFloat(trimmedString);return result===0&&charAt(trimmedString,0)==="-"?-0:result;}:$parseFloat;}});// node_modules/core-js/modules/es.number.parse-float.js
var require_es_number_parse_float=__commonJS({"node_modules/core-js/modules/es.number.parse-float.js"(){"use strict";var $=require_export();var parseFloat2=require_number_parse_float();$({target:"Number",stat:true,forced:Number.parseFloat!==parseFloat2},{parseFloat:parseFloat2});}});// node_modules/core-js/internals/number-parse-int.js
var require_number_parse_int=__commonJS({"node_modules/core-js/internals/number-parse-int.js"(exports,module2){"use strict";var globalThis2=require_global_this();var fails=require_fails();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var trim=require_string_trim().trim;var whitespaces=require_whitespaces();var $parseInt=globalThis2.parseInt;var Symbol2=globalThis2.Symbol;var ITERATOR=Symbol2&&Symbol2.iterator;var hex=/^[+-]?0x/i;var exec=uncurryThis(hex.exec);var FORCED=$parseInt(whitespaces+"08")!==8||$parseInt(whitespaces+"0x16")!==22||ITERATOR&&!fails(function(){$parseInt(Object(ITERATOR));});module2.exports=FORCED?function parseInt2(string,radix){var S=trim(toString(string));return $parseInt(S,radix>>>0||(exec(hex,S)?16:10));}:$parseInt;}});// node_modules/core-js/modules/es.number.parse-int.js
var require_es_number_parse_int=__commonJS({"node_modules/core-js/modules/es.number.parse-int.js"(){"use strict";var $=require_export();var parseInt2=require_number_parse_int();$({target:"Number",stat:true,forced:Number.parseInt!==parseInt2},{parseInt:parseInt2});}});// node_modules/core-js/modules/es.number.to-exponential.js
var require_es_number_to_exponential=__commonJS({"node_modules/core-js/modules/es.number.to-exponential.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toIntegerOrInfinity=require_to_integer_or_infinity();var thisNumberValue=require_this_number_value();var $repeat=require_string_repeat();var log10=require_math_log10();var fails=require_fails();var $RangeError=RangeError;var $String=String;var $isFinite=isFinite;var abs=Math.abs;var floor=Math.floor;var pow=Math.pow;var round=Math.round;var nativeToExponential=uncurryThis(1.1.toExponential);var repeat=uncurryThis($repeat);var stringSlice=uncurryThis("".slice);var ROUNDS_PROPERLY=nativeToExponential(-69e-12,4)==="-6.9000e-11"&&nativeToExponential(1.255,2)==="1.25e+0"&&nativeToExponential(12345,3)==="1.235e+4"&&nativeToExponential(25,0)==="3e+1";var throwsOnInfinityFraction=function(){return fails(function(){nativeToExponential(1,Infinity);})&&fails(function(){nativeToExponential(1,-Infinity);});};var properNonFiniteThisCheck=function(){return!fails(function(){nativeToExponential(Infinity,Infinity);nativeToExponential(NaN,Infinity);});};var FORCED=!ROUNDS_PROPERLY||!throwsOnInfinityFraction()||!properNonFiniteThisCheck();$({target:"Number",proto:true,forced:FORCED},{toExponential:function toExponential(fractionDigits){var x=thisNumberValue(this);if(fractionDigits===void 0)return nativeToExponential(x);var f=toIntegerOrInfinity(fractionDigits);if(!$isFinite(x))return String(x);if(f<0||f>20)throw new $RangeError("Incorrect fraction digits");if(ROUNDS_PROPERLY)return nativeToExponential(x,f);var s="";var m,e,c,d;if(x<0){s="-";x=-x;}if(x===0){e=0;m=repeat("0",f+1);}else{var l=log10(x);e=floor(l);var w=pow(10,e-f);var n=round(x/w);if(2*x>=(2*n+1)*w){n+=1;}if(n>=pow(10,f+1)){n/=10;e+=1;}m=$String(n);}if(f!==0){m=stringSlice(m,0,1)+"."+stringSlice(m,1);}if(e===0){c="+";d="0";}else{c=e>0?"+":"-";d=$String(abs(e));}m+="e"+c+d;return s+m;}});}});// node_modules/core-js/modules/es.number.to-fixed.js
var require_es_number_to_fixed=__commonJS({"node_modules/core-js/modules/es.number.to-fixed.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toIntegerOrInfinity=require_to_integer_or_infinity();var thisNumberValue=require_this_number_value();var $repeat=require_string_repeat();var fails=require_fails();var $RangeError=RangeError;var $String=String;var floor=Math.floor;var repeat=uncurryThis($repeat);var stringSlice=uncurryThis("".slice);var nativeToFixed=uncurryThis(1.1.toFixed);var pow=function(x,n,acc){return n===0?acc:n%2===1?pow(x,n-1,acc*x):pow(x*x,n/2,acc);};var log=function(x){var n=0;var x2=x;while(x2>=4096){n+=12;x2/=4096;}while(x2>=2){n+=1;x2/=2;}return n;};var multiply=function(data,n,c){var index=-1;var c2=c;while(++index<6){c2+=n*data[index];data[index]=c2%1e7;c2=floor(c2/1e7);}};var divide=function(data,n){var index=6;var c=0;while(--index>=0){c+=data[index];data[index]=floor(c/n);c=c%n*1e7;}};var dataToString=function(data){var index=6;var s="";while(--index>=0){if(s!==""||index===0||data[index]!==0){var t=$String(data[index]);s=s===""?t:s+repeat("0",7-t.length)+t;}}return s;};var FORCED=fails(function(){return nativeToFixed(8e-5,3)!=="0.000"||nativeToFixed(0.9,0)!=="1"||nativeToFixed(1.255,2)!=="1.25"||nativeToFixed(1000000000000000100,0)!=="1000000000000000128";})||!fails(function(){nativeToFixed({});});$({target:"Number",proto:true,forced:FORCED},{toFixed:function toFixed(fractionDigits){var number=thisNumberValue(this);var fractDigits=toIntegerOrInfinity(fractionDigits);var data=[0,0,0,0,0,0];var sign="";var result="0";var e,z,j,k;if(fractDigits<0||fractDigits>20)throw new $RangeError("Incorrect fraction digits");if(number!==number)return"NaN";if(number<=-1e21||number>=1e21)return $String(number);if(number<0){sign="-";number=-number;}if(number>1e-21){e=log(number*pow(2,69,1))-69;z=e<0?number*pow(2,-e,1):number/pow(2,e,1);z*=4503599627370496;e=52-e;if(e>0){multiply(data,0,z);j=fractDigits;while(j>=7){multiply(data,1e7,0);j-=7;}multiply(data,pow(10,j,1),0);j=e-1;while(j>=23){divide(data,1<<23);j-=23;}divide(data,1<<j);multiply(data,1,1);divide(data,2);result=dataToString(data);}else{multiply(data,0,z);multiply(data,1<<-e,0);result=dataToString(data)+repeat("0",fractDigits);}}if(fractDigits>0){k=result.length;result=sign+(k<=fractDigits?"0."+repeat("0",fractDigits-k)+result:stringSlice(result,0,k-fractDigits)+"."+stringSlice(result,k-fractDigits));}else{result=sign+result;}return result;}});}});// node_modules/core-js/modules/es.number.to-precision.js
var require_es_number_to_precision=__commonJS({"node_modules/core-js/modules/es.number.to-precision.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var fails=require_fails();var thisNumberValue=require_this_number_value();var nativeToPrecision=uncurryThis(1.1.toPrecision);var FORCED=fails(function(){return nativeToPrecision(1,void 0)!=="1";})||!fails(function(){nativeToPrecision({});});$({target:"Number",proto:true,forced:FORCED},{toPrecision:function toPrecision(precision){return precision===void 0?nativeToPrecision(thisNumberValue(this)):nativeToPrecision(thisNumberValue(this),precision);}});}});// node_modules/core-js/internals/object-assign.js
var require_object_assign=__commonJS({"node_modules/core-js/internals/object-assign.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var uncurryThis=require_function_uncurry_this();var call=require_function_call();var fails=require_fails();var objectKeys=require_object_keys();var getOwnPropertySymbolsModule=require_object_get_own_property_symbols();var propertyIsEnumerableModule=require_object_property_is_enumerable();var toObject=require_to_object();var IndexedObject=require_indexed_object();var $assign=Object.assign;var defineProperty=Object.defineProperty;var concat=uncurryThis([].concat);module2.exports=!$assign||fails(function(){if(DESCRIPTORS&&$assign({b:1},$assign(defineProperty({},"a",{enumerable:true,get:function(){defineProperty(this,"b",{value:3,enumerable:false});}}),{b:2})).b!==1)return true;var A={};var B={};var symbol=Symbol("assign detection");var alphabet="abcdefghijklmnopqrst";A[symbol]=7;alphabet.split("").forEach(function(chr){B[chr]=chr;});return $assign({},A)[symbol]!==7||objectKeys($assign({},B)).join("")!==alphabet;})?function assign(target,source){var T=toObject(target);var argumentsLength=arguments.length;var index=1;var getOwnPropertySymbols=getOwnPropertySymbolsModule.f;var propertyIsEnumerable=propertyIsEnumerableModule.f;while(argumentsLength>index){var S=IndexedObject(arguments[index++]);var keys=getOwnPropertySymbols?concat(objectKeys(S),getOwnPropertySymbols(S)):objectKeys(S);var length=keys.length;var j=0;var key;while(length>j){key=keys[j++];if(!DESCRIPTORS||call(propertyIsEnumerable,S,key))T[key]=S[key];}}return T;}:$assign;}});// node_modules/core-js/modules/es.object.assign.js
var require_es_object_assign=__commonJS({"node_modules/core-js/modules/es.object.assign.js"(){"use strict";var $=require_export();var assign=require_object_assign();$({target:"Object",stat:true,arity:2,forced:Object.assign!==assign},{assign});}});// node_modules/core-js/modules/es.object.create.js
var require_es_object_create=__commonJS({"node_modules/core-js/modules/es.object.create.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var create=require_object_create();$({target:"Object",stat:true,sham:!DESCRIPTORS},{create});}});// node_modules/core-js/internals/object-prototype-accessors-forced.js
var require_object_prototype_accessors_forced=__commonJS({"node_modules/core-js/internals/object-prototype-accessors-forced.js"(exports,module2){"use strict";var IS_PURE=require_is_pure();var globalThis2=require_global_this();var fails=require_fails();var WEBKIT=require_environment_webkit_version();module2.exports=IS_PURE||!fails(function(){if(WEBKIT&&WEBKIT<535)return;var key=Math.random();__defineSetter__.call(null,key,function(){});delete globalThis2[key];});}});// node_modules/core-js/modules/es.object.define-getter.js
var require_es_object_define_getter=__commonJS({"node_modules/core-js/modules/es.object.define-getter.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var FORCED=require_object_prototype_accessors_forced();var aCallable=require_a_callable();var toObject=require_to_object();var definePropertyModule=require_object_define_property();if(DESCRIPTORS){$({target:"Object",proto:true,forced:FORCED},{__defineGetter__:function __defineGetter__(P,getter){definePropertyModule.f(toObject(this),P,{get:aCallable(getter),enumerable:true,configurable:true});}});}}});// node_modules/core-js/modules/es.object.define-properties.js
var require_es_object_define_properties=__commonJS({"node_modules/core-js/modules/es.object.define-properties.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var defineProperties=require_object_define_properties().f;$({target:"Object",stat:true,forced:Object.defineProperties!==defineProperties,sham:!DESCRIPTORS},{defineProperties});}});// node_modules/core-js/modules/es.object.define-property.js
var require_es_object_define_property=__commonJS({"node_modules/core-js/modules/es.object.define-property.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var defineProperty=require_object_define_property().f;$({target:"Object",stat:true,forced:Object.defineProperty!==defineProperty,sham:!DESCRIPTORS},{defineProperty});}});// node_modules/core-js/modules/es.object.define-setter.js
var require_es_object_define_setter=__commonJS({"node_modules/core-js/modules/es.object.define-setter.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var FORCED=require_object_prototype_accessors_forced();var aCallable=require_a_callable();var toObject=require_to_object();var definePropertyModule=require_object_define_property();if(DESCRIPTORS){$({target:"Object",proto:true,forced:FORCED},{__defineSetter__:function __defineSetter__2(P,setter){definePropertyModule.f(toObject(this),P,{set:aCallable(setter),enumerable:true,configurable:true});}});}}});// node_modules/core-js/internals/object-to-array.js
var require_object_to_array=__commonJS({"node_modules/core-js/internals/object-to-array.js"(exports,module2){"use strict";var DESCRIPTORS=require_descriptors();var fails=require_fails();var uncurryThis=require_function_uncurry_this();var objectGetPrototypeOf=require_object_get_prototype_of();var objectKeys=require_object_keys();var toIndexedObject=require_to_indexed_object();var $propertyIsEnumerable=require_object_property_is_enumerable().f;var propertyIsEnumerable=uncurryThis($propertyIsEnumerable);var push=uncurryThis([].push);var IE_BUG=DESCRIPTORS&&fails(function(){var O=/* @__PURE__ */Object.create(null);O[2]=2;return!propertyIsEnumerable(O,2);});var createMethod=function(TO_ENTRIES){return function(it){var O=toIndexedObject(it);var keys=objectKeys(O);var IE_WORKAROUND=IE_BUG&&objectGetPrototypeOf(O)===null;var length=keys.length;var i=0;var result=[];var key;while(length>i){key=keys[i++];if(!DESCRIPTORS||(IE_WORKAROUND?key in O:propertyIsEnumerable(O,key))){push(result,TO_ENTRIES?[key,O[key]]:O[key]);}}return result;};};module2.exports={// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
entries:createMethod(true),// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
values:createMethod(false)};}});// node_modules/core-js/modules/es.object.entries.js
var require_es_object_entries=__commonJS({"node_modules/core-js/modules/es.object.entries.js"(){"use strict";var $=require_export();var $entries=require_object_to_array().entries;$({target:"Object",stat:true},{entries:function entries(O){return $entries(O);}});}});// node_modules/core-js/modules/es.object.freeze.js
var require_es_object_freeze=__commonJS({"node_modules/core-js/modules/es.object.freeze.js"(){"use strict";var $=require_export();var FREEZING=require_freezing();var fails=require_fails();var isObject=require_is_object();var onFreeze=require_internal_metadata().onFreeze;var $freeze=Object.freeze;var FAILS_ON_PRIMITIVES=fails(function(){$freeze(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES,sham:!FREEZING},{freeze:function freeze(it){return $freeze&&isObject(it)?$freeze(onFreeze(it)):it;}});}});// node_modules/core-js/modules/es.object.from-entries.js
var require_es_object_from_entries=__commonJS({"node_modules/core-js/modules/es.object.from-entries.js"(){"use strict";var $=require_export();var iterate=require_iterate();var createProperty=require_create_property();$({target:"Object",stat:true},{fromEntries:function fromEntries(iterable){var obj={};iterate(iterable,function(k,v){createProperty(obj,k,v);},{AS_ENTRIES:true});return obj;}});}});// node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var require_es_object_get_own_property_descriptor=__commonJS({"node_modules/core-js/modules/es.object.get-own-property-descriptor.js"(){"use strict";var $=require_export();var fails=require_fails();var toIndexedObject=require_to_indexed_object();var nativeGetOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var DESCRIPTORS=require_descriptors();var FORCED=!DESCRIPTORS||fails(function(){nativeGetOwnPropertyDescriptor(1);});$({target:"Object",stat:true,forced:FORCED,sham:!DESCRIPTORS},{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(it,key){return nativeGetOwnPropertyDescriptor(toIndexedObject(it),key);}});}});// node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var require_es_object_get_own_property_descriptors=__commonJS({"node_modules/core-js/modules/es.object.get-own-property-descriptors.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var ownKeys=require_own_keys();var toIndexedObject=require_to_indexed_object();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var createProperty=require_create_property();$({target:"Object",stat:true,sham:!DESCRIPTORS},{getOwnPropertyDescriptors:function getOwnPropertyDescriptors(object){var O=toIndexedObject(object);var getOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;var keys=ownKeys(O);var result={};var index=0;var key,descriptor;while(keys.length>index){descriptor=getOwnPropertyDescriptor(O,key=keys[index++]);if(descriptor!==void 0)createProperty(result,key,descriptor);}return result;}});}});// node_modules/core-js/modules/es.object.get-own-property-names.js
var require_es_object_get_own_property_names=__commonJS({"node_modules/core-js/modules/es.object.get-own-property-names.js"(){"use strict";var $=require_export();var fails=require_fails();var getOwnPropertyNames=require_object_get_own_property_names_external().f;var FAILS_ON_PRIMITIVES=fails(function(){return!Object.getOwnPropertyNames(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES},{getOwnPropertyNames});}});// node_modules/core-js/modules/es.object.get-prototype-of.js
var require_es_object_get_prototype_of=__commonJS({"node_modules/core-js/modules/es.object.get-prototype-of.js"(){"use strict";var $=require_export();var fails=require_fails();var toObject=require_to_object();var nativeGetPrototypeOf=require_object_get_prototype_of();var CORRECT_PROTOTYPE_GETTER=require_correct_prototype_getter();var FAILS_ON_PRIMITIVES=fails(function(){nativeGetPrototypeOf(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES,sham:!CORRECT_PROTOTYPE_GETTER},{getPrototypeOf:function getPrototypeOf(it){return nativeGetPrototypeOf(toObject(it));}});}});// node_modules/core-js/modules/es.object.group-by.js
var require_es_object_group_by=__commonJS({"node_modules/core-js/modules/es.object.group-by.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var requireObjectCoercible=require_require_object_coercible();var toPropertyKey=require_to_property_key();var iterate=require_iterate();var fails=require_fails();var nativeGroupBy=Object.groupBy;var create=getBuiltIn("Object","create");var push=uncurryThis([].push);var DOES_NOT_WORK_WITH_PRIMITIVES=!nativeGroupBy||fails(function(){return nativeGroupBy("ab",function(it){return it;}).a.length!==1;});$({target:"Object",stat:true,forced:DOES_NOT_WORK_WITH_PRIMITIVES},{groupBy:function groupBy(items,callbackfn){requireObjectCoercible(items);aCallable(callbackfn);var obj=create(null);var k=0;iterate(items,function(value){var key=toPropertyKey(callbackfn(value,k++));if(key in obj)push(obj[key],value);else obj[key]=[value];});return obj;}});}});// node_modules/core-js/modules/es.object.has-own.js
var require_es_object_has_own=__commonJS({"node_modules/core-js/modules/es.object.has-own.js"(){"use strict";var $=require_export();var hasOwn=require_has_own_property();$({target:"Object",stat:true},{hasOwn});}});// node_modules/core-js/internals/same-value.js
var require_same_value=__commonJS({"node_modules/core-js/internals/same-value.js"(exports,module2){"use strict";module2.exports=Object.is||function is(x,y){return x===y?x!==0||1/x===1/y:x!==x&&y!==y;};}});// node_modules/core-js/modules/es.object.is.js
var require_es_object_is=__commonJS({"node_modules/core-js/modules/es.object.is.js"(){"use strict";var $=require_export();var is=require_same_value();$({target:"Object",stat:true},{is});}});// node_modules/core-js/modules/es.object.is-extensible.js
var require_es_object_is_extensible=__commonJS({"node_modules/core-js/modules/es.object.is-extensible.js"(){"use strict";var $=require_export();var $isExtensible=require_object_is_extensible();$({target:"Object",stat:true,forced:Object.isExtensible!==$isExtensible},{isExtensible:$isExtensible});}});// node_modules/core-js/modules/es.object.is-frozen.js
var require_es_object_is_frozen=__commonJS({"node_modules/core-js/modules/es.object.is-frozen.js"(){"use strict";var $=require_export();var fails=require_fails();var isObject=require_is_object();var classof=require_classof_raw();var ARRAY_BUFFER_NON_EXTENSIBLE=require_array_buffer_non_extensible();var $isFrozen=Object.isFrozen;var FORCED=ARRAY_BUFFER_NON_EXTENSIBLE||fails(function(){$isFrozen(1);});$({target:"Object",stat:true,forced:FORCED},{isFrozen:function isFrozen(it){if(!isObject(it))return true;if(ARRAY_BUFFER_NON_EXTENSIBLE&&classof(it)==="ArrayBuffer")return true;return $isFrozen?$isFrozen(it):false;}});}});// node_modules/core-js/modules/es.object.is-sealed.js
var require_es_object_is_sealed=__commonJS({"node_modules/core-js/modules/es.object.is-sealed.js"(){"use strict";var $=require_export();var fails=require_fails();var isObject=require_is_object();var classof=require_classof_raw();var ARRAY_BUFFER_NON_EXTENSIBLE=require_array_buffer_non_extensible();var $isSealed=Object.isSealed;var FORCED=ARRAY_BUFFER_NON_EXTENSIBLE||fails(function(){$isSealed(1);});$({target:"Object",stat:true,forced:FORCED},{isSealed:function isSealed(it){if(!isObject(it))return true;if(ARRAY_BUFFER_NON_EXTENSIBLE&&classof(it)==="ArrayBuffer")return true;return $isSealed?$isSealed(it):false;}});}});// node_modules/core-js/modules/es.object.keys.js
var require_es_object_keys=__commonJS({"node_modules/core-js/modules/es.object.keys.js"(){"use strict";var $=require_export();var toObject=require_to_object();var nativeKeys=require_object_keys();var fails=require_fails();var FAILS_ON_PRIMITIVES=fails(function(){nativeKeys(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES},{keys:function keys(it){return nativeKeys(toObject(it));}});}});// node_modules/core-js/modules/es.object.lookup-getter.js
var require_es_object_lookup_getter=__commonJS({"node_modules/core-js/modules/es.object.lookup-getter.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var FORCED=require_object_prototype_accessors_forced();var toObject=require_to_object();var toPropertyKey=require_to_property_key();var getPrototypeOf=require_object_get_prototype_of();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;if(DESCRIPTORS){$({target:"Object",proto:true,forced:FORCED},{__lookupGetter__:function __lookupGetter__(P){var O=toObject(this);var key=toPropertyKey(P);var desc;do{if(desc=getOwnPropertyDescriptor(O,key))return desc.get;}while(O=getPrototypeOf(O));}});}}});// node_modules/core-js/modules/es.object.lookup-setter.js
var require_es_object_lookup_setter=__commonJS({"node_modules/core-js/modules/es.object.lookup-setter.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var FORCED=require_object_prototype_accessors_forced();var toObject=require_to_object();var toPropertyKey=require_to_property_key();var getPrototypeOf=require_object_get_prototype_of();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;if(DESCRIPTORS){$({target:"Object",proto:true,forced:FORCED},{__lookupSetter__:function __lookupSetter__(P){var O=toObject(this);var key=toPropertyKey(P);var desc;do{if(desc=getOwnPropertyDescriptor(O,key))return desc.set;}while(O=getPrototypeOf(O));}});}}});// node_modules/core-js/modules/es.object.prevent-extensions.js
var require_es_object_prevent_extensions=__commonJS({"node_modules/core-js/modules/es.object.prevent-extensions.js"(){"use strict";var $=require_export();var isObject=require_is_object();var onFreeze=require_internal_metadata().onFreeze;var FREEZING=require_freezing();var fails=require_fails();var $preventExtensions=Object.preventExtensions;var FAILS_ON_PRIMITIVES=fails(function(){$preventExtensions(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES,sham:!FREEZING},{preventExtensions:function preventExtensions(it){return $preventExtensions&&isObject(it)?$preventExtensions(onFreeze(it)):it;}});}});// node_modules/core-js/modules/es.object.proto.js
var require_es_object_proto=__commonJS({"node_modules/core-js/modules/es.object.proto.js"(){"use strict";var DESCRIPTORS=require_descriptors();var defineBuiltInAccessor=require_define_built_in_accessor();var isObject=require_is_object();var isPossiblePrototype=require_is_possible_prototype();var toObject=require_to_object();var requireObjectCoercible=require_require_object_coercible();var getPrototypeOf=Object.getPrototypeOf;var setPrototypeOf=Object.setPrototypeOf;var ObjectPrototype=Object.prototype;var PROTO="__proto__";if(DESCRIPTORS&&getPrototypeOf&&setPrototypeOf&&!(PROTO in ObjectPrototype))try{defineBuiltInAccessor(ObjectPrototype,PROTO,{configurable:true,get:function __proto__(){return getPrototypeOf(toObject(this));},set:function __proto__(proto){var O=requireObjectCoercible(this);if(isPossiblePrototype(proto)&&isObject(O)){setPrototypeOf(O,proto);}}});}catch(error){}}});// node_modules/core-js/modules/es.object.seal.js
var require_es_object_seal=__commonJS({"node_modules/core-js/modules/es.object.seal.js"(){"use strict";var $=require_export();var isObject=require_is_object();var onFreeze=require_internal_metadata().onFreeze;var FREEZING=require_freezing();var fails=require_fails();var $seal=Object.seal;var FAILS_ON_PRIMITIVES=fails(function(){$seal(1);});$({target:"Object",stat:true,forced:FAILS_ON_PRIMITIVES,sham:!FREEZING},{seal:function seal(it){return $seal&&isObject(it)?$seal(onFreeze(it)):it;}});}});// node_modules/core-js/modules/es.object.set-prototype-of.js
var require_es_object_set_prototype_of=__commonJS({"node_modules/core-js/modules/es.object.set-prototype-of.js"(){"use strict";var $=require_export();var setPrototypeOf=require_object_set_prototype_of();$({target:"Object",stat:true},{setPrototypeOf});}});// node_modules/core-js/internals/object-to-string.js
var require_object_to_string=__commonJS({"node_modules/core-js/internals/object-to-string.js"(exports,module2){"use strict";var TO_STRING_TAG_SUPPORT=require_to_string_tag_support();var classof=require_classof();module2.exports=TO_STRING_TAG_SUPPORT?{}.toString:function toString(){return"[object "+classof(this)+"]";};}});// node_modules/core-js/modules/es.object.to-string.js
var require_es_object_to_string=__commonJS({"node_modules/core-js/modules/es.object.to-string.js"(){"use strict";var TO_STRING_TAG_SUPPORT=require_to_string_tag_support();var defineBuiltIn=require_define_built_in();var toString=require_object_to_string();if(!TO_STRING_TAG_SUPPORT){defineBuiltIn(Object.prototype,"toString",toString,{unsafe:true});}}});// node_modules/core-js/modules/es.object.values.js
var require_es_object_values=__commonJS({"node_modules/core-js/modules/es.object.values.js"(){"use strict";var $=require_export();var $values=require_object_to_array().values;$({target:"Object",stat:true},{values:function values(O){return $values(O);}});}});// node_modules/core-js/modules/es.parse-float.js
var require_es_parse_float=__commonJS({"node_modules/core-js/modules/es.parse-float.js"(){"use strict";var $=require_export();var $parseFloat=require_number_parse_float();$({global:true,forced:parseFloat!==$parseFloat},{parseFloat:$parseFloat});}});// node_modules/core-js/modules/es.parse-int.js
var require_es_parse_int=__commonJS({"node_modules/core-js/modules/es.parse-int.js"(){"use strict";var $=require_export();var $parseInt=require_number_parse_int();$({global:true,forced:parseInt!==$parseInt},{parseInt:$parseInt});}});// node_modules/core-js/internals/a-constructor.js
var require_a_constructor=__commonJS({"node_modules/core-js/internals/a-constructor.js"(exports,module2){"use strict";var isConstructor=require_is_constructor();var tryToString=require_try_to_string();var $TypeError=TypeError;module2.exports=function(argument){if(isConstructor(argument))return argument;throw new $TypeError(tryToString(argument)+" is not a constructor");};}});// node_modules/core-js/internals/species-constructor.js
var require_species_constructor=__commonJS({"node_modules/core-js/internals/species-constructor.js"(exports,module2){"use strict";var anObject=require_an_object();var aConstructor=require_a_constructor();var isNullOrUndefined=require_is_null_or_undefined();var wellKnownSymbol=require_well_known_symbol();var SPECIES=wellKnownSymbol("species");module2.exports=function(O,defaultConstructor){var C=anObject(O).constructor;var S;return C===void 0||isNullOrUndefined(S=anObject(C)[SPECIES])?defaultConstructor:aConstructor(S);};}});// node_modules/core-js/internals/validate-arguments-length.js
var require_validate_arguments_length=__commonJS({"node_modules/core-js/internals/validate-arguments-length.js"(exports,module2){"use strict";var $TypeError=TypeError;module2.exports=function(passed,required){if(passed<required)throw new $TypeError("Not enough arguments");return passed;};}});// node_modules/core-js/internals/environment-is-ios.js
var require_environment_is_ios=__commonJS({"node_modules/core-js/internals/environment-is-ios.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();module2.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);}});// node_modules/core-js/internals/task.js
var require_task=__commonJS({"node_modules/core-js/internals/task.js"(exports,module2){"use strict";var globalThis2=require_global_this();var apply=require_function_apply();var bind=require_function_bind_context();var isCallable=require_is_callable();var hasOwn=require_has_own_property();var fails=require_fails();var html=require_html();var arraySlice=require_array_slice();var createElement=require_document_create_element();var validateArgumentsLength=require_validate_arguments_length();var IS_IOS=require_environment_is_ios();var IS_NODE=require_environment_is_node();var set=globalThis2.setImmediate;var clear=globalThis2.clearImmediate;var process2=globalThis2.process;var Dispatch=globalThis2.Dispatch;var Function2=globalThis2.Function;var MessageChannel2=globalThis2.MessageChannel;var String2=globalThis2.String;var counter=0;var queue={};var ONREADYSTATECHANGE="onreadystatechange";var $location;var defer;var channel;var port;fails(function(){$location=globalThis2.location;});var run=function(id){if(hasOwn(queue,id)){var fn=queue[id];delete queue[id];fn();}};var runner=function(id){return function(){run(id);};};var eventListener=function(event){run(event.data);};var globalPostMessageDefer=function(id){globalThis2.postMessage(String2(id),$location.protocol+"//"+$location.host);};if(!set||!clear){set=function setImmediate(handler){validateArgumentsLength(arguments.length,1);var fn=isCallable(handler)?handler:Function2(handler);var args=arraySlice(arguments,1);queue[++counter]=function(){apply(fn,void 0,args);};defer(counter);return counter;};clear=function clearImmediate(id){delete queue[id];};if(IS_NODE){defer=function(id){process2.nextTick(runner(id));};}else if(Dispatch&&Dispatch.now){defer=function(id){Dispatch.now(runner(id));};}else if(MessageChannel2&&!IS_IOS){channel=new MessageChannel2();port=channel.port2;channel.port1.onmessage=eventListener;defer=bind(port.postMessage,port);}else if(globalThis2.addEventListener&&isCallable(globalThis2.postMessage)&&!globalThis2.importScripts&&$location&&$location.protocol!=="file:"&&!fails(globalPostMessageDefer)){defer=globalPostMessageDefer;globalThis2.addEventListener("message",eventListener,false);}else if(ONREADYSTATECHANGE in createElement("script")){defer=function(id){html.appendChild(createElement("script"))[ONREADYSTATECHANGE]=function(){html.removeChild(this);run(id);};};}else{defer=function(id){setTimeout(runner(id),0);};}}module2.exports={set,clear};}});// node_modules/core-js/internals/safe-get-built-in.js
var require_safe_get_built_in=__commonJS({"node_modules/core-js/internals/safe-get-built-in.js"(exports,module2){"use strict";var globalThis2=require_global_this();var DESCRIPTORS=require_descriptors();var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;module2.exports=function(name){if(!DESCRIPTORS)return globalThis2[name];var descriptor=getOwnPropertyDescriptor(globalThis2,name);return descriptor&&descriptor.value;};}});// node_modules/core-js/internals/queue.js
var require_queue=__commonJS({"node_modules/core-js/internals/queue.js"(exports,module2){"use strict";var Queue=function(){this.head=null;this.tail=null;};Queue.prototype={add:function(item){var entry={item,next:null};var tail=this.tail;if(tail)tail.next=entry;else this.head=entry;this.tail=entry;},get:function(){var entry=this.head;if(entry){var next=this.head=entry.next;if(next===null)this.tail=null;return entry.item;}}};module2.exports=Queue;}});// node_modules/core-js/internals/environment-is-ios-pebble.js
var require_environment_is_ios_pebble=__commonJS({"node_modules/core-js/internals/environment-is-ios-pebble.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();module2.exports=/ipad|iphone|ipod/i.test(userAgent)&&typeof Pebble!="undefined";}});// node_modules/core-js/internals/environment-is-webos-webkit.js
var require_environment_is_webos_webkit=__commonJS({"node_modules/core-js/internals/environment-is-webos-webkit.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();module2.exports=/web0s(?!.*chrome)/i.test(userAgent);}});// node_modules/core-js/internals/microtask.js
var require_microtask=__commonJS({"node_modules/core-js/internals/microtask.js"(exports,module2){"use strict";var globalThis2=require_global_this();var safeGetBuiltIn=require_safe_get_built_in();var bind=require_function_bind_context();var macrotask=require_task().set;var Queue=require_queue();var IS_IOS=require_environment_is_ios();var IS_IOS_PEBBLE=require_environment_is_ios_pebble();var IS_WEBOS_WEBKIT=require_environment_is_webos_webkit();var IS_NODE=require_environment_is_node();var MutationObserver=globalThis2.MutationObserver||globalThis2.WebKitMutationObserver;var document2=globalThis2.document;var process2=globalThis2.process;var Promise2=globalThis2.Promise;var microtask=safeGetBuiltIn("queueMicrotask");var notify;var toggle;var node;var promise;var then;if(!microtask){queue=new Queue();flush=function(){var parent,fn;if(IS_NODE&&(parent=process2.domain))parent.exit();while(fn=queue.get())try{fn();}catch(error){if(queue.head)notify();throw error;}if(parent)parent.enter();};if(!IS_IOS&&!IS_NODE&&!IS_WEBOS_WEBKIT&&MutationObserver&&document2){toggle=true;node=document2.createTextNode("");new MutationObserver(flush).observe(node,{characterData:true});notify=function(){node.data=toggle=!toggle;};}else if(!IS_IOS_PEBBLE&&Promise2&&Promise2.resolve){promise=Promise2.resolve(void 0);promise.constructor=Promise2;then=bind(promise.then,promise);notify=function(){then(flush);};}else if(IS_NODE){notify=function(){process2.nextTick(flush);};}else{macrotask=bind(macrotask,globalThis2);notify=function(){macrotask(flush);};}microtask=function(fn){if(!queue.head)notify();queue.add(fn);};}var queue;var flush;module2.exports=microtask;}});// node_modules/core-js/internals/host-report-errors.js
var require_host_report_errors=__commonJS({"node_modules/core-js/internals/host-report-errors.js"(exports,module2){"use strict";module2.exports=function(a,b){try{arguments.length===1?console.error(a):console.error(a,b);}catch(error){}};}});// node_modules/core-js/internals/perform.js
var require_perform=__commonJS({"node_modules/core-js/internals/perform.js"(exports,module2){"use strict";module2.exports=function(exec){try{return{error:false,value:exec()};}catch(error){return{error:true,value:error};}};}});// node_modules/core-js/internals/promise-native-constructor.js
var require_promise_native_constructor=__commonJS({"node_modules/core-js/internals/promise-native-constructor.js"(exports,module2){"use strict";var globalThis2=require_global_this();module2.exports=globalThis2.Promise;}});// node_modules/core-js/internals/promise-constructor-detection.js
var require_promise_constructor_detection=__commonJS({"node_modules/core-js/internals/promise-constructor-detection.js"(exports,module2){"use strict";var globalThis2=require_global_this();var NativePromiseConstructor=require_promise_native_constructor();var isCallable=require_is_callable();var isForced=require_is_forced();var inspectSource=require_inspect_source();var wellKnownSymbol=require_well_known_symbol();var ENVIRONMENT=require_environment();var IS_PURE=require_is_pure();var V8_VERSION=require_environment_v8_version();var NativePromisePrototype=NativePromiseConstructor&&NativePromiseConstructor.prototype;var SPECIES=wellKnownSymbol("species");var SUBCLASSING=false;var NATIVE_PROMISE_REJECTION_EVENT=isCallable(globalThis2.PromiseRejectionEvent);var FORCED_PROMISE_CONSTRUCTOR=isForced("Promise",function(){var PROMISE_CONSTRUCTOR_SOURCE=inspectSource(NativePromiseConstructor);var GLOBAL_CORE_JS_PROMISE=PROMISE_CONSTRUCTOR_SOURCE!==String(NativePromiseConstructor);if(!GLOBAL_CORE_JS_PROMISE&&V8_VERSION===66)return true;if(IS_PURE&&!(NativePromisePrototype["catch"]&&NativePromisePrototype["finally"]))return true;if(!V8_VERSION||V8_VERSION<51||!/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)){var promise=new NativePromiseConstructor(function(resolve){resolve(1);});var FakePromise=function(exec){exec(function(){},function(){});};var constructor=promise.constructor={};constructor[SPECIES]=FakePromise;SUBCLASSING=promise.then(function(){})instanceof FakePromise;if(!SUBCLASSING)return true;}return!GLOBAL_CORE_JS_PROMISE&&(ENVIRONMENT==="BROWSER"||ENVIRONMENT==="DENO")&&!NATIVE_PROMISE_REJECTION_EVENT;});module2.exports={CONSTRUCTOR:FORCED_PROMISE_CONSTRUCTOR,REJECTION_EVENT:NATIVE_PROMISE_REJECTION_EVENT,SUBCLASSING};}});// node_modules/core-js/internals/new-promise-capability.js
var require_new_promise_capability=__commonJS({"node_modules/core-js/internals/new-promise-capability.js"(exports,module2){"use strict";var aCallable=require_a_callable();var $TypeError=TypeError;var PromiseCapability=function(C){var resolve,reject;this.promise=new C(function($$resolve,$$reject){if(resolve!==void 0||reject!==void 0)throw new $TypeError("Bad Promise constructor");resolve=$$resolve;reject=$$reject;});this.resolve=aCallable(resolve);this.reject=aCallable(reject);};module2.exports.f=function(C){return new PromiseCapability(C);};}});// node_modules/core-js/modules/es.promise.constructor.js
var require_es_promise_constructor=__commonJS({"node_modules/core-js/modules/es.promise.constructor.js"(){"use strict";var $=require_export();var IS_PURE=require_is_pure();var IS_NODE=require_environment_is_node();var globalThis2=require_global_this();var path=require_path();var call=require_function_call();var defineBuiltIn=require_define_built_in();var setPrototypeOf=require_object_set_prototype_of();var setToStringTag=require_set_to_string_tag();var setSpecies=require_set_species();var aCallable=require_a_callable();var isCallable=require_is_callable();var isObject=require_is_object();var anInstance=require_an_instance();var speciesConstructor=require_species_constructor();var task=require_task().set;var microtask=require_microtask();var hostReportErrors=require_host_report_errors();var perform=require_perform();var Queue=require_queue();var InternalStateModule=require_internal_state();var NativePromiseConstructor=require_promise_native_constructor();var PromiseConstructorDetection=require_promise_constructor_detection();var newPromiseCapabilityModule=require_new_promise_capability();var PROMISE="Promise";var FORCED_PROMISE_CONSTRUCTOR=PromiseConstructorDetection.CONSTRUCTOR;var NATIVE_PROMISE_REJECTION_EVENT=PromiseConstructorDetection.REJECTION_EVENT;var NATIVE_PROMISE_SUBCLASSING=PromiseConstructorDetection.SUBCLASSING;var getInternalPromiseState=InternalStateModule.getterFor(PROMISE);var setInternalState=InternalStateModule.set;var NativePromisePrototype=NativePromiseConstructor&&NativePromiseConstructor.prototype;var PromiseConstructor=NativePromiseConstructor;var PromisePrototype=NativePromisePrototype;var TypeError2=globalThis2.TypeError;var document2=globalThis2.document;var process2=globalThis2.process;var newPromiseCapability=newPromiseCapabilityModule.f;var newGenericPromiseCapability=newPromiseCapability;var DISPATCH_EVENT=!!(document2&&document2.createEvent&&globalThis2.dispatchEvent);var UNHANDLED_REJECTION="unhandledrejection";var REJECTION_HANDLED="rejectionhandled";var PENDING=0;var FULFILLED=1;var REJECTED=2;var HANDLED=1;var UNHANDLED=2;var Internal;var OwnPromiseCapability;var PromiseWrapper;var nativeThen;var isThenable=function(it){var then;return isObject(it)&&isCallable(then=it.then)?then:false;};var callReaction=function(reaction,state){var value=state.value;var ok=state.state===FULFILLED;var handler=ok?reaction.ok:reaction.fail;var resolve=reaction.resolve;var reject=reaction.reject;var domain=reaction.domain;var result,then,exited;try{if(handler){if(!ok){if(state.rejection===UNHANDLED)onHandleUnhandled(state);state.rejection=HANDLED;}if(handler===true)result=value;else{if(domain)domain.enter();result=handler(value);if(domain){domain.exit();exited=true;}}if(result===reaction.promise){reject(new TypeError2("Promise-chain cycle"));}else if(then=isThenable(result)){call(then,result,resolve,reject);}else resolve(result);}else reject(value);}catch(error){if(domain&&!exited)domain.exit();reject(error);}};var notify=function(state,isReject){if(state.notified)return;state.notified=true;microtask(function(){var reactions=state.reactions;var reaction;while(reaction=reactions.get()){callReaction(reaction,state);}state.notified=false;if(isReject&&!state.rejection)onUnhandled(state);});};var dispatchEvent=function(name,promise,reason){var event,handler;if(DISPATCH_EVENT){event=document2.createEvent("Event");event.promise=promise;event.reason=reason;event.initEvent(name,false,true);globalThis2.dispatchEvent(event);}else event={promise,reason};if(!NATIVE_PROMISE_REJECTION_EVENT&&(handler=globalThis2["on"+name]))handler(event);else if(name===UNHANDLED_REJECTION)hostReportErrors("Unhandled promise rejection",reason);};var onUnhandled=function(state){call(task,globalThis2,function(){var promise=state.facade;var value=state.value;var IS_UNHANDLED=isUnhandled(state);var result;if(IS_UNHANDLED){result=perform(function(){if(IS_NODE){process2.emit("unhandledRejection",value,promise);}else dispatchEvent(UNHANDLED_REJECTION,promise,value);});state.rejection=IS_NODE||isUnhandled(state)?UNHANDLED:HANDLED;if(result.error)throw result.value;}});};var isUnhandled=function(state){return state.rejection!==HANDLED&&!state.parent;};var onHandleUnhandled=function(state){call(task,globalThis2,function(){var promise=state.facade;if(IS_NODE){process2.emit("rejectionHandled",promise);}else dispatchEvent(REJECTION_HANDLED,promise,state.value);});};var bind=function(fn,state,unwrap){return function(value){fn(state,value,unwrap);};};var internalReject=function(state,value,unwrap){if(state.done)return;state.done=true;if(unwrap)state=unwrap;state.value=value;state.state=REJECTED;notify(state,true);};var internalResolve=function(state,value,unwrap){if(state.done)return;state.done=true;if(unwrap)state=unwrap;try{if(state.facade===value)throw new TypeError2("Promise can't be resolved itself");var then=isThenable(value);if(then){microtask(function(){var wrapper={done:false};try{call(then,value,bind(internalResolve,wrapper,state),bind(internalReject,wrapper,state));}catch(error){internalReject(wrapper,error,state);}});}else{state.value=value;state.state=FULFILLED;notify(state,false);}}catch(error){internalReject({done:false},error,state);}};if(FORCED_PROMISE_CONSTRUCTOR){PromiseConstructor=function Promise2(executor){anInstance(this,PromisePrototype);aCallable(executor);call(Internal,this);var state=getInternalPromiseState(this);try{executor(bind(internalResolve,state),bind(internalReject,state));}catch(error){internalReject(state,error);}};PromisePrototype=PromiseConstructor.prototype;Internal=function Promise2(executor){setInternalState(this,{type:PROMISE,done:false,notified:false,parent:false,reactions:new Queue(),rejection:false,state:PENDING,value:null});};Internal.prototype=defineBuiltIn(PromisePrototype,"then",function then(onFulfilled,onRejected){var state=getInternalPromiseState(this);var reaction=newPromiseCapability(speciesConstructor(this,PromiseConstructor));state.parent=true;reaction.ok=isCallable(onFulfilled)?onFulfilled:true;reaction.fail=isCallable(onRejected)&&onRejected;reaction.domain=IS_NODE?process2.domain:void 0;if(state.state===PENDING)state.reactions.add(reaction);else microtask(function(){callReaction(reaction,state);});return reaction.promise;});OwnPromiseCapability=function(){var promise=new Internal();var state=getInternalPromiseState(promise);this.promise=promise;this.resolve=bind(internalResolve,state);this.reject=bind(internalReject,state);};newPromiseCapabilityModule.f=newPromiseCapability=function(C){return C===PromiseConstructor||C===PromiseWrapper?new OwnPromiseCapability(C):newGenericPromiseCapability(C);};if(!IS_PURE&&isCallable(NativePromiseConstructor)&&NativePromisePrototype!==Object.prototype){nativeThen=NativePromisePrototype.then;if(!NATIVE_PROMISE_SUBCLASSING){defineBuiltIn(NativePromisePrototype,"then",function then(onFulfilled,onRejected){var that=this;return new PromiseConstructor(function(resolve,reject){call(nativeThen,that,resolve,reject);}).then(onFulfilled,onRejected);},{unsafe:true});}try{delete NativePromisePrototype.constructor;}catch(error){}if(setPrototypeOf){setPrototypeOf(NativePromisePrototype,PromisePrototype);}}}$({global:true,constructor:true,wrap:true,forced:FORCED_PROMISE_CONSTRUCTOR},{Promise:PromiseConstructor});PromiseWrapper=path.Promise;setToStringTag(PromiseConstructor,PROMISE,false,true);setSpecies(PROMISE);}});// node_modules/core-js/internals/promise-statics-incorrect-iteration.js
var require_promise_statics_incorrect_iteration=__commonJS({"node_modules/core-js/internals/promise-statics-incorrect-iteration.js"(exports,module2){"use strict";var NativePromiseConstructor=require_promise_native_constructor();var checkCorrectnessOfIteration=require_check_correctness_of_iteration();var FORCED_PROMISE_CONSTRUCTOR=require_promise_constructor_detection().CONSTRUCTOR;module2.exports=FORCED_PROMISE_CONSTRUCTOR||!checkCorrectnessOfIteration(function(iterable){NativePromiseConstructor.all(iterable).then(void 0,function(){});});}});// node_modules/core-js/modules/es.promise.all.js
var require_es_promise_all=__commonJS({"node_modules/core-js/modules/es.promise.all.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var newPromiseCapabilityModule=require_new_promise_capability();var perform=require_perform();var iterate=require_iterate();var PROMISE_STATICS_INCORRECT_ITERATION=require_promise_statics_incorrect_iteration();$({target:"Promise",stat:true,forced:PROMISE_STATICS_INCORRECT_ITERATION},{all:function all(iterable){var C=this;var capability=newPromiseCapabilityModule.f(C);var resolve=capability.resolve;var reject=capability.reject;var result=perform(function(){var $promiseResolve=aCallable(C.resolve);var values=[];var counter=0;var remaining=1;iterate(iterable,function(promise){var index=counter++;var alreadyCalled=false;remaining++;call($promiseResolve,C,promise).then(function(value){if(alreadyCalled)return;alreadyCalled=true;values[index]=value;--remaining||resolve(values);},reject);});--remaining||resolve(values);});if(result.error)reject(result.value);return capability.promise;}});}});// node_modules/core-js/modules/es.promise.catch.js
var require_es_promise_catch=__commonJS({"node_modules/core-js/modules/es.promise.catch.js"(){"use strict";var $=require_export();var IS_PURE=require_is_pure();var FORCED_PROMISE_CONSTRUCTOR=require_promise_constructor_detection().CONSTRUCTOR;var NativePromiseConstructor=require_promise_native_constructor();var getBuiltIn=require_get_built_in();var isCallable=require_is_callable();var defineBuiltIn=require_define_built_in();var NativePromisePrototype=NativePromiseConstructor&&NativePromiseConstructor.prototype;$({target:"Promise",proto:true,forced:FORCED_PROMISE_CONSTRUCTOR,real:true},{"catch":function(onRejected){return this.then(void 0,onRejected);}});if(!IS_PURE&&isCallable(NativePromiseConstructor)){method=getBuiltIn("Promise").prototype["catch"];if(NativePromisePrototype["catch"]!==method){defineBuiltIn(NativePromisePrototype,"catch",method,{unsafe:true});}}var method;}});// node_modules/core-js/modules/es.promise.race.js
var require_es_promise_race=__commonJS({"node_modules/core-js/modules/es.promise.race.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var newPromiseCapabilityModule=require_new_promise_capability();var perform=require_perform();var iterate=require_iterate();var PROMISE_STATICS_INCORRECT_ITERATION=require_promise_statics_incorrect_iteration();$({target:"Promise",stat:true,forced:PROMISE_STATICS_INCORRECT_ITERATION},{race:function race(iterable){var C=this;var capability=newPromiseCapabilityModule.f(C);var reject=capability.reject;var result=perform(function(){var $promiseResolve=aCallable(C.resolve);iterate(iterable,function(promise){call($promiseResolve,C,promise).then(capability.resolve,reject);});});if(result.error)reject(result.value);return capability.promise;}});}});// node_modules/core-js/modules/es.promise.reject.js
var require_es_promise_reject=__commonJS({"node_modules/core-js/modules/es.promise.reject.js"(){"use strict";var $=require_export();var newPromiseCapabilityModule=require_new_promise_capability();var FORCED_PROMISE_CONSTRUCTOR=require_promise_constructor_detection().CONSTRUCTOR;$({target:"Promise",stat:true,forced:FORCED_PROMISE_CONSTRUCTOR},{reject:function reject(r){var capability=newPromiseCapabilityModule.f(this);var capabilityReject=capability.reject;capabilityReject(r);return capability.promise;}});}});// node_modules/core-js/internals/promise-resolve.js
var require_promise_resolve=__commonJS({"node_modules/core-js/internals/promise-resolve.js"(exports,module2){"use strict";var anObject=require_an_object();var isObject=require_is_object();var newPromiseCapability=require_new_promise_capability();module2.exports=function(C,x){anObject(C);if(isObject(x)&&x.constructor===C)return x;var promiseCapability=newPromiseCapability.f(C);var resolve=promiseCapability.resolve;resolve(x);return promiseCapability.promise;};}});// node_modules/core-js/modules/es.promise.resolve.js
var require_es_promise_resolve=__commonJS({"node_modules/core-js/modules/es.promise.resolve.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var IS_PURE=require_is_pure();var NativePromiseConstructor=require_promise_native_constructor();var FORCED_PROMISE_CONSTRUCTOR=require_promise_constructor_detection().CONSTRUCTOR;var promiseResolve=require_promise_resolve();var PromiseConstructorWrapper=getBuiltIn("Promise");var CHECK_WRAPPER=IS_PURE&&!FORCED_PROMISE_CONSTRUCTOR;$({target:"Promise",stat:true,forced:IS_PURE||FORCED_PROMISE_CONSTRUCTOR},{resolve:function resolve(x){return promiseResolve(CHECK_WRAPPER&&this===PromiseConstructorWrapper?NativePromiseConstructor:this,x);}});}});// node_modules/core-js/modules/es.promise.js
var require_es_promise=__commonJS({"node_modules/core-js/modules/es.promise.js"(){"use strict";require_es_promise_constructor();require_es_promise_all();require_es_promise_catch();require_es_promise_race();require_es_promise_reject();require_es_promise_resolve();}});// node_modules/core-js/modules/es.promise.all-settled.js
var require_es_promise_all_settled=__commonJS({"node_modules/core-js/modules/es.promise.all-settled.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var newPromiseCapabilityModule=require_new_promise_capability();var perform=require_perform();var iterate=require_iterate();var PROMISE_STATICS_INCORRECT_ITERATION=require_promise_statics_incorrect_iteration();$({target:"Promise",stat:true,forced:PROMISE_STATICS_INCORRECT_ITERATION},{allSettled:function allSettled(iterable){var C=this;var capability=newPromiseCapabilityModule.f(C);var resolve=capability.resolve;var reject=capability.reject;var result=perform(function(){var promiseResolve=aCallable(C.resolve);var values=[];var counter=0;var remaining=1;iterate(iterable,function(promise){var index=counter++;var alreadyCalled=false;remaining++;call(promiseResolve,C,promise).then(function(value){if(alreadyCalled)return;alreadyCalled=true;values[index]={status:"fulfilled",value};--remaining||resolve(values);},function(error){if(alreadyCalled)return;alreadyCalled=true;values[index]={status:"rejected",reason:error};--remaining||resolve(values);});});--remaining||resolve(values);});if(result.error)reject(result.value);return capability.promise;}});}});// node_modules/core-js/modules/es.promise.any.js
var require_es_promise_any=__commonJS({"node_modules/core-js/modules/es.promise.any.js"(){"use strict";var $=require_export();var call=require_function_call();var aCallable=require_a_callable();var getBuiltIn=require_get_built_in();var newPromiseCapabilityModule=require_new_promise_capability();var perform=require_perform();var iterate=require_iterate();var PROMISE_STATICS_INCORRECT_ITERATION=require_promise_statics_incorrect_iteration();var PROMISE_ANY_ERROR="No one promise resolved";$({target:"Promise",stat:true,forced:PROMISE_STATICS_INCORRECT_ITERATION},{any:function any(iterable){var C=this;var AggregateError=getBuiltIn("AggregateError");var capability=newPromiseCapabilityModule.f(C);var resolve=capability.resolve;var reject=capability.reject;var result=perform(function(){var promiseResolve=aCallable(C.resolve);var errors=[];var counter=0;var remaining=1;var alreadyResolved=false;iterate(iterable,function(promise){var index=counter++;var alreadyRejected=false;remaining++;call(promiseResolve,C,promise).then(function(value){if(alreadyRejected||alreadyResolved)return;alreadyResolved=true;resolve(value);},function(error){if(alreadyRejected||alreadyResolved)return;alreadyRejected=true;errors[index]=error;--remaining||reject(new AggregateError(errors,PROMISE_ANY_ERROR));});});--remaining||reject(new AggregateError(errors,PROMISE_ANY_ERROR));});if(result.error)reject(result.value);return capability.promise;}});}});// node_modules/core-js/modules/es.promise.finally.js
var require_es_promise_finally=__commonJS({"node_modules/core-js/modules/es.promise.finally.js"(){"use strict";var $=require_export();var IS_PURE=require_is_pure();var NativePromiseConstructor=require_promise_native_constructor();var fails=require_fails();var getBuiltIn=require_get_built_in();var isCallable=require_is_callable();var speciesConstructor=require_species_constructor();var promiseResolve=require_promise_resolve();var defineBuiltIn=require_define_built_in();var NativePromisePrototype=NativePromiseConstructor&&NativePromiseConstructor.prototype;var NON_GENERIC=!!NativePromiseConstructor&&fails(function(){NativePromisePrototype["finally"].call({then:function(){}},function(){});});$({target:"Promise",proto:true,real:true,forced:NON_GENERIC},{"finally":function(onFinally){var C=speciesConstructor(this,getBuiltIn("Promise"));var isFunction=isCallable(onFinally);return this.then(isFunction?function(x){return promiseResolve(C,onFinally()).then(function(){return x;});}:onFinally,isFunction?function(e){return promiseResolve(C,onFinally()).then(function(){throw e;});}:onFinally);}});if(!IS_PURE&&isCallable(NativePromiseConstructor)){method=getBuiltIn("Promise").prototype["finally"];if(NativePromisePrototype["finally"]!==method){defineBuiltIn(NativePromisePrototype,"finally",method,{unsafe:true});}}var method;}});// node_modules/core-js/modules/es.promise.try.js
var require_es_promise_try=__commonJS({"node_modules/core-js/modules/es.promise.try.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var apply=require_function_apply();var slice=require_array_slice();var newPromiseCapabilityModule=require_new_promise_capability();var aCallable=require_a_callable();var perform=require_perform();var Promise2=globalThis2.Promise;var ACCEPT_ARGUMENTS=false;var FORCED=!Promise2||!Promise2["try"]||perform(function(){Promise2["try"](function(argument){ACCEPT_ARGUMENTS=argument===8;},8);}).error||!ACCEPT_ARGUMENTS;$({target:"Promise",stat:true,forced:FORCED},{"try":function(callbackfn){var args=arguments.length>1?slice(arguments,1):[];var promiseCapability=newPromiseCapabilityModule.f(this);var result=perform(function(){return apply(aCallable(callbackfn),void 0,args);});(result.error?promiseCapability.reject:promiseCapability.resolve)(result.value);return promiseCapability.promise;}});}});// node_modules/core-js/modules/es.promise.with-resolvers.js
var require_es_promise_with_resolvers=__commonJS({"node_modules/core-js/modules/es.promise.with-resolvers.js"(){"use strict";var $=require_export();var newPromiseCapabilityModule=require_new_promise_capability();$({target:"Promise",stat:true},{withResolvers:function withResolvers(){var promiseCapability=newPromiseCapabilityModule.f(this);return{promise:promiseCapability.promise,resolve:promiseCapability.resolve,reject:promiseCapability.reject};}});}});// node_modules/core-js/internals/async-iterator-prototype.js
var require_async_iterator_prototype=__commonJS({"node_modules/core-js/internals/async-iterator-prototype.js"(exports,module2){"use strict";var globalThis2=require_global_this();var shared=require_shared_store();var isCallable=require_is_callable();var create=require_object_create();var getPrototypeOf=require_object_get_prototype_of();var defineBuiltIn=require_define_built_in();var wellKnownSymbol=require_well_known_symbol();var IS_PURE=require_is_pure();var USE_FUNCTION_CONSTRUCTOR="USE_FUNCTION_CONSTRUCTOR";var ASYNC_ITERATOR=wellKnownSymbol("asyncIterator");var AsyncIterator=globalThis2.AsyncIterator;var PassedAsyncIteratorPrototype=shared.AsyncIteratorPrototype;var AsyncIteratorPrototype;var prototype;if(PassedAsyncIteratorPrototype){AsyncIteratorPrototype=PassedAsyncIteratorPrototype;}else if(isCallable(AsyncIterator)){AsyncIteratorPrototype=AsyncIterator.prototype;}else if(shared[USE_FUNCTION_CONSTRUCTOR]||globalThis2[USE_FUNCTION_CONSTRUCTOR]){try{prototype=getPrototypeOf(getPrototypeOf(getPrototypeOf(Function("return async function*(){}()")())));if(getPrototypeOf(prototype)===Object.prototype)AsyncIteratorPrototype=prototype;}catch(error){}}if(!AsyncIteratorPrototype)AsyncIteratorPrototype={};else if(IS_PURE)AsyncIteratorPrototype=create(AsyncIteratorPrototype);if(!isCallable(AsyncIteratorPrototype[ASYNC_ITERATOR])){defineBuiltIn(AsyncIteratorPrototype,ASYNC_ITERATOR,function(){return this;});}module2.exports=AsyncIteratorPrototype;}});// node_modules/core-js/internals/async-from-sync-iterator.js
var require_async_from_sync_iterator=__commonJS({"node_modules/core-js/internals/async-from-sync-iterator.js"(exports,module2){"use strict";var call=require_function_call();var anObject=require_an_object();var create=require_object_create();var getMethod=require_get_method();var defineBuiltIns=require_define_built_ins();var InternalStateModule=require_internal_state();var iteratorClose=require_iterator_close();var getBuiltIn=require_get_built_in();var AsyncIteratorPrototype=require_async_iterator_prototype();var createIterResultObject=require_create_iter_result_object();var Promise2=getBuiltIn("Promise");var ASYNC_FROM_SYNC_ITERATOR="AsyncFromSyncIterator";var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(ASYNC_FROM_SYNC_ITERATOR);var asyncFromSyncIteratorContinuation=function(result,resolve,reject,syncIterator,closeOnRejection){var done=result.done;Promise2.resolve(result.value).then(function(value){resolve(createIterResultObject(value,done));},function(error){if(!done&&closeOnRejection){try{iteratorClose(syncIterator,"throw",error);}catch(error2){error=error2;}}reject(error);});};var AsyncFromSyncIterator=function AsyncIterator(iteratorRecord){iteratorRecord.type=ASYNC_FROM_SYNC_ITERATOR;setInternalState(this,iteratorRecord);};AsyncFromSyncIterator.prototype=defineBuiltIns(create(AsyncIteratorPrototype),{next:function next(){var state=getInternalState(this);return new Promise2(function(resolve,reject){var result=anObject(call(state.next,state.iterator));asyncFromSyncIteratorContinuation(result,resolve,reject,state.iterator,true);});},"return":function(){var iterator=getInternalState(this).iterator;return new Promise2(function(resolve,reject){var $return=getMethod(iterator,"return");if($return===void 0)return resolve(createIterResultObject(void 0,true));var result=anObject(call($return,iterator));asyncFromSyncIteratorContinuation(result,resolve,reject,iterator);});}});module2.exports=AsyncFromSyncIterator;}});// node_modules/core-js/internals/get-async-iterator.js
var require_get_async_iterator=__commonJS({"node_modules/core-js/internals/get-async-iterator.js"(exports,module2){"use strict";var call=require_function_call();var AsyncFromSyncIterator=require_async_from_sync_iterator();var anObject=require_an_object();var getIterator=require_get_iterator();var getIteratorDirect=require_get_iterator_direct();var getMethod=require_get_method();var wellKnownSymbol=require_well_known_symbol();var ASYNC_ITERATOR=wellKnownSymbol("asyncIterator");module2.exports=function(it,usingIterator){var method=arguments.length<2?getMethod(it,ASYNC_ITERATOR):usingIterator;return method?anObject(call(method,it)):new AsyncFromSyncIterator(getIteratorDirect(getIterator(it)));};}});// node_modules/core-js/internals/async-iterator-close.js
var require_async_iterator_close=__commonJS({"node_modules/core-js/internals/async-iterator-close.js"(exports,module2){"use strict";var call=require_function_call();var getBuiltIn=require_get_built_in();var getMethod=require_get_method();module2.exports=function(iterator,method,argument,reject){try{var returnMethod=getMethod(iterator,"return");if(returnMethod){return getBuiltIn("Promise").resolve(call(returnMethod,iterator)).then(function(){method(argument);},function(error){reject(error);});}}catch(error2){return reject(error2);}method(argument);};}});// node_modules/core-js/internals/async-iterator-iteration.js
var require_async_iterator_iteration=__commonJS({"node_modules/core-js/internals/async-iterator-iteration.js"(exports,module2){"use strict";var call=require_function_call();var aCallable=require_a_callable();var anObject=require_an_object();var isObject=require_is_object();var doesNotExceedSafeInteger=require_does_not_exceed_safe_integer();var getBuiltIn=require_get_built_in();var getIteratorDirect=require_get_iterator_direct();var closeAsyncIteration=require_async_iterator_close();var createMethod=function(TYPE){var IS_TO_ARRAY=TYPE===0;var IS_FOR_EACH=TYPE===1;var IS_EVERY=TYPE===2;var IS_SOME=TYPE===3;return function(object,fn,target){anObject(object);var MAPPING=fn!==void 0;if(MAPPING||!IS_TO_ARRAY)aCallable(fn);var record=getIteratorDirect(object);var Promise2=getBuiltIn("Promise");var iterator=record.iterator;var next=record.next;var counter=0;return new Promise2(function(resolve,reject){var ifAbruptCloseAsyncIterator=function(error){closeAsyncIteration(iterator,reject,error,reject);};var loop=function(){try{if(MAPPING)try{doesNotExceedSafeInteger(counter);}catch(error5){ifAbruptCloseAsyncIterator(error5);}Promise2.resolve(anObject(call(next,iterator))).then(function(step){try{if(anObject(step).done){if(IS_TO_ARRAY){target.length=counter;resolve(target);}else resolve(IS_SOME?false:IS_EVERY||void 0);}else{var value=step.value;try{if(MAPPING){var result=fn(value,counter);var handler=function($result){if(IS_FOR_EACH){loop();}else if(IS_EVERY){$result?loop():closeAsyncIteration(iterator,resolve,false,reject);}else if(IS_TO_ARRAY){try{target[counter++]=$result;loop();}catch(error4){ifAbruptCloseAsyncIterator(error4);}}else{$result?closeAsyncIteration(iterator,resolve,IS_SOME||value,reject):loop();}};if(isObject(result))Promise2.resolve(result).then(handler,ifAbruptCloseAsyncIterator);else handler(result);}else{target[counter++]=value;loop();}}catch(error3){ifAbruptCloseAsyncIterator(error3);}}}catch(error2){reject(error2);}},reject);}catch(error){reject(error);}};loop();});};};module2.exports={// `AsyncIterator.prototype.toArray` / `Array.fromAsync` methods
toArray:createMethod(0),// `AsyncIterator.prototype.forEach` method
forEach:createMethod(1),// `AsyncIterator.prototype.every` method
every:createMethod(2),// `AsyncIterator.prototype.some` method
some:createMethod(3),// `AsyncIterator.prototype.find` method
find:createMethod(4)};}});// node_modules/core-js/internals/array-from-async.js
var require_array_from_async=__commonJS({"node_modules/core-js/internals/array-from-async.js"(exports,module2){"use strict";var bind=require_function_bind_context();var uncurryThis=require_function_uncurry_this();var toObject=require_to_object();var isConstructor=require_is_constructor();var getAsyncIterator=require_get_async_iterator();var getIterator=require_get_iterator();var getIteratorDirect=require_get_iterator_direct();var getIteratorMethod=require_get_iterator_method();var getMethod=require_get_method();var getBuiltIn=require_get_built_in();var getBuiltInPrototypeMethod=require_get_built_in_prototype_method();var wellKnownSymbol=require_well_known_symbol();var AsyncFromSyncIterator=require_async_from_sync_iterator();var toArray=require_async_iterator_iteration().toArray;var ASYNC_ITERATOR=wellKnownSymbol("asyncIterator");var arrayIterator=uncurryThis(getBuiltInPrototypeMethod("Array","values"));var arrayIteratorNext=uncurryThis(arrayIterator([]).next);var safeArrayIterator=function(){return new SafeArrayIterator(this);};var SafeArrayIterator=function(O){this.iterator=arrayIterator(O);};SafeArrayIterator.prototype.next=function(){return arrayIteratorNext(this.iterator);};module2.exports=function fromAsync(asyncItems){var C=this;var argumentsLength=arguments.length;var mapfn=argumentsLength>1?arguments[1]:void 0;var thisArg=argumentsLength>2?arguments[2]:void 0;return new(getBuiltIn("Promise"))(function(resolve){var O=toObject(asyncItems);if(mapfn!==void 0)mapfn=bind(mapfn,thisArg);var usingAsyncIterator=getMethod(O,ASYNC_ITERATOR);var usingSyncIterator=usingAsyncIterator?void 0:getIteratorMethod(O)||safeArrayIterator;var A=isConstructor(C)?new C():[];var iterator=usingAsyncIterator?getAsyncIterator(O,usingAsyncIterator):new AsyncFromSyncIterator(getIteratorDirect(getIterator(O,usingSyncIterator)));resolve(toArray(iterator,mapfn,A));});};}});// node_modules/core-js/modules/es.array.from-async.js
var require_es_array_from_async=__commonJS({"node_modules/core-js/modules/es.array.from-async.js"(){"use strict";var $=require_export();var fromAsync=require_array_from_async();var fails=require_fails();var nativeFromAsync=Array.fromAsync;var INCORRECT_CONSTRUCTURING=!nativeFromAsync||fails(function(){var counter=0;nativeFromAsync.call(function(){counter++;return[];},{length:0});return counter!==1;});$({target:"Array",stat:true,forced:INCORRECT_CONSTRUCTURING},{fromAsync});}});// node_modules/core-js/modules/es.async-disposable-stack.constructor.js
var require_es_async_disposable_stack_constructor=__commonJS({"node_modules/core-js/modules/es.async-disposable-stack.constructor.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var getBuiltIn=require_get_built_in();var aCallable=require_a_callable();var anInstance=require_an_instance();var defineBuiltIn=require_define_built_in();var defineBuiltIns=require_define_built_ins();var defineBuiltInAccessor=require_define_built_in_accessor();var wellKnownSymbol=require_well_known_symbol();var InternalStateModule=require_internal_state();var addDisposableResource=require_add_disposable_resource();var V8_VERSION=require_environment_v8_version();var Promise2=getBuiltIn("Promise");var SuppressedError2=getBuiltIn("SuppressedError");var $ReferenceError=ReferenceError;var ASYNC_DISPOSE=wellKnownSymbol("asyncDispose");var TO_STRING_TAG=wellKnownSymbol("toStringTag");var ASYNC_DISPOSABLE_STACK="AsyncDisposableStack";var setInternalState=InternalStateModule.set;var getAsyncDisposableStackInternalState=InternalStateModule.getterFor(ASYNC_DISPOSABLE_STACK);var HINT="async-dispose";var DISPOSED="disposed";var PENDING="pending";var getPendingAsyncDisposableStackInternalState=function(stack){var internalState=getAsyncDisposableStackInternalState(stack);if(internalState.state===DISPOSED)throw new $ReferenceError(ASYNC_DISPOSABLE_STACK+" already disposed");return internalState;};var $AsyncDisposableStack=function AsyncDisposableStack(){setInternalState(anInstance(this,AsyncDisposableStackPrototype),{type:ASYNC_DISPOSABLE_STACK,state:PENDING,stack:[]});if(!DESCRIPTORS)this.disposed=false;};var AsyncDisposableStackPrototype=$AsyncDisposableStack.prototype;defineBuiltIns(AsyncDisposableStackPrototype,{disposeAsync:function disposeAsync(){var asyncDisposableStack=this;return new Promise2(function(resolve,reject){var internalState=getAsyncDisposableStackInternalState(asyncDisposableStack);if(internalState.state===DISPOSED)return resolve(void 0);internalState.state=DISPOSED;if(!DESCRIPTORS)asyncDisposableStack.disposed=true;var stack=internalState.stack;var i=stack.length;var thrown=false;var suppressed;var handleError=function(result){if(thrown){suppressed=new SuppressedError2(result,suppressed);}else{thrown=true;suppressed=result;}loop();};var loop=function(){if(i){var disposeMethod=stack[--i];stack[i]=null;try{Promise2.resolve(disposeMethod()).then(loop,handleError);}catch(error){handleError(error);}}else{internalState.stack=null;thrown?reject(suppressed):resolve(void 0);}};loop();});},use:function use(value){addDisposableResource(getPendingAsyncDisposableStackInternalState(this),value,HINT);return value;},adopt:function adopt(value,onDispose){var internalState=getPendingAsyncDisposableStackInternalState(this);aCallable(onDispose);addDisposableResource(internalState,void 0,HINT,function(){return onDispose(value);});return value;},defer:function defer(onDispose){var internalState=getPendingAsyncDisposableStackInternalState(this);aCallable(onDispose);addDisposableResource(internalState,void 0,HINT,onDispose);},move:function move(){var internalState=getPendingAsyncDisposableStackInternalState(this);var newAsyncDisposableStack=new $AsyncDisposableStack();getAsyncDisposableStackInternalState(newAsyncDisposableStack).stack=internalState.stack;internalState.stack=[];internalState.state=DISPOSED;if(!DESCRIPTORS)this.disposed=true;return newAsyncDisposableStack;}});if(DESCRIPTORS)defineBuiltInAccessor(AsyncDisposableStackPrototype,"disposed",{configurable:true,get:function disposed(){return getAsyncDisposableStackInternalState(this).state===DISPOSED;}});defineBuiltIn(AsyncDisposableStackPrototype,ASYNC_DISPOSE,AsyncDisposableStackPrototype.disposeAsync,{name:"disposeAsync"});defineBuiltIn(AsyncDisposableStackPrototype,TO_STRING_TAG,ASYNC_DISPOSABLE_STACK,{nonWritable:true});var SYNC_DISPOSE_RETURNING_PROMISE_RESOLUTION_BUG=V8_VERSION&&V8_VERSION<136;$({global:true,constructor:true,forced:SYNC_DISPOSE_RETURNING_PROMISE_RESOLUTION_BUG},{AsyncDisposableStack:$AsyncDisposableStack});}});// node_modules/core-js/modules/es.async-iterator.async-dispose.js
var require_es_async_iterator_async_dispose=__commonJS({"node_modules/core-js/modules/es.async-iterator.async-dispose.js"(){"use strict";var call=require_function_call();var defineBuiltIn=require_define_built_in();var getBuiltIn=require_get_built_in();var getMethod=require_get_method();var hasOwn=require_has_own_property();var wellKnownSymbol=require_well_known_symbol();var AsyncIteratorPrototype=require_async_iterator_prototype();var ASYNC_DISPOSE=wellKnownSymbol("asyncDispose");var Promise2=getBuiltIn("Promise");if(!hasOwn(AsyncIteratorPrototype,ASYNC_DISPOSE)){defineBuiltIn(AsyncIteratorPrototype,ASYNC_DISPOSE,function(){var O=this;return new Promise2(function(resolve,reject){var $return=getMethod(O,"return");if($return){Promise2.resolve(call($return,O)).then(function(){resolve(void 0);},reject);}else resolve(void 0);});});}}});// node_modules/core-js/modules/es.reflect.apply.js
var require_es_reflect_apply=__commonJS({"node_modules/core-js/modules/es.reflect.apply.js"(){"use strict";var $=require_export();var functionApply=require_function_apply();var aCallable=require_a_callable();var anObject=require_an_object();var fails=require_fails();var OPTIONAL_ARGUMENTS_LIST=!fails(function(){Reflect.apply(function(){});});$({target:"Reflect",stat:true,forced:OPTIONAL_ARGUMENTS_LIST},{apply:function apply(target,thisArgument,argumentsList){return functionApply(aCallable(target),thisArgument,anObject(argumentsList));}});}});// node_modules/core-js/modules/es.reflect.construct.js
var require_es_reflect_construct=__commonJS({"node_modules/core-js/modules/es.reflect.construct.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var apply=require_function_apply();var bind=require_function_bind();var aConstructor=require_a_constructor();var anObject=require_an_object();var isObject=require_is_object();var create=require_object_create();var fails=require_fails();var nativeConstruct=getBuiltIn("Reflect","construct");var ObjectPrototype=Object.prototype;var push=[].push;var NEW_TARGET_BUG=fails(function(){function F(){}return!(nativeConstruct(function(){},[],F)instanceof F);});var ARGS_BUG=!fails(function(){nativeConstruct(function(){});});var FORCED=NEW_TARGET_BUG||ARGS_BUG;$({target:"Reflect",stat:true,forced:FORCED,sham:FORCED},{construct:function construct(Target,args){aConstructor(Target);anObject(args);var newTarget=arguments.length<3?Target:aConstructor(arguments[2]);if(ARGS_BUG&&!NEW_TARGET_BUG)return nativeConstruct(Target,args,newTarget);if(Target===newTarget){switch(args.length){case 0:return new Target();case 1:return new Target(args[0]);case 2:return new Target(args[0],args[1]);case 3:return new Target(args[0],args[1],args[2]);case 4:return new Target(args[0],args[1],args[2],args[3]);}var $args=[null];apply(push,$args,args);return new(apply(bind,Target,$args))();}var proto=newTarget.prototype;var instance=create(isObject(proto)?proto:ObjectPrototype);var result=apply(Target,instance,args);return isObject(result)?result:instance;}});}});// node_modules/core-js/modules/es.reflect.define-property.js
var require_es_reflect_define_property=__commonJS({"node_modules/core-js/modules/es.reflect.define-property.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var anObject=require_an_object();var toPropertyKey=require_to_property_key();var definePropertyModule=require_object_define_property();var fails=require_fails();var ERROR_INSTEAD_OF_FALSE=fails(function(){Reflect.defineProperty(definePropertyModule.f({},1,{value:1}),1,{value:2});});$({target:"Reflect",stat:true,forced:ERROR_INSTEAD_OF_FALSE,sham:!DESCRIPTORS},{defineProperty:function defineProperty(target,propertyKey,attributes){anObject(target);var key=toPropertyKey(propertyKey);anObject(attributes);try{definePropertyModule.f(target,key,attributes);return true;}catch(error){return false;}}});}});// node_modules/core-js/modules/es.reflect.delete-property.js
var require_es_reflect_delete_property=__commonJS({"node_modules/core-js/modules/es.reflect.delete-property.js"(){"use strict";var $=require_export();var anObject=require_an_object();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;$({target:"Reflect",stat:true},{deleteProperty:function deleteProperty(target,propertyKey){var descriptor=getOwnPropertyDescriptor(anObject(target),propertyKey);return descriptor&&!descriptor.configurable?false:delete target[propertyKey];}});}});// node_modules/core-js/internals/is-data-descriptor.js
var require_is_data_descriptor=__commonJS({"node_modules/core-js/internals/is-data-descriptor.js"(exports,module2){"use strict";var hasOwn=require_has_own_property();module2.exports=function(descriptor){return descriptor!==void 0&&(hasOwn(descriptor,"value")||hasOwn(descriptor,"writable"));};}});// node_modules/core-js/modules/es.reflect.get.js
var require_es_reflect_get=__commonJS({"node_modules/core-js/modules/es.reflect.get.js"(){"use strict";var $=require_export();var call=require_function_call();var isObject=require_is_object();var anObject=require_an_object();var isDataDescriptor=require_is_data_descriptor();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var getPrototypeOf=require_object_get_prototype_of();function get(target,propertyKey){var receiver=arguments.length<3?target:arguments[2];var descriptor,prototype;if(anObject(target)===receiver)return target[propertyKey];descriptor=getOwnPropertyDescriptorModule.f(target,propertyKey);if(descriptor)return isDataDescriptor(descriptor)?descriptor.value:descriptor.get===void 0?void 0:call(descriptor.get,receiver);if(isObject(prototype=getPrototypeOf(target)))return get(prototype,propertyKey,receiver);}$({target:"Reflect",stat:true},{get});}});// node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js
var require_es_reflect_get_own_property_descriptor=__commonJS({"node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js"(){"use strict";var $=require_export();var DESCRIPTORS=require_descriptors();var anObject=require_an_object();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();$({target:"Reflect",stat:true,sham:!DESCRIPTORS},{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(target,propertyKey){return getOwnPropertyDescriptorModule.f(anObject(target),propertyKey);}});}});// node_modules/core-js/modules/es.reflect.get-prototype-of.js
var require_es_reflect_get_prototype_of=__commonJS({"node_modules/core-js/modules/es.reflect.get-prototype-of.js"(){"use strict";var $=require_export();var anObject=require_an_object();var objectGetPrototypeOf=require_object_get_prototype_of();var CORRECT_PROTOTYPE_GETTER=require_correct_prototype_getter();$({target:"Reflect",stat:true,sham:!CORRECT_PROTOTYPE_GETTER},{getPrototypeOf:function getPrototypeOf(target){return objectGetPrototypeOf(anObject(target));}});}});// node_modules/core-js/modules/es.reflect.has.js
var require_es_reflect_has=__commonJS({"node_modules/core-js/modules/es.reflect.has.js"(){"use strict";var $=require_export();$({target:"Reflect",stat:true},{has:function has(target,propertyKey){return propertyKey in target;}});}});// node_modules/core-js/modules/es.reflect.is-extensible.js
var require_es_reflect_is_extensible=__commonJS({"node_modules/core-js/modules/es.reflect.is-extensible.js"(){"use strict";var $=require_export();var anObject=require_an_object();var $isExtensible=require_object_is_extensible();$({target:"Reflect",stat:true},{isExtensible:function isExtensible(target){anObject(target);return $isExtensible(target);}});}});// node_modules/core-js/modules/es.reflect.own-keys.js
var require_es_reflect_own_keys=__commonJS({"node_modules/core-js/modules/es.reflect.own-keys.js"(){"use strict";var $=require_export();var ownKeys=require_own_keys();$({target:"Reflect",stat:true},{ownKeys});}});// node_modules/core-js/modules/es.reflect.prevent-extensions.js
var require_es_reflect_prevent_extensions=__commonJS({"node_modules/core-js/modules/es.reflect.prevent-extensions.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var anObject=require_an_object();var FREEZING=require_freezing();$({target:"Reflect",stat:true,sham:!FREEZING},{preventExtensions:function preventExtensions(target){anObject(target);try{var objectPreventExtensions=getBuiltIn("Object","preventExtensions");if(objectPreventExtensions)objectPreventExtensions(target);return true;}catch(error){return false;}}});}});// node_modules/core-js/modules/es.reflect.set.js
var require_es_reflect_set=__commonJS({"node_modules/core-js/modules/es.reflect.set.js"(){"use strict";var $=require_export();var call=require_function_call();var anObject=require_an_object();var isObject=require_is_object();var isDataDescriptor=require_is_data_descriptor();var fails=require_fails();var definePropertyModule=require_object_define_property();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var getPrototypeOf=require_object_get_prototype_of();var createPropertyDescriptor=require_create_property_descriptor();function set(target,propertyKey,V){var receiver=arguments.length<4?target:arguments[3];var ownDescriptor=getOwnPropertyDescriptorModule.f(anObject(target),propertyKey);var existingDescriptor,prototype,setter;if(!ownDescriptor){if(isObject(prototype=getPrototypeOf(target))){return set(prototype,propertyKey,V,receiver);}ownDescriptor=createPropertyDescriptor(0);}if(isDataDescriptor(ownDescriptor)){if(ownDescriptor.writable===false||!isObject(receiver))return false;if(existingDescriptor=getOwnPropertyDescriptorModule.f(receiver,propertyKey)){if(existingDescriptor.get||existingDescriptor.set||existingDescriptor.writable===false)return false;existingDescriptor.value=V;definePropertyModule.f(receiver,propertyKey,existingDescriptor);}else definePropertyModule.f(receiver,propertyKey,createPropertyDescriptor(0,V));}else{setter=ownDescriptor.set;if(setter===void 0)return false;call(setter,receiver,V);}return true;}var MS_EDGE_BUG=fails(function(){var Constructor=function(){};var object=definePropertyModule.f(new Constructor(),"a",{configurable:true});return Reflect.set(Constructor.prototype,"a",1,object)!==false;});$({target:"Reflect",stat:true,forced:MS_EDGE_BUG},{set});}});// node_modules/core-js/modules/es.reflect.set-prototype-of.js
var require_es_reflect_set_prototype_of=__commonJS({"node_modules/core-js/modules/es.reflect.set-prototype-of.js"(){"use strict";var $=require_export();var anObject=require_an_object();var aPossiblePrototype=require_a_possible_prototype();var objectSetPrototypeOf=require_object_set_prototype_of();if(objectSetPrototypeOf)$({target:"Reflect",stat:true},{setPrototypeOf:function setPrototypeOf(target,proto){anObject(target);aPossiblePrototype(proto);try{objectSetPrototypeOf(target,proto);return true;}catch(error){return false;}}});}});// node_modules/core-js/modules/es.reflect.to-string-tag.js
var require_es_reflect_to_string_tag=__commonJS({"node_modules/core-js/modules/es.reflect.to-string-tag.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var setToStringTag=require_set_to_string_tag();$({global:true},{Reflect:{}});setToStringTag(globalThis2.Reflect,"Reflect",true);}});// node_modules/core-js/internals/is-regexp.js
var require_is_regexp=__commonJS({"node_modules/core-js/internals/is-regexp.js"(exports,module2){"use strict";var isObject=require_is_object();var classof=require_classof_raw();var wellKnownSymbol=require_well_known_symbol();var MATCH=wellKnownSymbol("match");module2.exports=function(it){var isRegExp;return isObject(it)&&((isRegExp=it[MATCH])!==void 0?!!isRegExp:classof(it)==="RegExp");};}});// node_modules/core-js/internals/regexp-flags-detection.js
var require_regexp_flags_detection=__commonJS({"node_modules/core-js/internals/regexp-flags-detection.js"(exports,module2){"use strict";var globalThis2=require_global_this();var fails=require_fails();var RegExp2=globalThis2.RegExp;var FLAGS_GETTER_IS_CORRECT=!fails(function(){var INDICES_SUPPORT=true;try{RegExp2(".","d");}catch(error){INDICES_SUPPORT=false;}var O={};var calls="";var expected=INDICES_SUPPORT?"dgimsy":"gimsy";var addGetter=function(key2,chr){Object.defineProperty(O,key2,{get:function(){calls+=chr;return true;}});};var pairs={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};if(INDICES_SUPPORT)pairs.hasIndices="d";for(var key in pairs)addGetter(key,pairs[key]);var result=Object.getOwnPropertyDescriptor(RegExp2.prototype,"flags").get.call(O);return result!==expected||calls!==expected;});module2.exports={correct:FLAGS_GETTER_IS_CORRECT};}});// node_modules/core-js/internals/regexp-flags.js
var require_regexp_flags=__commonJS({"node_modules/core-js/internals/regexp-flags.js"(exports,module2){"use strict";var anObject=require_an_object();module2.exports=function(){var that=anObject(this);var result="";if(that.hasIndices)result+="d";if(that.global)result+="g";if(that.ignoreCase)result+="i";if(that.multiline)result+="m";if(that.dotAll)result+="s";if(that.unicode)result+="u";if(that.unicodeSets)result+="v";if(that.sticky)result+="y";return result;};}});// node_modules/core-js/internals/regexp-get-flags.js
var require_regexp_get_flags=__commonJS({"node_modules/core-js/internals/regexp-get-flags.js"(exports,module2){"use strict";var call=require_function_call();var hasOwn=require_has_own_property();var isPrototypeOf=require_object_is_prototype_of();var regExpFlagsDetection=require_regexp_flags_detection();var regExpFlagsGetterImplementation=require_regexp_flags();var RegExpPrototype=RegExp.prototype;module2.exports=regExpFlagsDetection.correct?function(it){return it.flags;}:function(it){return!regExpFlagsDetection.correct&&isPrototypeOf(RegExpPrototype,it)&&!hasOwn(it,"flags")?call(regExpFlagsGetterImplementation,it):it.flags;};}});// node_modules/core-js/internals/regexp-sticky-helpers.js
var require_regexp_sticky_helpers=__commonJS({"node_modules/core-js/internals/regexp-sticky-helpers.js"(exports,module2){"use strict";var fails=require_fails();var globalThis2=require_global_this();var $RegExp=globalThis2.RegExp;var UNSUPPORTED_Y=fails(function(){var re=$RegExp("a","y");re.lastIndex=2;return re.exec("abcd")!==null;});var MISSED_STICKY=UNSUPPORTED_Y||fails(function(){return!$RegExp("a","y").sticky;});var BROKEN_CARET=UNSUPPORTED_Y||fails(function(){var re=$RegExp("^r","gy");re.lastIndex=2;return re.exec("str")!==null;});module2.exports={BROKEN_CARET,MISSED_STICKY,UNSUPPORTED_Y};}});// node_modules/core-js/internals/regexp-unsupported-dot-all.js
var require_regexp_unsupported_dot_all=__commonJS({"node_modules/core-js/internals/regexp-unsupported-dot-all.js"(exports,module2){"use strict";var fails=require_fails();var globalThis2=require_global_this();var $RegExp=globalThis2.RegExp;module2.exports=fails(function(){var re=$RegExp(".","s");return!(re.dotAll&&re.test("\n")&&re.flags==="s");});}});// node_modules/core-js/internals/regexp-unsupported-ncg.js
var require_regexp_unsupported_ncg=__commonJS({"node_modules/core-js/internals/regexp-unsupported-ncg.js"(exports,module2){"use strict";var fails=require_fails();var globalThis2=require_global_this();var $RegExp=globalThis2.RegExp;module2.exports=fails(function(){var re=$RegExp("(?<a>b)","g");return re.exec("b").groups.a!=="b"||"b".replace(re,"$<a>c")!=="bc";});}});// node_modules/core-js/modules/es.regexp.constructor.js
var require_es_regexp_constructor=__commonJS({"node_modules/core-js/modules/es.regexp.constructor.js"(){"use strict";var DESCRIPTORS=require_descriptors();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var isForced=require_is_forced();var inheritIfRequired=require_inherit_if_required();var createNonEnumerableProperty=require_create_non_enumerable_property();var create=require_object_create();var getOwnPropertyNames=require_object_get_own_property_names().f;var isPrototypeOf=require_object_is_prototype_of();var isRegExp=require_is_regexp();var toString=require_to_string();var getRegExpFlags=require_regexp_get_flags();var stickyHelpers=require_regexp_sticky_helpers();var proxyAccessor=require_proxy_accessor();var defineBuiltIn=require_define_built_in();var fails=require_fails();var hasOwn=require_has_own_property();var enforceInternalState=require_internal_state().enforce;var setSpecies=require_set_species();var wellKnownSymbol=require_well_known_symbol();var UNSUPPORTED_DOT_ALL=require_regexp_unsupported_dot_all();var UNSUPPORTED_NCG=require_regexp_unsupported_ncg();var MATCH=wellKnownSymbol("match");var NativeRegExp=globalThis2.RegExp;var RegExpPrototype=NativeRegExp.prototype;var SyntaxError2=globalThis2.SyntaxError;var exec=uncurryThis(RegExpPrototype.exec);var charAt=uncurryThis("".charAt);var replace=uncurryThis("".replace);var stringIndexOf=uncurryThis("".indexOf);var stringSlice=uncurryThis("".slice);var IS_NCG=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;var re1=/a/g;var re2=/a/g;var CORRECT_NEW=new NativeRegExp(re1)!==re1;var MISSED_STICKY=stickyHelpers.MISSED_STICKY;var UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y;var BASE_FORCED=DESCRIPTORS&&(!CORRECT_NEW||MISSED_STICKY||UNSUPPORTED_DOT_ALL||UNSUPPORTED_NCG||fails(function(){re2[MATCH]=false;return NativeRegExp(re1)!==re1||NativeRegExp(re2)===re2||String(NativeRegExp(re1,"i"))!=="/a/i";}));var handleDotAll=function(string){var length=string.length;var index2=0;var result="";var brackets=false;var chr;for(;index2<=length;index2++){chr=charAt(string,index2);if(chr==="\\"){result+=chr+charAt(string,++index2);continue;}if(!brackets&&chr==="."){result+="[\\s\\S]";}else{if(chr==="["){brackets=true;}else if(chr==="]"){brackets=false;}result+=chr;}}return result;};var handleNCG=function(string){var length=string.length;var index2=0;var result="";var named=[];var names=create(null);var brackets=false;var ncg=false;var groupid=0;var groupname="";var chr;for(;index2<=length;index2++){chr=charAt(string,index2);if(chr==="\\"){chr+=charAt(string,++index2);}else if(chr==="]"){brackets=false;}else if(!brackets)switch(true){case chr==="[":brackets=true;break;case chr==="(":result+=chr;if(stringSlice(string,index2+1,index2+3)==="?:"){continue;}if(exec(IS_NCG,stringSlice(string,index2+1))){index2+=2;ncg=true;}groupid++;continue;case chr===">"&&ncg:if(groupname===""||hasOwn(names,groupname)){throw new SyntaxError2("Invalid capture group name");}names[groupname]=true;named[named.length]=[groupname,groupid];ncg=false;groupname="";continue;}if(ncg)groupname+=chr;else result+=chr;}return[result,named];};if(isForced("RegExp",BASE_FORCED)){RegExpWrapper=function RegExp2(pattern,flags){var thisIsRegExp=isPrototypeOf(RegExpPrototype,this);var patternIsRegExp=isRegExp(pattern);var flagsAreUndefined=flags===void 0;var groups=[];var rawPattern=pattern;var rawFlags,dotAll,sticky,handled,result,state;if(!thisIsRegExp&&patternIsRegExp&&flagsAreUndefined&&pattern.constructor===RegExpWrapper){return pattern;}if(patternIsRegExp||isPrototypeOf(RegExpPrototype,pattern)){pattern=pattern.source;if(flagsAreUndefined)flags=getRegExpFlags(rawPattern);}pattern=pattern===void 0?"":toString(pattern);flags=flags===void 0?"":toString(flags);rawPattern=pattern;if(UNSUPPORTED_DOT_ALL&&"dotAll"in re1){dotAll=!!flags&&stringIndexOf(flags,"s")>-1;if(dotAll)flags=replace(flags,/s/g,"");}rawFlags=flags;if(MISSED_STICKY&&"sticky"in re1){sticky=!!flags&&stringIndexOf(flags,"y")>-1;if(sticky&&UNSUPPORTED_Y)flags=replace(flags,/y/g,"");}if(UNSUPPORTED_NCG){handled=handleNCG(pattern);pattern=handled[0];groups=handled[1];}result=inheritIfRequired(NativeRegExp(pattern,flags),thisIsRegExp?this:RegExpPrototype,RegExpWrapper);if(dotAll||sticky||groups.length){state=enforceInternalState(result);if(dotAll){state.dotAll=true;state.raw=RegExpWrapper(handleDotAll(pattern),rawFlags);}if(sticky)state.sticky=true;if(groups.length)state.groups=groups;}if(pattern!==rawPattern)try{createNonEnumerableProperty(result,"source",rawPattern===""?"(?:)":rawPattern);}catch(error){}return result;};for(keys=getOwnPropertyNames(NativeRegExp),index=0;keys.length>index;){proxyAccessor(RegExpWrapper,NativeRegExp,keys[index++]);}RegExpPrototype.constructor=RegExpWrapper;RegExpWrapper.prototype=RegExpPrototype;defineBuiltIn(globalThis2,"RegExp",RegExpWrapper,{constructor:true});}var RegExpWrapper;var keys;var index;setSpecies("RegExp");}});// node_modules/core-js/internals/a-string.js
var require_a_string=__commonJS({"node_modules/core-js/internals/a-string.js"(exports,module2){"use strict";var $TypeError=TypeError;module2.exports=function(argument){if(typeof argument=="string")return argument;throw new $TypeError("Argument is not a string");};}});// node_modules/core-js/modules/es.regexp.escape.js
var require_es_regexp_escape=__commonJS({"node_modules/core-js/modules/es.regexp.escape.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var aString=require_a_string();var hasOwn=require_has_own_property();var padStart=require_string_pad().start;var WHITESPACES=require_whitespaces();var $Array=Array;var $escape=RegExp.escape;var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var numberToString=uncurryThis(1.1.toString);var join=uncurryThis([].join);var FIRST_DIGIT_OR_ASCII=/^[0-9a-z]/i;var SYNTAX_SOLIDUS=/^[$()*+./?[\\\]^{|}]/;var OTHER_PUNCTUATORS_AND_WHITESPACES=RegExp("^[!\"#%&',\\-:;<=>@`~"+WHITESPACES+"]");var exec=uncurryThis(FIRST_DIGIT_OR_ASCII.exec);var ControlEscape={"	":"t","\n":"n","\v":"v","\f":"f","\r":"r"};var escapeChar=function(chr){var hex=numberToString(charCodeAt(chr,0),16);return hex.length<3?"\\x"+padStart(hex,2,"0"):"\\u"+padStart(hex,4,"0");};var FORCED=!$escape||$escape("ab")!=="\\x61b";$({target:"RegExp",stat:true,forced:FORCED},{escape:function escape(S){aString(S);var length=S.length;var result=$Array(length);for(var i=0;i<length;i++){var chr=charAt(S,i);if(i===0&&exec(FIRST_DIGIT_OR_ASCII,chr)){result[i]=escapeChar(chr);}else if(hasOwn(ControlEscape,chr)){result[i]="\\"+ControlEscape[chr];}else if(exec(SYNTAX_SOLIDUS,chr)){result[i]="\\"+chr;}else if(exec(OTHER_PUNCTUATORS_AND_WHITESPACES,chr)){result[i]=escapeChar(chr);}else{var charCode=charCodeAt(chr,0);if((charCode&63488)!==55296)result[i]=chr;else if(charCode>=56320||i+1>=length||(charCodeAt(S,i+1)&64512)!==56320)result[i]=escapeChar(chr);else{result[i]=chr;result[++i]=charAt(S,i);}}}return join(result,"");}});}});// node_modules/core-js/modules/es.regexp.dot-all.js
var require_es_regexp_dot_all=__commonJS({"node_modules/core-js/modules/es.regexp.dot-all.js"(){"use strict";var DESCRIPTORS=require_descriptors();var UNSUPPORTED_DOT_ALL=require_regexp_unsupported_dot_all();var classof=require_classof_raw();var defineBuiltInAccessor=require_define_built_in_accessor();var getInternalState=require_internal_state().get;var RegExpPrototype=RegExp.prototype;var $TypeError=TypeError;if(DESCRIPTORS&&UNSUPPORTED_DOT_ALL){defineBuiltInAccessor(RegExpPrototype,"dotAll",{configurable:true,get:function dotAll(){if(this===RegExpPrototype)return;if(classof(this)==="RegExp"){return!!getInternalState(this).dotAll;}throw new $TypeError("Incompatible receiver, RegExp required");}});}}});// node_modules/core-js/internals/regexp-exec.js
var require_regexp_exec=__commonJS({"node_modules/core-js/internals/regexp-exec.js"(exports,module2){"use strict";var call=require_function_call();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var regexpFlags=require_regexp_flags();var stickyHelpers=require_regexp_sticky_helpers();var shared=require_shared();var create=require_object_create();var getInternalState=require_internal_state().get;var UNSUPPORTED_DOT_ALL=require_regexp_unsupported_dot_all();var UNSUPPORTED_NCG=require_regexp_unsupported_ncg();var nativeReplace=shared("native-string-replace",String.prototype.replace);var nativeExec=RegExp.prototype.exec;var patchedExec=nativeExec;var charAt=uncurryThis("".charAt);var indexOf=uncurryThis("".indexOf);var replace=uncurryThis("".replace);var stringSlice=uncurryThis("".slice);var UPDATES_LAST_INDEX_WRONG=function(){var re1=/a/;var re2=/b*/g;call(nativeExec,re1,"a");call(nativeExec,re2,"a");return re1.lastIndex!==0||re2.lastIndex!==0;}();var UNSUPPORTED_Y=stickyHelpers.BROKEN_CARET;var NPCG_INCLUDED=/()??/.exec("")[1]!==void 0;var PATCH=UPDATES_LAST_INDEX_WRONG||NPCG_INCLUDED||UNSUPPORTED_Y||UNSUPPORTED_DOT_ALL||UNSUPPORTED_NCG;if(PATCH){patchedExec=function exec(string){var re=this;var state=getInternalState(re);var str=toString(string);var raw=state.raw;var result,reCopy,lastIndex,match,i,object,group;if(raw){raw.lastIndex=re.lastIndex;result=call(patchedExec,raw,str);re.lastIndex=raw.lastIndex;return result;}var groups=state.groups;var sticky=UNSUPPORTED_Y&&re.sticky;var flags=call(regexpFlags,re);var source=re.source;var charsAdded=0;var strCopy=str;if(sticky){flags=replace(flags,"y","");if(indexOf(flags,"g")===-1){flags+="g";}strCopy=stringSlice(str,re.lastIndex);if(re.lastIndex>0&&(!re.multiline||re.multiline&&charAt(str,re.lastIndex-1)!=="\n")){source="(?: "+source+")";strCopy=" "+strCopy;charsAdded++;}reCopy=new RegExp("^(?:"+source+")",flags);}if(NPCG_INCLUDED){reCopy=new RegExp("^"+source+"$(?!\\s)",flags);}if(UPDATES_LAST_INDEX_WRONG)lastIndex=re.lastIndex;match=call(nativeExec,sticky?reCopy:re,strCopy);if(sticky){if(match){match.input=stringSlice(match.input,charsAdded);match[0]=stringSlice(match[0],charsAdded);match.index=re.lastIndex;re.lastIndex+=match[0].length;}else re.lastIndex=0;}else if(UPDATES_LAST_INDEX_WRONG&&match){re.lastIndex=re.global?match.index+match[0].length:lastIndex;}if(NPCG_INCLUDED&&match&&match.length>1){call(nativeReplace,match[0],reCopy,function(){for(i=1;i<arguments.length-2;i++){if(arguments[i]===void 0)match[i]=void 0;}});}if(match&&groups){match.groups=object=create(null);for(i=0;i<groups.length;i++){group=groups[i];object[group[0]]=match[group[1]];}}return match;};}module2.exports=patchedExec;}});// node_modules/core-js/modules/es.regexp.exec.js
var require_es_regexp_exec=__commonJS({"node_modules/core-js/modules/es.regexp.exec.js"(){"use strict";var $=require_export();var exec=require_regexp_exec();$({target:"RegExp",proto:true,forced:/./.exec!==exec},{exec});}});// node_modules/core-js/modules/es.regexp.flags.js
var require_es_regexp_flags=__commonJS({"node_modules/core-js/modules/es.regexp.flags.js"(){"use strict";var DESCRIPTORS=require_descriptors();var defineBuiltInAccessor=require_define_built_in_accessor();var regExpFlagsDetection=require_regexp_flags_detection();var regExpFlagsGetterImplementation=require_regexp_flags();if(DESCRIPTORS&&!regExpFlagsDetection.correct){defineBuiltInAccessor(RegExp.prototype,"flags",{configurable:true,get:regExpFlagsGetterImplementation});regExpFlagsDetection.correct=true;}}});// node_modules/core-js/modules/es.regexp.sticky.js
var require_es_regexp_sticky=__commonJS({"node_modules/core-js/modules/es.regexp.sticky.js"(){"use strict";var DESCRIPTORS=require_descriptors();var MISSED_STICKY=require_regexp_sticky_helpers().MISSED_STICKY;var classof=require_classof_raw();var defineBuiltInAccessor=require_define_built_in_accessor();var getInternalState=require_internal_state().get;var RegExpPrototype=RegExp.prototype;var $TypeError=TypeError;if(DESCRIPTORS&&MISSED_STICKY){defineBuiltInAccessor(RegExpPrototype,"sticky",{configurable:true,get:function sticky(){if(this===RegExpPrototype)return;if(classof(this)==="RegExp"){return!!getInternalState(this).sticky;}throw new $TypeError("Incompatible receiver, RegExp required");}});}}});// node_modules/core-js/modules/es.regexp.test.js
var require_es_regexp_test=__commonJS({"node_modules/core-js/modules/es.regexp.test.js"(){"use strict";require_es_regexp_exec();var $=require_export();var call=require_function_call();var isCallable=require_is_callable();var anObject=require_an_object();var toString=require_to_string();var DELEGATES_TO_EXEC=function(){var execCalled=false;var re=/[ac]/;re.exec=function(){execCalled=true;return /./.exec.apply(this,arguments);};return re.test("abc")===true&&execCalled;}();var nativeTest=/./.test;$({target:"RegExp",proto:true,forced:!DELEGATES_TO_EXEC},{test:function(S){var R=anObject(this);var string=toString(S);var exec=R.exec;if(!isCallable(exec))return call(nativeTest,R,string);var result=call(exec,R,string);if(result===null)return false;anObject(result);return true;}});}});// node_modules/core-js/modules/es.regexp.to-string.js
var require_es_regexp_to_string=__commonJS({"node_modules/core-js/modules/es.regexp.to-string.js"(){"use strict";var PROPER_FUNCTION_NAME=require_function_name().PROPER;var defineBuiltIn=require_define_built_in();var anObject=require_an_object();var $toString=require_to_string();var fails=require_fails();var getRegExpFlags=require_regexp_get_flags();var TO_STRING="toString";var RegExpPrototype=RegExp.prototype;var nativeToString=RegExpPrototype[TO_STRING];var NOT_GENERIC=fails(function(){return nativeToString.call({source:"a",flags:"b"})!=="/a/b";});var INCORRECT_NAME=PROPER_FUNCTION_NAME&&nativeToString.name!==TO_STRING;if(NOT_GENERIC||INCORRECT_NAME){defineBuiltIn(RegExpPrototype,TO_STRING,function toString(){var R=anObject(this);var pattern=$toString(R.source);var flags=$toString(getRegExpFlags(R));return"/"+pattern+"/"+flags;},{unsafe:true});}}});// node_modules/core-js/modules/es.set.constructor.js
var require_es_set_constructor=__commonJS({"node_modules/core-js/modules/es.set.constructor.js"(){"use strict";var collection=require_collection();var collectionStrong=require_collection_strong();collection("Set",function(init){return function Set2(){return init(this,arguments.length?arguments[0]:void 0);};},collectionStrong);}});// node_modules/core-js/modules/es.set.js
var require_es_set=__commonJS({"node_modules/core-js/modules/es.set.js"(){"use strict";require_es_set_constructor();}});// node_modules/core-js/internals/set-helpers.js
var require_set_helpers=__commonJS({"node_modules/core-js/internals/set-helpers.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var SetPrototype=Set.prototype;module2.exports={// eslint-disable-next-line es/no-set -- safe
Set,add:uncurryThis(SetPrototype.add),has:uncurryThis(SetPrototype.has),remove:uncurryThis(SetPrototype["delete"]),proto:SetPrototype};}});// node_modules/core-js/internals/a-set.js
var require_a_set=__commonJS({"node_modules/core-js/internals/a-set.js"(exports,module2){"use strict";var has=require_set_helpers().has;module2.exports=function(it){has(it);return it;};}});// node_modules/core-js/internals/iterate-simple.js
var require_iterate_simple=__commonJS({"node_modules/core-js/internals/iterate-simple.js"(exports,module2){"use strict";var call=require_function_call();module2.exports=function(record,fn,ITERATOR_INSTEAD_OF_RECORD){var iterator=ITERATOR_INSTEAD_OF_RECORD?record:record.iterator;var next=record.next;var step,result;while(!(step=call(next,iterator)).done){result=fn(step.value);if(result!==void 0)return result;}};}});// node_modules/core-js/internals/set-iterate.js
var require_set_iterate=__commonJS({"node_modules/core-js/internals/set-iterate.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var iterateSimple=require_iterate_simple();var SetHelpers=require_set_helpers();var Set2=SetHelpers.Set;var SetPrototype=SetHelpers.proto;var forEach=uncurryThis(SetPrototype.forEach);var keys=uncurryThis(SetPrototype.keys);var next=keys(new Set2()).next;module2.exports=function(set,fn,interruptible){return interruptible?iterateSimple({iterator:keys(set),next},fn):forEach(set,fn);};}});// node_modules/core-js/internals/set-clone.js
var require_set_clone=__commonJS({"node_modules/core-js/internals/set-clone.js"(exports,module2){"use strict";var SetHelpers=require_set_helpers();var iterate=require_set_iterate();var Set2=SetHelpers.Set;var add=SetHelpers.add;module2.exports=function(set){var result=new Set2();iterate(set,function(it){add(result,it);});return result;};}});// node_modules/core-js/internals/set-size.js
var require_set_size=__commonJS({"node_modules/core-js/internals/set-size.js"(exports,module2){"use strict";var uncurryThisAccessor=require_function_uncurry_this_accessor();var SetHelpers=require_set_helpers();module2.exports=uncurryThisAccessor(SetHelpers.proto,"size","get")||function(set){return set.size;};}});// node_modules/core-js/internals/get-set-record.js
var require_get_set_record=__commonJS({"node_modules/core-js/internals/get-set-record.js"(exports,module2){"use strict";var aCallable=require_a_callable();var anObject=require_an_object();var call=require_function_call();var toIntegerOrInfinity=require_to_integer_or_infinity();var getIteratorDirect=require_get_iterator_direct();var INVALID_SIZE="Invalid size";var $RangeError=RangeError;var $TypeError=TypeError;var max=Math.max;var SetRecord=function(set,intSize){this.set=set;this.size=max(intSize,0);this.has=aCallable(set.has);this.keys=aCallable(set.keys);};SetRecord.prototype={getIterator:function(){return getIteratorDirect(anObject(call(this.keys,this.set)));},includes:function(it){return call(this.has,this.set,it);}};module2.exports=function(obj){anObject(obj);var numSize=+obj.size;if(numSize!==numSize)throw new $TypeError(INVALID_SIZE);var intSize=toIntegerOrInfinity(numSize);if(intSize<0)throw new $RangeError(INVALID_SIZE);return new SetRecord(obj,intSize);};}});// node_modules/core-js/internals/set-difference.js
var require_set_difference=__commonJS({"node_modules/core-js/internals/set-difference.js"(exports,module2){"use strict";var aSet=require_a_set();var SetHelpers=require_set_helpers();var clone=require_set_clone();var size=require_set_size();var getSetRecord=require_get_set_record();var iterateSet=require_set_iterate();var iterateSimple=require_iterate_simple();var has=SetHelpers.has;var remove=SetHelpers.remove;module2.exports=function difference(other){var O=aSet(this);var otherRec=getSetRecord(other);var result=clone(O);if(size(O)<=otherRec.size)iterateSet(O,function(e){if(otherRec.includes(e))remove(result,e);});else iterateSimple(otherRec.getIterator(),function(e){if(has(result,e))remove(result,e);});return result;};}});// node_modules/core-js/internals/set-method-accept-set-like.js
var require_set_method_accept_set_like=__commonJS({"node_modules/core-js/internals/set-method-accept-set-like.js"(exports,module2){"use strict";var getBuiltIn=require_get_built_in();var createSetLike=function(size){return{size,has:function(){return false;},keys:function(){return{next:function(){return{done:true};}};}};};var createSetLikeWithInfinitySize=function(size){return{size,has:function(){return true;},keys:function(){throw new Error("e");}};};module2.exports=function(name,callback){var Set2=getBuiltIn("Set");try{new Set2()[name](createSetLike(0));try{new Set2()[name](createSetLike(-1));return false;}catch(error2){if(!callback)return true;try{new Set2()[name](createSetLikeWithInfinitySize(-Infinity));return false;}catch(error){var set=new Set2();set.add(1);set.add(2);return callback(set[name](createSetLikeWithInfinitySize(Infinity)));}}}catch(error){return false;}};}});// node_modules/core-js/modules/es.set.difference.v2.js
var require_es_set_difference_v2=__commonJS({"node_modules/core-js/modules/es.set.difference.v2.js"(){"use strict";var $=require_export();var difference=require_set_difference();var fails=require_fails();var setMethodAcceptSetLike=require_set_method_accept_set_like();var SET_LIKE_INCORRECT_BEHAVIOR=!setMethodAcceptSetLike("difference",function(result){return result.size===0;});var FORCED=SET_LIKE_INCORRECT_BEHAVIOR||fails(function(){var setLike={size:1,has:function(){return true;},keys:function(){var index=0;return{next:function(){var done=index++>1;if(baseSet.has(1))baseSet.clear();return{done,value:2};}};}};var baseSet=/* @__PURE__ */new Set([1,2,3,4]);return baseSet.difference(setLike).size!==3;});$({target:"Set",proto:true,real:true,forced:FORCED},{difference});}});// node_modules/core-js/internals/set-intersection.js
var require_set_intersection=__commonJS({"node_modules/core-js/internals/set-intersection.js"(exports,module2){"use strict";var aSet=require_a_set();var SetHelpers=require_set_helpers();var size=require_set_size();var getSetRecord=require_get_set_record();var iterateSet=require_set_iterate();var iterateSimple=require_iterate_simple();var Set2=SetHelpers.Set;var add=SetHelpers.add;var has=SetHelpers.has;module2.exports=function intersection(other){var O=aSet(this);var otherRec=getSetRecord(other);var result=new Set2();if(size(O)>otherRec.size){iterateSimple(otherRec.getIterator(),function(e){if(has(O,e))add(result,e);});}else{iterateSet(O,function(e){if(otherRec.includes(e))add(result,e);});}return result;};}});// node_modules/core-js/modules/es.set.intersection.v2.js
var require_es_set_intersection_v2=__commonJS({"node_modules/core-js/modules/es.set.intersection.v2.js"(){"use strict";var $=require_export();var fails=require_fails();var intersection=require_set_intersection();var setMethodAcceptSetLike=require_set_method_accept_set_like();var INCORRECT=!setMethodAcceptSetLike("intersection",function(result){return result.size===2&&result.has(1)&&result.has(2);})||fails(function(){return String(Array.from((/* @__PURE__ */new Set([1,2,3])).intersection(/* @__PURE__ */new Set([3,2]))))!=="3,2";});$({target:"Set",proto:true,real:true,forced:INCORRECT},{intersection});}});// node_modules/core-js/internals/set-is-disjoint-from.js
var require_set_is_disjoint_from=__commonJS({"node_modules/core-js/internals/set-is-disjoint-from.js"(exports,module2){"use strict";var aSet=require_a_set();var has=require_set_helpers().has;var size=require_set_size();var getSetRecord=require_get_set_record();var iterateSet=require_set_iterate();var iterateSimple=require_iterate_simple();var iteratorClose=require_iterator_close();module2.exports=function isDisjointFrom(other){var O=aSet(this);var otherRec=getSetRecord(other);if(size(O)<=otherRec.size)return iterateSet(O,function(e){if(otherRec.includes(e))return false;},true)!==false;var iterator=otherRec.getIterator();return iterateSimple(iterator,function(e){if(has(O,e))return iteratorClose(iterator,"normal",false);})!==false;};}});// node_modules/core-js/modules/es.set.is-disjoint-from.v2.js
var require_es_set_is_disjoint_from_v2=__commonJS({"node_modules/core-js/modules/es.set.is-disjoint-from.v2.js"(){"use strict";var $=require_export();var isDisjointFrom=require_set_is_disjoint_from();var setMethodAcceptSetLike=require_set_method_accept_set_like();var INCORRECT=!setMethodAcceptSetLike("isDisjointFrom",function(result){return!result;});$({target:"Set",proto:true,real:true,forced:INCORRECT},{isDisjointFrom});}});// node_modules/core-js/internals/set-is-subset-of.js
var require_set_is_subset_of=__commonJS({"node_modules/core-js/internals/set-is-subset-of.js"(exports,module2){"use strict";var aSet=require_a_set();var size=require_set_size();var iterate=require_set_iterate();var getSetRecord=require_get_set_record();module2.exports=function isSubsetOf(other){var O=aSet(this);var otherRec=getSetRecord(other);if(size(O)>otherRec.size)return false;return iterate(O,function(e){if(!otherRec.includes(e))return false;},true)!==false;};}});// node_modules/core-js/modules/es.set.is-subset-of.v2.js
var require_es_set_is_subset_of_v2=__commonJS({"node_modules/core-js/modules/es.set.is-subset-of.v2.js"(){"use strict";var $=require_export();var isSubsetOf=require_set_is_subset_of();var setMethodAcceptSetLike=require_set_method_accept_set_like();var INCORRECT=!setMethodAcceptSetLike("isSubsetOf",function(result){return result;});$({target:"Set",proto:true,real:true,forced:INCORRECT},{isSubsetOf});}});// node_modules/core-js/internals/set-is-superset-of.js
var require_set_is_superset_of=__commonJS({"node_modules/core-js/internals/set-is-superset-of.js"(exports,module2){"use strict";var aSet=require_a_set();var has=require_set_helpers().has;var size=require_set_size();var getSetRecord=require_get_set_record();var iterateSimple=require_iterate_simple();var iteratorClose=require_iterator_close();module2.exports=function isSupersetOf(other){var O=aSet(this);var otherRec=getSetRecord(other);if(size(O)<otherRec.size)return false;var iterator=otherRec.getIterator();return iterateSimple(iterator,function(e){if(!has(O,e))return iteratorClose(iterator,"normal",false);})!==false;};}});// node_modules/core-js/modules/es.set.is-superset-of.v2.js
var require_es_set_is_superset_of_v2=__commonJS({"node_modules/core-js/modules/es.set.is-superset-of.v2.js"(){"use strict";var $=require_export();var isSupersetOf=require_set_is_superset_of();var setMethodAcceptSetLike=require_set_method_accept_set_like();var INCORRECT=!setMethodAcceptSetLike("isSupersetOf",function(result){return!result;});$({target:"Set",proto:true,real:true,forced:INCORRECT},{isSupersetOf});}});// node_modules/core-js/internals/set-symmetric-difference.js
var require_set_symmetric_difference=__commonJS({"node_modules/core-js/internals/set-symmetric-difference.js"(exports,module2){"use strict";var aSet=require_a_set();var SetHelpers=require_set_helpers();var clone=require_set_clone();var getSetRecord=require_get_set_record();var iterateSimple=require_iterate_simple();var add=SetHelpers.add;var has=SetHelpers.has;var remove=SetHelpers.remove;module2.exports=function symmetricDifference(other){var O=aSet(this);var keysIter=getSetRecord(other).getIterator();var result=clone(O);iterateSimple(keysIter,function(e){if(has(O,e))remove(result,e);else add(result,e);});return result;};}});// node_modules/core-js/internals/set-method-get-keys-before-cloning-detection.js
var require_set_method_get_keys_before_cloning_detection=__commonJS({"node_modules/core-js/internals/set-method-get-keys-before-cloning-detection.js"(exports,module2){"use strict";module2.exports=function(METHOD_NAME){try{var baseSet=/* @__PURE__ */new Set();var setLike={size:0,has:function(){return true;},keys:function(){return Object.defineProperty({},"next",{get:function(){baseSet.clear();baseSet.add(4);return function(){return{done:true};};}});}};var result=baseSet[METHOD_NAME](setLike);return result.size===1&&result.values().next().value===4;}catch(error){return false;}};}});// node_modules/core-js/modules/es.set.symmetric-difference.v2.js
var require_es_set_symmetric_difference_v2=__commonJS({"node_modules/core-js/modules/es.set.symmetric-difference.v2.js"(){"use strict";var $=require_export();var symmetricDifference=require_set_symmetric_difference();var setMethodGetKeysBeforeCloning=require_set_method_get_keys_before_cloning_detection();var setMethodAcceptSetLike=require_set_method_accept_set_like();var FORCED=!setMethodAcceptSetLike("symmetricDifference")||!setMethodGetKeysBeforeCloning("symmetricDifference");$({target:"Set",proto:true,real:true,forced:FORCED},{symmetricDifference});}});// node_modules/core-js/internals/set-union.js
var require_set_union=__commonJS({"node_modules/core-js/internals/set-union.js"(exports,module2){"use strict";var aSet=require_a_set();var add=require_set_helpers().add;var clone=require_set_clone();var getSetRecord=require_get_set_record();var iterateSimple=require_iterate_simple();module2.exports=function union(other){var O=aSet(this);var keysIter=getSetRecord(other).getIterator();var result=clone(O);iterateSimple(keysIter,function(it){add(result,it);});return result;};}});// node_modules/core-js/modules/es.set.union.v2.js
var require_es_set_union_v2=__commonJS({"node_modules/core-js/modules/es.set.union.v2.js"(){"use strict";var $=require_export();var union=require_set_union();var setMethodGetKeysBeforeCloning=require_set_method_get_keys_before_cloning_detection();var setMethodAcceptSetLike=require_set_method_accept_set_like();var FORCED=!setMethodAcceptSetLike("union")||!setMethodGetKeysBeforeCloning("union");$({target:"Set",proto:true,real:true,forced:FORCED},{union});}});// node_modules/core-js/modules/es.string.at-alternative.js
var require_es_string_at_alternative=__commonJS({"node_modules/core-js/modules/es.string.at-alternative.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toIntegerOrInfinity=require_to_integer_or_infinity();var toString=require_to_string();var fails=require_fails();var charAt=uncurryThis("".charAt);var FORCED=fails(function(){return"\u{20BB7}".at(-2)!=="\uD842";});$({target:"String",proto:true,forced:FORCED},{at:function at(index){var S=toString(requireObjectCoercible(this));var len=S.length;var relativeIndex=toIntegerOrInfinity(index);var k=relativeIndex>=0?relativeIndex:len+relativeIndex;return k<0||k>=len?void 0:charAt(S,k);}});}});// node_modules/core-js/internals/string-multibyte.js
var require_string_multibyte=__commonJS({"node_modules/core-js/internals/string-multibyte.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var toIntegerOrInfinity=require_to_integer_or_infinity();var toString=require_to_string();var requireObjectCoercible=require_require_object_coercible();var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var stringSlice=uncurryThis("".slice);var createMethod=function(CONVERT_TO_STRING){return function($this,pos){var S=toString(requireObjectCoercible($this));var position=toIntegerOrInfinity(pos);var size=S.length;var first,second;if(position<0||position>=size)return CONVERT_TO_STRING?"":void 0;first=charCodeAt(S,position);return first<55296||first>56319||position+1===size||(second=charCodeAt(S,position+1))<56320||second>57343?CONVERT_TO_STRING?charAt(S,position):first:CONVERT_TO_STRING?stringSlice(S,position,position+2):(first-55296<<10)+(second-56320)+65536;};};module2.exports={// `String.prototype.codePointAt` method
// https://tc39.es/ecma262/#sec-string.prototype.codepointat
codeAt:createMethod(false),// `String.prototype.at` method
// https://github.com/mathiasbynens/String.prototype.at
charAt:createMethod(true)};}});// node_modules/core-js/modules/es.string.code-point-at.js
var require_es_string_code_point_at=__commonJS({"node_modules/core-js/modules/es.string.code-point-at.js"(){"use strict";var $=require_export();var codeAt=require_string_multibyte().codeAt;$({target:"String",proto:true},{codePointAt:function codePointAt(pos){return codeAt(this,pos);}});}});// node_modules/core-js/internals/not-a-regexp.js
var require_not_a_regexp=__commonJS({"node_modules/core-js/internals/not-a-regexp.js"(exports,module2){"use strict";var isRegExp=require_is_regexp();var $TypeError=TypeError;module2.exports=function(it){if(isRegExp(it)){throw new $TypeError("The method doesn't accept regular expressions");}return it;};}});// node_modules/core-js/internals/correct-is-regexp-logic.js
var require_correct_is_regexp_logic=__commonJS({"node_modules/core-js/internals/correct-is-regexp-logic.js"(exports,module2){"use strict";var wellKnownSymbol=require_well_known_symbol();var MATCH=wellKnownSymbol("match");module2.exports=function(METHOD_NAME){var regexp=/./;try{"/./"[METHOD_NAME](regexp);}catch(error1){try{regexp[MATCH]=false;return"/./"[METHOD_NAME](regexp);}catch(error2){}}return false;};}});// node_modules/core-js/modules/es.string.ends-with.js
var require_es_string_ends_with=__commonJS({"node_modules/core-js/modules/es.string.ends-with.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this_clause();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var toLength=require_to_length();var toString=require_to_string();var notARegExp=require_not_a_regexp();var requireObjectCoercible=require_require_object_coercible();var correctIsRegExpLogic=require_correct_is_regexp_logic();var IS_PURE=require_is_pure();var slice=uncurryThis("".slice);var min=Math.min;var CORRECT_IS_REGEXP_LOGIC=correctIsRegExpLogic("endsWith");var MDN_POLYFILL_BUG=!IS_PURE&&!CORRECT_IS_REGEXP_LOGIC&&!!function(){var descriptor=getOwnPropertyDescriptor(String.prototype,"endsWith");return descriptor&&!descriptor.writable;}();$({target:"String",proto:true,forced:!MDN_POLYFILL_BUG&&!CORRECT_IS_REGEXP_LOGIC},{endsWith:function endsWith(searchString){var that=toString(requireObjectCoercible(this));notARegExp(searchString);var endPosition=arguments.length>1?arguments[1]:void 0;var len=that.length;var end=endPosition===void 0?len:min(toLength(endPosition),len);var search=toString(searchString);return slice(that,end-search.length,end)===search;}});}});// node_modules/core-js/modules/es.string.from-code-point.js
var require_es_string_from_code_point=__commonJS({"node_modules/core-js/modules/es.string.from-code-point.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toAbsoluteIndex=require_to_absolute_index();var $RangeError=RangeError;var fromCharCode=String.fromCharCode;var $fromCodePoint=String.fromCodePoint;var join=uncurryThis([].join);var INCORRECT_LENGTH=!!$fromCodePoint&&$fromCodePoint.length!==1;$({target:"String",stat:true,arity:1,forced:INCORRECT_LENGTH},{// eslint-disable-next-line no-unused-vars -- required for `.length`
fromCodePoint:function fromCodePoint(x){var elements=[];var length=arguments.length;var i=0;var code;while(length>i){code=+arguments[i++];if(toAbsoluteIndex(code,1114111)!==code)throw new $RangeError(code+" is not a valid code point");elements[i]=code<65536?fromCharCode(code):fromCharCode(((code-=65536)>>10)+55296,code%1024+56320);}return join(elements,"");}});}});// node_modules/core-js/modules/es.string.includes.js
var require_es_string_includes=__commonJS({"node_modules/core-js/modules/es.string.includes.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var notARegExp=require_not_a_regexp();var requireObjectCoercible=require_require_object_coercible();var toString=require_to_string();var correctIsRegExpLogic=require_correct_is_regexp_logic();var stringIndexOf=uncurryThis("".indexOf);$({target:"String",proto:true,forced:!correctIsRegExpLogic("includes")},{includes:function includes(searchString){return!!~stringIndexOf(toString(requireObjectCoercible(this)),toString(notARegExp(searchString)),arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.string.is-well-formed.js
var require_es_string_is_well_formed=__commonJS({"node_modules/core-js/modules/es.string.is-well-formed.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toString=require_to_string();var charCodeAt=uncurryThis("".charCodeAt);$({target:"String",proto:true},{isWellFormed:function isWellFormed(){var S=toString(requireObjectCoercible(this));var length=S.length;for(var i=0;i<length;i++){var charCode=charCodeAt(S,i);if((charCode&63488)!==55296)continue;if(charCode>=56320||++i>=length||(charCodeAt(S,i)&64512)!==56320)return false;}return true;}});}});// node_modules/core-js/modules/es.string.iterator.js
var require_es_string_iterator=__commonJS({"node_modules/core-js/modules/es.string.iterator.js"(){"use strict";var charAt=require_string_multibyte().charAt;var toString=require_to_string();var InternalStateModule=require_internal_state();var defineIterator=require_iterator_define();var createIterResultObject=require_create_iter_result_object();var STRING_ITERATOR="String Iterator";var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(STRING_ITERATOR);defineIterator(String,"String",function(iterated){setInternalState(this,{type:STRING_ITERATOR,string:toString(iterated),index:0});},function next(){var state=getInternalState(this);var string=state.string;var index=state.index;var point;if(index>=string.length)return createIterResultObject(void 0,true);point=charAt(string,index);state.index+=point.length;return createIterResultObject(point,false);});}});// node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js
var require_fix_regexp_well_known_symbol_logic=__commonJS({"node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js"(exports,module2){"use strict";require_es_regexp_exec();var call=require_function_call();var defineBuiltIn=require_define_built_in();var regexpExec=require_regexp_exec();var fails=require_fails();var wellKnownSymbol=require_well_known_symbol();var createNonEnumerableProperty=require_create_non_enumerable_property();var SPECIES=wellKnownSymbol("species");var RegExpPrototype=RegExp.prototype;module2.exports=function(KEY,exec,FORCED,SHAM){var SYMBOL=wellKnownSymbol(KEY);var DELEGATES_TO_SYMBOL=!fails(function(){var O={};O[SYMBOL]=function(){return 7;};return""[KEY](O)!==7;});var DELEGATES_TO_EXEC=DELEGATES_TO_SYMBOL&&!fails(function(){var execCalled=false;var re=/a/;if(KEY==="split"){re={};re.constructor={};re.constructor[SPECIES]=function(){return re;};re.flags="";re[SYMBOL]=/./[SYMBOL];}re.exec=function(){execCalled=true;return null;};re[SYMBOL]("");return!execCalled;});if(!DELEGATES_TO_SYMBOL||!DELEGATES_TO_EXEC||FORCED){var nativeRegExpMethod=/./[SYMBOL];var methods=exec(SYMBOL,""[KEY],function(nativeMethod,regexp,str,arg2,forceStringMethod){var $exec=regexp.exec;if($exec===regexpExec||$exec===RegExpPrototype.exec){if(DELEGATES_TO_SYMBOL&&!forceStringMethod){return{done:true,value:call(nativeRegExpMethod,regexp,str,arg2)};}return{done:true,value:call(nativeMethod,str,regexp,arg2)};}return{done:false};});defineBuiltIn(String.prototype,KEY,methods[0]);defineBuiltIn(RegExpPrototype,SYMBOL,methods[1]);}if(SHAM)createNonEnumerableProperty(RegExpPrototype[SYMBOL],"sham",true);};}});// node_modules/core-js/internals/advance-string-index.js
var require_advance_string_index=__commonJS({"node_modules/core-js/internals/advance-string-index.js"(exports,module2){"use strict";var charAt=require_string_multibyte().charAt;module2.exports=function(S,index,unicode){return index+(unicode?charAt(S,index).length:1);};}});// node_modules/core-js/internals/regexp-exec-abstract.js
var require_regexp_exec_abstract=__commonJS({"node_modules/core-js/internals/regexp-exec-abstract.js"(exports,module2){"use strict";var call=require_function_call();var anObject=require_an_object();var isCallable=require_is_callable();var classof=require_classof_raw();var regexpExec=require_regexp_exec();var $TypeError=TypeError;module2.exports=function(R,S){var exec=R.exec;if(isCallable(exec)){var result=call(exec,R,S);if(result!==null)anObject(result);return result;}if(classof(R)==="RegExp")return call(regexpExec,R,S);throw new $TypeError("RegExp#exec called on incompatible receiver");};}});// node_modules/core-js/modules/es.string.match.js
var require_es_string_match=__commonJS({"node_modules/core-js/modules/es.string.match.js"(){"use strict";var call=require_function_call();var uncurryThis=require_function_uncurry_this();var fixRegExpWellKnownSymbolLogic=require_fix_regexp_well_known_symbol_logic();var anObject=require_an_object();var isObject=require_is_object();var toLength=require_to_length();var toString=require_to_string();var requireObjectCoercible=require_require_object_coercible();var getMethod=require_get_method();var advanceStringIndex=require_advance_string_index();var getRegExpFlags=require_regexp_get_flags();var regExpExec=require_regexp_exec_abstract();var stringIndexOf=uncurryThis("".indexOf);fixRegExpWellKnownSymbolLogic("match",function(MATCH,nativeMatch,maybeCallNative){return[// `String.prototype.match` method
// https://tc39.es/ecma262/#sec-string.prototype.match
function match(regexp){var O=requireObjectCoercible(this);var matcher=isObject(regexp)?getMethod(regexp,MATCH):void 0;return matcher?call(matcher,regexp,O):new RegExp(regexp)[MATCH](toString(O));},// `RegExp.prototype[@@match]` method
// https://tc39.es/ecma262/#sec-regexp.prototype-@@match
function(string){var rx=anObject(this);var S=toString(string);var res=maybeCallNative(nativeMatch,rx,S);if(res.done)return res.value;var flags=toString(getRegExpFlags(rx));if(stringIndexOf(flags,"g")===-1)return regExpExec(rx,S);var fullUnicode=stringIndexOf(flags,"u")!==-1;rx.lastIndex=0;var A=[];var n=0;var result;while((result=regExpExec(rx,S))!==null){var matchStr=toString(result[0]);A[n]=matchStr;if(matchStr==="")rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode);n++;}return n===0?null:A;}];});}});// node_modules/core-js/modules/es.string.match-all.js
var require_es_string_match_all=__commonJS({"node_modules/core-js/modules/es.string.match-all.js"(){"use strict";var $=require_export();var call=require_function_call();var uncurryThis=require_function_uncurry_this_clause();var createIteratorConstructor=require_iterator_create_constructor();var createIterResultObject=require_create_iter_result_object();var requireObjectCoercible=require_require_object_coercible();var toLength=require_to_length();var toString=require_to_string();var anObject=require_an_object();var isObject=require_is_object();var classof=require_classof_raw();var isRegExp=require_is_regexp();var getRegExpFlags=require_regexp_get_flags();var getMethod=require_get_method();var defineBuiltIn=require_define_built_in();var fails=require_fails();var wellKnownSymbol=require_well_known_symbol();var speciesConstructor=require_species_constructor();var advanceStringIndex=require_advance_string_index();var regExpExec=require_regexp_exec_abstract();var InternalStateModule=require_internal_state();var IS_PURE=require_is_pure();var MATCH_ALL=wellKnownSymbol("matchAll");var REGEXP_STRING="RegExp String";var REGEXP_STRING_ITERATOR=REGEXP_STRING+" Iterator";var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);var RegExpPrototype=RegExp.prototype;var $TypeError=TypeError;var stringIndexOf=uncurryThis("".indexOf);var nativeMatchAll=uncurryThis("".matchAll);var WORKS_WITH_NON_GLOBAL_REGEX=!!nativeMatchAll&&!fails(function(){nativeMatchAll("a",/./);});var $RegExpStringIterator=createIteratorConstructor(function RegExpStringIterator(regexp,string,$global,fullUnicode){setInternalState(this,{type:REGEXP_STRING_ITERATOR,regexp,string,global:$global,unicode:fullUnicode,done:false});},REGEXP_STRING,function next(){var state=getInternalState(this);if(state.done)return createIterResultObject(void 0,true);var R=state.regexp;var S=state.string;var match=regExpExec(R,S);if(match===null){state.done=true;return createIterResultObject(void 0,true);}if(state.global){if(toString(match[0])==="")R.lastIndex=advanceStringIndex(S,toLength(R.lastIndex),state.unicode);return createIterResultObject(match,false);}state.done=true;return createIterResultObject(match,false);});var $matchAll=function(string){var R=anObject(this);var S=toString(string);var C=speciesConstructor(R,RegExp);var flags=toString(getRegExpFlags(R));var matcher,$global,fullUnicode;matcher=new C(C===RegExp?R.source:R,flags);$global=!!~stringIndexOf(flags,"g");fullUnicode=!!~stringIndexOf(flags,"u");matcher.lastIndex=toLength(R.lastIndex);return new $RegExpStringIterator(matcher,S,$global,fullUnicode);};$({target:"String",proto:true,forced:WORKS_WITH_NON_GLOBAL_REGEX},{matchAll:function matchAll(regexp){var O=requireObjectCoercible(this);var flags,S,matcher,rx;if(isObject(regexp)){if(isRegExp(regexp)){flags=toString(requireObjectCoercible(getRegExpFlags(regexp)));if(!~stringIndexOf(flags,"g"))throw new $TypeError("`.matchAll` does not allow non-global regexes");}if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp);matcher=getMethod(regexp,MATCH_ALL);if(matcher===void 0&&IS_PURE&&classof(regexp)==="RegExp")matcher=$matchAll;if(matcher)return call(matcher,regexp,O);}else if(WORKS_WITH_NON_GLOBAL_REGEX)return nativeMatchAll(O,regexp);S=toString(O);rx=new RegExp(regexp,"g");return IS_PURE?call($matchAll,rx,S):rx[MATCH_ALL](S);}});IS_PURE||MATCH_ALL in RegExpPrototype||defineBuiltIn(RegExpPrototype,MATCH_ALL,$matchAll);}});// node_modules/core-js/internals/string-pad-webkit-bug.js
var require_string_pad_webkit_bug=__commonJS({"node_modules/core-js/internals/string-pad-webkit-bug.js"(exports,module2){"use strict";var userAgent=require_environment_user_agent();module2.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);}});// node_modules/core-js/modules/es.string.pad-end.js
var require_es_string_pad_end=__commonJS({"node_modules/core-js/modules/es.string.pad-end.js"(){"use strict";var $=require_export();var $padEnd=require_string_pad().end;var WEBKIT_BUG=require_string_pad_webkit_bug();$({target:"String",proto:true,forced:WEBKIT_BUG},{padEnd:function padEnd(maxLength){return $padEnd(this,maxLength,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.string.pad-start.js
var require_es_string_pad_start=__commonJS({"node_modules/core-js/modules/es.string.pad-start.js"(){"use strict";var $=require_export();var $padStart=require_string_pad().start;var WEBKIT_BUG=require_string_pad_webkit_bug();$({target:"String",proto:true,forced:WEBKIT_BUG},{padStart:function padStart(maxLength){return $padStart(this,maxLength,arguments.length>1?arguments[1]:void 0);}});}});// node_modules/core-js/modules/es.string.raw.js
var require_es_string_raw=__commonJS({"node_modules/core-js/modules/es.string.raw.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toIndexedObject=require_to_indexed_object();var toObject=require_to_object();var toString=require_to_string();var lengthOfArrayLike=require_length_of_array_like();var push=uncurryThis([].push);var join=uncurryThis([].join);$({target:"String",stat:true},{raw:function raw(template){var rawTemplate=toIndexedObject(toObject(template).raw);var literalSegments=lengthOfArrayLike(rawTemplate);if(!literalSegments)return"";var argumentsLength=arguments.length;var elements=[];var i=0;while(true){push(elements,toString(rawTemplate[i++]));if(i===literalSegments)return join(elements,"");if(i<argumentsLength)push(elements,toString(arguments[i]));}}});}});// node_modules/core-js/modules/es.string.repeat.js
var require_es_string_repeat=__commonJS({"node_modules/core-js/modules/es.string.repeat.js"(){"use strict";var $=require_export();var repeat=require_string_repeat();$({target:"String",proto:true},{repeat});}});// node_modules/core-js/internals/get-substitution.js
var require_get_substitution=__commonJS({"node_modules/core-js/internals/get-substitution.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var toObject=require_to_object();var floor=Math.floor;var charAt=uncurryThis("".charAt);var replace=uncurryThis("".replace);var stringSlice=uncurryThis("".slice);var SUBSTITUTION_SYMBOLS=/\$([$&'`]|\d{1,2}|<[^>]*>)/g;var SUBSTITUTION_SYMBOLS_NO_NAMED=/\$([$&'`]|\d{1,2})/g;module2.exports=function(matched,str,position,captures,namedCaptures,replacement){var tailPos=position+matched.length;var m=captures.length;var symbols=SUBSTITUTION_SYMBOLS_NO_NAMED;if(namedCaptures!==void 0){namedCaptures=toObject(namedCaptures);symbols=SUBSTITUTION_SYMBOLS;}return replace(replacement,symbols,function(match,ch){var capture;switch(charAt(ch,0)){case"$":return"$";case"&":return matched;case"`":return stringSlice(str,0,position);case"'":return stringSlice(str,tailPos);case"<":capture=namedCaptures[stringSlice(ch,1,-1)];break;default:var n=+ch;if(n===0)return match;if(n>m){var f=floor(n/10);if(f===0)return match;if(f<=m)return captures[f-1]===void 0?charAt(ch,1):captures[f-1]+charAt(ch,1);return match;}capture=captures[n-1];}return capture===void 0?"":capture;});};}});// node_modules/core-js/modules/es.string.replace.js
var require_es_string_replace=__commonJS({"node_modules/core-js/modules/es.string.replace.js"(){"use strict";var apply=require_function_apply();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var fixRegExpWellKnownSymbolLogic=require_fix_regexp_well_known_symbol_logic();var fails=require_fails();var anObject=require_an_object();var isCallable=require_is_callable();var isObject=require_is_object();var toIntegerOrInfinity=require_to_integer_or_infinity();var toLength=require_to_length();var toString=require_to_string();var requireObjectCoercible=require_require_object_coercible();var advanceStringIndex=require_advance_string_index();var getMethod=require_get_method();var getSubstitution=require_get_substitution();var getRegExpFlags=require_regexp_get_flags();var regExpExec=require_regexp_exec_abstract();var wellKnownSymbol=require_well_known_symbol();var REPLACE=wellKnownSymbol("replace");var max=Math.max;var min=Math.min;var concat=uncurryThis([].concat);var push=uncurryThis([].push);var stringIndexOf=uncurryThis("".indexOf);var stringSlice=uncurryThis("".slice);var maybeToString=function(it){return it===void 0?it:String(it);};var REPLACE_KEEPS_$0=function(){return"a".replace(/./,"$0")==="$0";}();var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE=function(){if(/./[REPLACE]){return /./[REPLACE]("a","$0")==="";}return false;}();var REPLACE_SUPPORTS_NAMED_GROUPS=!fails(function(){var re=/./;re.exec=function(){var result=[];result.groups={a:"7"};return result;};return"".replace(re,"$<a>")!=="7";});fixRegExpWellKnownSymbolLogic("replace",function(_,nativeReplace,maybeCallNative){var UNSAFE_SUBSTITUTE=REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE?"$":"$0";return[// `String.prototype.replace` method
// https://tc39.es/ecma262/#sec-string.prototype.replace
function replace(searchValue,replaceValue){var O=requireObjectCoercible(this);var replacer=isObject(searchValue)?getMethod(searchValue,REPLACE):void 0;return replacer?call(replacer,searchValue,O,replaceValue):call(nativeReplace,toString(O),searchValue,replaceValue);},// `RegExp.prototype[@@replace]` method
// https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
function(string,replaceValue){var rx=anObject(this);var S=toString(string);if(typeof replaceValue=="string"&&stringIndexOf(replaceValue,UNSAFE_SUBSTITUTE)===-1&&stringIndexOf(replaceValue,"$<")===-1){var res=maybeCallNative(nativeReplace,rx,S,replaceValue);if(res.done)return res.value;}var functionalReplace=isCallable(replaceValue);if(!functionalReplace)replaceValue=toString(replaceValue);var flags=toString(getRegExpFlags(rx));var global2=stringIndexOf(flags,"g")!==-1;var fullUnicode;if(global2){fullUnicode=stringIndexOf(flags,"u")!==-1;rx.lastIndex=0;}var results=[];var result;while(true){result=regExpExec(rx,S);if(result===null)break;push(results,result);if(!global2)break;var matchStr=toString(result[0]);if(matchStr==="")rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode);}var accumulatedResult="";var nextSourcePosition=0;for(var i=0;i<results.length;i++){result=results[i];var matched=toString(result[0]);var position=max(min(toIntegerOrInfinity(result.index),S.length),0);var captures=[];var replacement;for(var j=1;j<result.length;j++)push(captures,maybeToString(result[j]));var namedCaptures=result.groups;if(functionalReplace){var replacerArgs=concat([matched],captures,position,S);if(namedCaptures!==void 0)push(replacerArgs,namedCaptures);replacement=toString(apply(replaceValue,void 0,replacerArgs));}else{replacement=getSubstitution(matched,S,position,captures,namedCaptures,replaceValue);}if(position>=nextSourcePosition){accumulatedResult+=stringSlice(S,nextSourcePosition,position)+replacement;nextSourcePosition=position+matched.length;}}return accumulatedResult+stringSlice(S,nextSourcePosition);}];},!REPLACE_SUPPORTS_NAMED_GROUPS||!REPLACE_KEEPS_$0||REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);}});// node_modules/core-js/modules/es.string.replace-all.js
var require_es_string_replace_all=__commonJS({"node_modules/core-js/modules/es.string.replace-all.js"(){"use strict";var $=require_export();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var isCallable=require_is_callable();var isObject=require_is_object();var isRegExp=require_is_regexp();var toString=require_to_string();var getMethod=require_get_method();var getRegExpFlags=require_regexp_get_flags();var getSubstitution=require_get_substitution();var wellKnownSymbol=require_well_known_symbol();var IS_PURE=require_is_pure();var REPLACE=wellKnownSymbol("replace");var $TypeError=TypeError;var indexOf=uncurryThis("".indexOf);var replace=uncurryThis("".replace);var stringSlice=uncurryThis("".slice);var max=Math.max;$({target:"String",proto:true},{replaceAll:function replaceAll(searchValue,replaceValue){var O=requireObjectCoercible(this);var IS_REG_EXP,flags,replacer,string,searchString,functionalReplace,searchLength,advanceBy,position,replacement;var endOfLastMatch=0;var result="";if(isObject(searchValue)){IS_REG_EXP=isRegExp(searchValue);if(IS_REG_EXP){flags=toString(requireObjectCoercible(getRegExpFlags(searchValue)));if(!~indexOf(flags,"g"))throw new $TypeError("`.replaceAll` does not allow non-global regexes");}replacer=getMethod(searchValue,REPLACE);if(replacer)return call(replacer,searchValue,O,replaceValue);if(IS_PURE&&IS_REG_EXP)return replace(toString(O),searchValue,replaceValue);}string=toString(O);searchString=toString(searchValue);functionalReplace=isCallable(replaceValue);if(!functionalReplace)replaceValue=toString(replaceValue);searchLength=searchString.length;advanceBy=max(1,searchLength);position=indexOf(string,searchString);while(position!==-1){replacement=functionalReplace?toString(replaceValue(searchString,position,string)):getSubstitution(searchString,string,position,[],void 0,replaceValue);result+=stringSlice(string,endOfLastMatch,position)+replacement;endOfLastMatch=position+searchLength;position=position+advanceBy>string.length?-1:indexOf(string,searchString,position+advanceBy);}if(endOfLastMatch<string.length){result+=stringSlice(string,endOfLastMatch);}return result;}});}});// node_modules/core-js/modules/es.string.search.js
var require_es_string_search=__commonJS({"node_modules/core-js/modules/es.string.search.js"(){"use strict";var call=require_function_call();var fixRegExpWellKnownSymbolLogic=require_fix_regexp_well_known_symbol_logic();var anObject=require_an_object();var isObject=require_is_object();var requireObjectCoercible=require_require_object_coercible();var sameValue=require_same_value();var toString=require_to_string();var getMethod=require_get_method();var regExpExec=require_regexp_exec_abstract();fixRegExpWellKnownSymbolLogic("search",function(SEARCH,nativeSearch,maybeCallNative){return[// `String.prototype.search` method
// https://tc39.es/ecma262/#sec-string.prototype.search
function search(regexp){var O=requireObjectCoercible(this);var searcher=isObject(regexp)?getMethod(regexp,SEARCH):void 0;return searcher?call(searcher,regexp,O):new RegExp(regexp)[SEARCH](toString(O));},// `RegExp.prototype[@@search]` method
// https://tc39.es/ecma262/#sec-regexp.prototype-@@search
function(string){var rx=anObject(this);var S=toString(string);var res=maybeCallNative(nativeSearch,rx,S);if(res.done)return res.value;var previousLastIndex=rx.lastIndex;if(!sameValue(previousLastIndex,0))rx.lastIndex=0;var result=regExpExec(rx,S);if(!sameValue(rx.lastIndex,previousLastIndex))rx.lastIndex=previousLastIndex;return result===null?-1:result.index;}];});}});// node_modules/core-js/modules/es.string.split.js
var require_es_string_split=__commonJS({"node_modules/core-js/modules/es.string.split.js"(){"use strict";var call=require_function_call();var uncurryThis=require_function_uncurry_this();var fixRegExpWellKnownSymbolLogic=require_fix_regexp_well_known_symbol_logic();var anObject=require_an_object();var isObject=require_is_object();var requireObjectCoercible=require_require_object_coercible();var speciesConstructor=require_species_constructor();var advanceStringIndex=require_advance_string_index();var toLength=require_to_length();var toString=require_to_string();var getMethod=require_get_method();var regExpExec=require_regexp_exec_abstract();var stickyHelpers=require_regexp_sticky_helpers();var fails=require_fails();var UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y;var MAX_UINT32=4294967295;var min=Math.min;var push=uncurryThis([].push);var stringSlice=uncurryThis("".slice);var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC=!fails(function(){var re=/(?:)/;var originalExec=re.exec;re.exec=function(){return originalExec.apply(this,arguments);};var result="ab".split(re);return result.length!==2||result[0]!=="a"||result[1]!=="b";});var BUGGY="abbc".split(/(b)*/)[1]==="c"||// eslint-disable-next-line regexp/no-empty-group -- required for testing
"test".split(/(?:)/,-1).length!==4||"ab".split(/(?:ab)*/).length!==2||".".split(/(.?)(.?)/).length!==4||// eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
".".split(/()()/).length>1||"".split(/.?/).length;fixRegExpWellKnownSymbolLogic("split",function(SPLIT,nativeSplit,maybeCallNative){var internalSplit="0".split(void 0,0).length?function(separator,limit){return separator===void 0&&limit===0?[]:call(nativeSplit,this,separator,limit);}:nativeSplit;return[// `String.prototype.split` method
// https://tc39.es/ecma262/#sec-string.prototype.split
function split(separator,limit){var O=requireObjectCoercible(this);var splitter=isObject(separator)?getMethod(separator,SPLIT):void 0;return splitter?call(splitter,separator,O,limit):call(internalSplit,toString(O),separator,limit);},// `RegExp.prototype[@@split]` method
// https://tc39.es/ecma262/#sec-regexp.prototype-@@split
//
// NOTE: This cannot be properly polyfilled in engines that don't support
// the 'y' flag.
function(string,limit){var rx=anObject(this);var S=toString(string);if(!BUGGY){var res=maybeCallNative(internalSplit,rx,S,limit,internalSplit!==nativeSplit);if(res.done)return res.value;}var C=speciesConstructor(rx,RegExp);var unicodeMatching=rx.unicode;var flags=(rx.ignoreCase?"i":"")+(rx.multiline?"m":"")+(rx.unicode?"u":"")+(UNSUPPORTED_Y?"g":"y");var splitter=new C(UNSUPPORTED_Y?"^(?:"+rx.source+")":rx,flags);var lim=limit===void 0?MAX_UINT32:limit>>>0;if(lim===0)return[];if(S.length===0)return regExpExec(splitter,S)===null?[S]:[];var p=0;var q=0;var A=[];while(q<S.length){splitter.lastIndex=UNSUPPORTED_Y?0:q;var z=regExpExec(splitter,UNSUPPORTED_Y?stringSlice(S,q):S);var e;if(z===null||(e=min(toLength(splitter.lastIndex+(UNSUPPORTED_Y?q:0)),S.length))===p){q=advanceStringIndex(S,q,unicodeMatching);}else{push(A,stringSlice(S,p,q));if(A.length===lim)return A;for(var i=1;i<=z.length-1;i++){push(A,z[i]);if(A.length===lim)return A;}q=p=e;}}push(A,stringSlice(S,p));return A;}];},BUGGY||!SPLIT_WORKS_WITH_OVERWRITTEN_EXEC,UNSUPPORTED_Y);}});// node_modules/core-js/modules/es.string.starts-with.js
var require_es_string_starts_with=__commonJS({"node_modules/core-js/modules/es.string.starts-with.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this_clause();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var toLength=require_to_length();var toString=require_to_string();var notARegExp=require_not_a_regexp();var requireObjectCoercible=require_require_object_coercible();var correctIsRegExpLogic=require_correct_is_regexp_logic();var IS_PURE=require_is_pure();var stringSlice=uncurryThis("".slice);var min=Math.min;var CORRECT_IS_REGEXP_LOGIC=correctIsRegExpLogic("startsWith");var MDN_POLYFILL_BUG=!IS_PURE&&!CORRECT_IS_REGEXP_LOGIC&&!!function(){var descriptor=getOwnPropertyDescriptor(String.prototype,"startsWith");return descriptor&&!descriptor.writable;}();$({target:"String",proto:true,forced:!MDN_POLYFILL_BUG&&!CORRECT_IS_REGEXP_LOGIC},{startsWith:function startsWith(searchString){var that=toString(requireObjectCoercible(this));notARegExp(searchString);var index=toLength(min(arguments.length>1?arguments[1]:void 0,that.length));var search=toString(searchString);return stringSlice(that,index,index+search.length)===search;}});}});// node_modules/core-js/modules/es.string.substr.js
var require_es_string_substr=__commonJS({"node_modules/core-js/modules/es.string.substr.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toIntegerOrInfinity=require_to_integer_or_infinity();var toString=require_to_string();var stringSlice=uncurryThis("".slice);var max=Math.max;var min=Math.min;var FORCED=!"".substr||"ab".substr(-1)!=="b";$({target:"String",proto:true,forced:FORCED},{substr:function substr(start,length){var that=toString(requireObjectCoercible(this));var size=that.length;var intStart=toIntegerOrInfinity(start);var intLength,intEnd;if(intStart===Infinity)intStart=0;if(intStart<0)intStart=max(size+intStart,0);intLength=length===void 0?size:toIntegerOrInfinity(length);if(intLength<=0||intLength===Infinity)return"";intEnd=min(intStart+intLength,size);return intStart>=intEnd?"":stringSlice(that,intStart,intEnd);}});}});// node_modules/core-js/modules/es.string.to-well-formed.js
var require_es_string_to_well_formed=__commonJS({"node_modules/core-js/modules/es.string.to-well-formed.js"(){"use strict";var $=require_export();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toString=require_to_string();var fails=require_fails();var $Array=Array;var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var join=uncurryThis([].join);var $toWellFormed="".toWellFormed;var REPLACEMENT_CHARACTER="\uFFFD";var TO_STRING_CONVERSION_BUG=$toWellFormed&&fails(function(){return call($toWellFormed,1)!=="1";});$({target:"String",proto:true,forced:TO_STRING_CONVERSION_BUG},{toWellFormed:function toWellFormed(){var S=toString(requireObjectCoercible(this));if(TO_STRING_CONVERSION_BUG)return call($toWellFormed,S);var length=S.length;var result=$Array(length);for(var i=0;i<length;i++){var charCode=charCodeAt(S,i);if((charCode&63488)!==55296)result[i]=charAt(S,i);else if(charCode>=56320||i+1>=length||(charCodeAt(S,i+1)&64512)!==56320)result[i]=REPLACEMENT_CHARACTER;else{result[i]=charAt(S,i);result[++i]=charAt(S,i);}}return join(result,"");}});}});// node_modules/core-js/internals/string-trim-forced.js
var require_string_trim_forced=__commonJS({"node_modules/core-js/internals/string-trim-forced.js"(exports,module2){"use strict";var PROPER_FUNCTION_NAME=require_function_name().PROPER;var fails=require_fails();var whitespaces=require_whitespaces();var non="\u200B\x85\u180E";module2.exports=function(METHOD_NAME){return fails(function(){return!!whitespaces[METHOD_NAME]()||non[METHOD_NAME]()!==non||PROPER_FUNCTION_NAME&&whitespaces[METHOD_NAME].name!==METHOD_NAME;});};}});// node_modules/core-js/modules/es.string.trim.js
var require_es_string_trim=__commonJS({"node_modules/core-js/modules/es.string.trim.js"(){"use strict";var $=require_export();var $trim=require_string_trim().trim;var forcedStringTrimMethod=require_string_trim_forced();$({target:"String",proto:true,forced:forcedStringTrimMethod("trim")},{trim:function trim(){return $trim(this);}});}});// node_modules/core-js/internals/string-trim-end.js
var require_string_trim_end=__commonJS({"node_modules/core-js/internals/string-trim-end.js"(exports,module2){"use strict";var $trimEnd=require_string_trim().end;var forcedStringTrimMethod=require_string_trim_forced();module2.exports=forcedStringTrimMethod("trimEnd")?function trimEnd(){return $trimEnd(this);}:"".trimEnd;}});// node_modules/core-js/modules/es.string.trim-right.js
var require_es_string_trim_right=__commonJS({"node_modules/core-js/modules/es.string.trim-right.js"(){"use strict";var $=require_export();var trimEnd=require_string_trim_end();$({target:"String",proto:true,name:"trimEnd",forced:"".trimRight!==trimEnd},{trimRight:trimEnd});}});// node_modules/core-js/modules/es.string.trim-end.js
var require_es_string_trim_end=__commonJS({"node_modules/core-js/modules/es.string.trim-end.js"(){"use strict";require_es_string_trim_right();var $=require_export();var trimEnd=require_string_trim_end();$({target:"String",proto:true,name:"trimEnd",forced:"".trimEnd!==trimEnd},{trimEnd});}});// node_modules/core-js/internals/string-trim-start.js
var require_string_trim_start=__commonJS({"node_modules/core-js/internals/string-trim-start.js"(exports,module2){"use strict";var $trimStart=require_string_trim().start;var forcedStringTrimMethod=require_string_trim_forced();module2.exports=forcedStringTrimMethod("trimStart")?function trimStart(){return $trimStart(this);}:"".trimStart;}});// node_modules/core-js/modules/es.string.trim-left.js
var require_es_string_trim_left=__commonJS({"node_modules/core-js/modules/es.string.trim-left.js"(){"use strict";var $=require_export();var trimStart=require_string_trim_start();$({target:"String",proto:true,name:"trimStart",forced:"".trimLeft!==trimStart},{trimLeft:trimStart});}});// node_modules/core-js/modules/es.string.trim-start.js
var require_es_string_trim_start=__commonJS({"node_modules/core-js/modules/es.string.trim-start.js"(){"use strict";require_es_string_trim_left();var $=require_export();var trimStart=require_string_trim_start();$({target:"String",proto:true,name:"trimStart",forced:"".trimStart!==trimStart},{trimStart});}});// node_modules/core-js/internals/create-html.js
var require_create_html=__commonJS({"node_modules/core-js/internals/create-html.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var requireObjectCoercible=require_require_object_coercible();var toString=require_to_string();var quot=/"/g;var replace=uncurryThis("".replace);module2.exports=function(string,tag,attribute,value){var S=toString(requireObjectCoercible(string));var p1="<"+tag;if(attribute!=="")p1+=" "+attribute+'="'+replace(toString(value),quot,"&quot;")+'"';return p1+">"+S+"</"+tag+">";};}});// node_modules/core-js/internals/string-html-forced.js
var require_string_html_forced=__commonJS({"node_modules/core-js/internals/string-html-forced.js"(exports,module2){"use strict";var fails=require_fails();module2.exports=function(METHOD_NAME){return fails(function(){var test=""[METHOD_NAME]('"');return test!==test.toLowerCase()||test.split('"').length>3;});};}});// node_modules/core-js/modules/es.string.anchor.js
var require_es_string_anchor=__commonJS({"node_modules/core-js/modules/es.string.anchor.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("anchor")},{anchor:function anchor(name){return createHTML(this,"a","name",name);}});}});// node_modules/core-js/modules/es.string.big.js
var require_es_string_big=__commonJS({"node_modules/core-js/modules/es.string.big.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("big")},{big:function big(){return createHTML(this,"big","","");}});}});// node_modules/core-js/modules/es.string.blink.js
var require_es_string_blink=__commonJS({"node_modules/core-js/modules/es.string.blink.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("blink")},{blink:function blink(){return createHTML(this,"blink","","");}});}});// node_modules/core-js/modules/es.string.bold.js
var require_es_string_bold=__commonJS({"node_modules/core-js/modules/es.string.bold.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("bold")},{bold:function bold(){return createHTML(this,"b","","");}});}});// node_modules/core-js/modules/es.string.fixed.js
var require_es_string_fixed=__commonJS({"node_modules/core-js/modules/es.string.fixed.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("fixed")},{fixed:function fixed(){return createHTML(this,"tt","","");}});}});// node_modules/core-js/modules/es.string.fontcolor.js
var require_es_string_fontcolor=__commonJS({"node_modules/core-js/modules/es.string.fontcolor.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("fontcolor")},{fontcolor:function fontcolor(color){return createHTML(this,"font","color",color);}});}});// node_modules/core-js/modules/es.string.fontsize.js
var require_es_string_fontsize=__commonJS({"node_modules/core-js/modules/es.string.fontsize.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("fontsize")},{fontsize:function fontsize(size){return createHTML(this,"font","size",size);}});}});// node_modules/core-js/modules/es.string.italics.js
var require_es_string_italics=__commonJS({"node_modules/core-js/modules/es.string.italics.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("italics")},{italics:function italics(){return createHTML(this,"i","","");}});}});// node_modules/core-js/modules/es.string.link.js
var require_es_string_link=__commonJS({"node_modules/core-js/modules/es.string.link.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("link")},{link:function link(url){return createHTML(this,"a","href",url);}});}});// node_modules/core-js/modules/es.string.small.js
var require_es_string_small=__commonJS({"node_modules/core-js/modules/es.string.small.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("small")},{small:function small(){return createHTML(this,"small","","");}});}});// node_modules/core-js/modules/es.string.strike.js
var require_es_string_strike=__commonJS({"node_modules/core-js/modules/es.string.strike.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("strike")},{strike:function strike(){return createHTML(this,"strike","","");}});}});// node_modules/core-js/modules/es.string.sub.js
var require_es_string_sub=__commonJS({"node_modules/core-js/modules/es.string.sub.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("sub")},{sub:function sub(){return createHTML(this,"sub","","");}});}});// node_modules/core-js/modules/es.string.sup.js
var require_es_string_sup=__commonJS({"node_modules/core-js/modules/es.string.sup.js"(){"use strict";var $=require_export();var createHTML=require_create_html();var forcedStringHTMLMethod=require_string_html_forced();$({target:"String",proto:true,forced:forcedStringHTMLMethod("sup")},{sup:function sup(){return createHTML(this,"sup","","");}});}});// node_modules/core-js/internals/typed-array-constructors-require-wrappers.js
var require_typed_array_constructors_require_wrappers=__commonJS({"node_modules/core-js/internals/typed-array-constructors-require-wrappers.js"(exports,module2){"use strict";var globalThis2=require_global_this();var fails=require_fails();var checkCorrectnessOfIteration=require_check_correctness_of_iteration();var NATIVE_ARRAY_BUFFER_VIEWS=require_array_buffer_view_core().NATIVE_ARRAY_BUFFER_VIEWS;var ArrayBuffer2=globalThis2.ArrayBuffer;var Int8Array2=globalThis2.Int8Array;module2.exports=!NATIVE_ARRAY_BUFFER_VIEWS||!fails(function(){Int8Array2(1);})||!fails(function(){new Int8Array2(-1);})||!checkCorrectnessOfIteration(function(iterable){new Int8Array2();new Int8Array2(null);new Int8Array2(1.5);new Int8Array2(iterable);},true)||fails(function(){return new Int8Array2(new ArrayBuffer2(2),1,void 0).length!==1;});}});// node_modules/core-js/internals/to-offset.js
var require_to_offset=__commonJS({"node_modules/core-js/internals/to-offset.js"(exports,module2){"use strict";var toPositiveInteger=require_to_positive_integer();var $RangeError=RangeError;module2.exports=function(it,BYTES){var offset=toPositiveInteger(it);if(offset%BYTES)throw new $RangeError("Wrong offset");return offset;};}});// node_modules/core-js/internals/to-uint8-clamped.js
var require_to_uint8_clamped=__commonJS({"node_modules/core-js/internals/to-uint8-clamped.js"(exports,module2){"use strict";var round=Math.round;module2.exports=function(it){var value=round(it);return value<0?0:value>255?255:value&255;};}});// node_modules/core-js/internals/is-big-int-array.js
var require_is_big_int_array=__commonJS({"node_modules/core-js/internals/is-big-int-array.js"(exports,module2){"use strict";var classof=require_classof();module2.exports=function(it){var klass=classof(it);return klass==="BigInt64Array"||klass==="BigUint64Array";};}});// node_modules/core-js/internals/to-big-int.js
var require_to_big_int=__commonJS({"node_modules/core-js/internals/to-big-int.js"(exports,module2){"use strict";var toPrimitive=require_to_primitive();var $TypeError=TypeError;module2.exports=function(argument){var prim=toPrimitive(argument,"number");if(typeof prim=="number")throw new $TypeError("Can't convert number to bigint");return BigInt(prim);};}});// node_modules/core-js/internals/typed-array-from.js
var require_typed_array_from=__commonJS({"node_modules/core-js/internals/typed-array-from.js"(exports,module2){"use strict";var bind=require_function_bind_context();var call=require_function_call();var aConstructor=require_a_constructor();var toObject=require_to_object();var lengthOfArrayLike=require_length_of_array_like();var getIterator=require_get_iterator();var getIteratorMethod=require_get_iterator_method();var isArrayIteratorMethod=require_is_array_iterator_method();var isBigIntArray=require_is_big_int_array();var aTypedArrayConstructor=require_array_buffer_view_core().aTypedArrayConstructor;var toBigInt=require_to_big_int();module2.exports=function from(source){var C=aConstructor(this);var O=toObject(source);var argumentsLength=arguments.length;var mapfn=argumentsLength>1?arguments[1]:void 0;var mapping=mapfn!==void 0;var iteratorMethod=getIteratorMethod(O);var i,length,result,thisIsBigIntArray,value,step,iterator,next;if(iteratorMethod&&!isArrayIteratorMethod(iteratorMethod)){iterator=getIterator(O,iteratorMethod);next=iterator.next;O=[];while(!(step=call(next,iterator)).done){O.push(step.value);}}if(mapping&&argumentsLength>2){mapfn=bind(mapfn,arguments[2]);}length=lengthOfArrayLike(O);result=new(aTypedArrayConstructor(C))(length);thisIsBigIntArray=isBigIntArray(result);for(i=0;length>i;i++){value=mapping?mapfn(O[i],i):O[i];result[i]=thisIsBigIntArray?toBigInt(value):+value;}return result;};}});// node_modules/core-js/internals/typed-array-constructor.js
var require_typed_array_constructor=__commonJS({"node_modules/core-js/internals/typed-array-constructor.js"(exports,module2){"use strict";var $=require_export();var globalThis2=require_global_this();var call=require_function_call();var DESCRIPTORS=require_descriptors();var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS=require_typed_array_constructors_require_wrappers();var ArrayBufferViewCore=require_array_buffer_view_core();var ArrayBufferModule=require_array_buffer();var anInstance=require_an_instance();var createPropertyDescriptor=require_create_property_descriptor();var createNonEnumerableProperty=require_create_non_enumerable_property();var isIntegralNumber=require_is_integral_number();var toLength=require_to_length();var toIndex=require_to_index();var toOffset=require_to_offset();var toUint8Clamped=require_to_uint8_clamped();var toPropertyKey=require_to_property_key();var hasOwn=require_has_own_property();var classof=require_classof();var isObject=require_is_object();var isSymbol=require_is_symbol();var create=require_object_create();var isPrototypeOf=require_object_is_prototype_of();var setPrototypeOf=require_object_set_prototype_of();var getOwnPropertyNames=require_object_get_own_property_names().f;var typedArrayFrom=require_typed_array_from();var forEach=require_array_iteration().forEach;var setSpecies=require_set_species();var defineBuiltInAccessor=require_define_built_in_accessor();var definePropertyModule=require_object_define_property();var getOwnPropertyDescriptorModule=require_object_get_own_property_descriptor();var arrayFromConstructorAndList=require_array_from_constructor_and_list();var InternalStateModule=require_internal_state();var inheritIfRequired=require_inherit_if_required();var getInternalState=InternalStateModule.get;var setInternalState=InternalStateModule.set;var enforceInternalState=InternalStateModule.enforce;var nativeDefineProperty=definePropertyModule.f;var nativeGetOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;var RangeError2=globalThis2.RangeError;var ArrayBuffer2=ArrayBufferModule.ArrayBuffer;var ArrayBufferPrototype=ArrayBuffer2.prototype;var DataView2=ArrayBufferModule.DataView;var NATIVE_ARRAY_BUFFER_VIEWS=ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;var TYPED_ARRAY_TAG=ArrayBufferViewCore.TYPED_ARRAY_TAG;var TypedArray=ArrayBufferViewCore.TypedArray;var TypedArrayPrototype=ArrayBufferViewCore.TypedArrayPrototype;var isTypedArray=ArrayBufferViewCore.isTypedArray;var BYTES_PER_ELEMENT="BYTES_PER_ELEMENT";var WRONG_LENGTH="Wrong length";var addGetter=function(it,key){defineBuiltInAccessor(it,key,{configurable:true,get:function(){return getInternalState(this)[key];}});};var isArrayBuffer=function(it){var klass;return isPrototypeOf(ArrayBufferPrototype,it)||(klass=classof(it))==="ArrayBuffer"||klass==="SharedArrayBuffer";};var isTypedArrayIndex=function(target,key){return isTypedArray(target)&&!isSymbol(key)&&key in target&&isIntegralNumber(+key)&&key>=0;};var wrappedGetOwnPropertyDescriptor=function getOwnPropertyDescriptor(target,key){key=toPropertyKey(key);return isTypedArrayIndex(target,key)?createPropertyDescriptor(2,target[key]):nativeGetOwnPropertyDescriptor(target,key);};var wrappedDefineProperty=function defineProperty(target,key,descriptor){key=toPropertyKey(key);if(isTypedArrayIndex(target,key)&&isObject(descriptor)&&hasOwn(descriptor,"value")&&!hasOwn(descriptor,"get")&&!hasOwn(descriptor,"set")&&!descriptor.configurable&&(!hasOwn(descriptor,"writable")||descriptor.writable)&&(!hasOwn(descriptor,"enumerable")||descriptor.enumerable)){target[key]=descriptor.value;return target;}return nativeDefineProperty(target,key,descriptor);};if(DESCRIPTORS){if(!NATIVE_ARRAY_BUFFER_VIEWS){getOwnPropertyDescriptorModule.f=wrappedGetOwnPropertyDescriptor;definePropertyModule.f=wrappedDefineProperty;addGetter(TypedArrayPrototype,"buffer");addGetter(TypedArrayPrototype,"byteOffset");addGetter(TypedArrayPrototype,"byteLength");addGetter(TypedArrayPrototype,"length");}$({target:"Object",stat:true,forced:!NATIVE_ARRAY_BUFFER_VIEWS},{getOwnPropertyDescriptor:wrappedGetOwnPropertyDescriptor,defineProperty:wrappedDefineProperty});module2.exports=function(TYPE,wrapper,CLAMPED){var BYTES=TYPE.match(/\d+/)[0]/8;var CONSTRUCTOR_NAME=TYPE+(CLAMPED?"Clamped":"")+"Array";var GETTER="get"+TYPE;var SETTER="set"+TYPE;var NativeTypedArrayConstructor=globalThis2[CONSTRUCTOR_NAME];var TypedArrayConstructor=NativeTypedArrayConstructor;var TypedArrayConstructorPrototype=TypedArrayConstructor&&TypedArrayConstructor.prototype;var exported={};var getter=function(that,index){var data=getInternalState(that);return data.view[GETTER](index*BYTES+data.byteOffset,true);};var setter=function(that,index,value){var data=getInternalState(that);data.view[SETTER](index*BYTES+data.byteOffset,CLAMPED?toUint8Clamped(value):value,true);};var addElement=function(that,index){nativeDefineProperty(that,index,{get:function(){return getter(this,index);},set:function(value){return setter(this,index,value);},enumerable:true});};if(!NATIVE_ARRAY_BUFFER_VIEWS){TypedArrayConstructor=wrapper(function(that,data,offset,$length){anInstance(that,TypedArrayConstructorPrototype);var index=0;var byteOffset=0;var buffer,byteLength,length;if(!isObject(data)){length=toIndex(data);byteLength=length*BYTES;buffer=new ArrayBuffer2(byteLength);}else if(isArrayBuffer(data)){buffer=data;byteOffset=toOffset(offset,BYTES);var $len=data.byteLength;if($length===void 0){if($len%BYTES)throw new RangeError2(WRONG_LENGTH);byteLength=$len-byteOffset;if(byteLength<0)throw new RangeError2(WRONG_LENGTH);}else{byteLength=toLength($length)*BYTES;if(byteLength+byteOffset>$len)throw new RangeError2(WRONG_LENGTH);}length=byteLength/BYTES;}else if(isTypedArray(data)){return arrayFromConstructorAndList(TypedArrayConstructor,data);}else{return call(typedArrayFrom,TypedArrayConstructor,data);}setInternalState(that,{buffer,byteOffset,byteLength,length,view:new DataView2(buffer)});while(index<length)addElement(that,index++);});if(setPrototypeOf)setPrototypeOf(TypedArrayConstructor,TypedArray);TypedArrayConstructorPrototype=TypedArrayConstructor.prototype=create(TypedArrayPrototype);}else if(TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS){TypedArrayConstructor=wrapper(function(dummy2,data,typedArrayOffset,$length){anInstance(dummy2,TypedArrayConstructorPrototype);return inheritIfRequired(function(){if(!isObject(data))return new NativeTypedArrayConstructor(toIndex(data));if(isArrayBuffer(data))return $length!==void 0?new NativeTypedArrayConstructor(data,toOffset(typedArrayOffset,BYTES),$length):typedArrayOffset!==void 0?new NativeTypedArrayConstructor(data,toOffset(typedArrayOffset,BYTES)):new NativeTypedArrayConstructor(data);if(isTypedArray(data))return arrayFromConstructorAndList(TypedArrayConstructor,data);return call(typedArrayFrom,TypedArrayConstructor,data);}(),dummy2,TypedArrayConstructor);});if(setPrototypeOf)setPrototypeOf(TypedArrayConstructor,TypedArray);forEach(getOwnPropertyNames(NativeTypedArrayConstructor),function(key){if(!(key in TypedArrayConstructor)){createNonEnumerableProperty(TypedArrayConstructor,key,NativeTypedArrayConstructor[key]);}});TypedArrayConstructor.prototype=TypedArrayConstructorPrototype;}if(TypedArrayConstructorPrototype.constructor!==TypedArrayConstructor){createNonEnumerableProperty(TypedArrayConstructorPrototype,"constructor",TypedArrayConstructor);}enforceInternalState(TypedArrayConstructorPrototype).TypedArrayConstructor=TypedArrayConstructor;if(TYPED_ARRAY_TAG){createNonEnumerableProperty(TypedArrayConstructorPrototype,TYPED_ARRAY_TAG,CONSTRUCTOR_NAME);}var FORCED=TypedArrayConstructor!==NativeTypedArrayConstructor;exported[CONSTRUCTOR_NAME]=TypedArrayConstructor;$({global:true,constructor:true,forced:FORCED,sham:!NATIVE_ARRAY_BUFFER_VIEWS},exported);if(!(BYTES_PER_ELEMENT in TypedArrayConstructor)){createNonEnumerableProperty(TypedArrayConstructor,BYTES_PER_ELEMENT,BYTES);}if(!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)){createNonEnumerableProperty(TypedArrayConstructorPrototype,BYTES_PER_ELEMENT,BYTES);}setSpecies(CONSTRUCTOR_NAME);};}else module2.exports=function(){};}});// node_modules/core-js/modules/es.typed-array.float32-array.js
var require_es_typed_array_float32_array=__commonJS({"node_modules/core-js/modules/es.typed-array.float32-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Float32",function(init){return function Float32Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.float64-array.js
var require_es_typed_array_float64_array=__commonJS({"node_modules/core-js/modules/es.typed-array.float64-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Float64",function(init){return function Float64Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.int8-array.js
var require_es_typed_array_int8_array=__commonJS({"node_modules/core-js/modules/es.typed-array.int8-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Int8",function(init){return function Int8Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.int16-array.js
var require_es_typed_array_int16_array=__commonJS({"node_modules/core-js/modules/es.typed-array.int16-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Int16",function(init){return function Int16Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.int32-array.js
var require_es_typed_array_int32_array=__commonJS({"node_modules/core-js/modules/es.typed-array.int32-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Int32",function(init){return function Int32Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.uint8-array.js
var require_es_typed_array_uint8_array=__commonJS({"node_modules/core-js/modules/es.typed-array.uint8-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Uint8",function(init){return function Uint8Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js
var require_es_typed_array_uint8_clamped_array=__commonJS({"node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Uint8",function(init){return function Uint8ClampedArray2(data,byteOffset,length){return init(this,data,byteOffset,length);};},true);}});// node_modules/core-js/modules/es.typed-array.uint16-array.js
var require_es_typed_array_uint16_array=__commonJS({"node_modules/core-js/modules/es.typed-array.uint16-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Uint16",function(init){return function Uint16Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.uint32-array.js
var require_es_typed_array_uint32_array=__commonJS({"node_modules/core-js/modules/es.typed-array.uint32-array.js"(){"use strict";var createTypedArrayConstructor=require_typed_array_constructor();createTypedArrayConstructor("Uint32",function(init){return function Uint32Array2(data,byteOffset,length){return init(this,data,byteOffset,length);};});}});// node_modules/core-js/modules/es.typed-array.at.js
var require_es_typed_array_at=__commonJS({"node_modules/core-js/modules/es.typed-array.at.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var lengthOfArrayLike=require_length_of_array_like();var toIntegerOrInfinity=require_to_integer_or_infinity();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("at",function at(index){var O=aTypedArray(this);var len=lengthOfArrayLike(O);var relativeIndex=toIntegerOrInfinity(index);var k=relativeIndex>=0?relativeIndex:len+relativeIndex;return k<0||k>=len?void 0:O[k];});}});// node_modules/core-js/modules/es.typed-array.copy-within.js
var require_es_typed_array_copy_within=__commonJS({"node_modules/core-js/modules/es.typed-array.copy-within.js"(){"use strict";var uncurryThis=require_function_uncurry_this();var ArrayBufferViewCore=require_array_buffer_view_core();var $ArrayCopyWithin=require_array_copy_within();var u$ArrayCopyWithin=uncurryThis($ArrayCopyWithin);var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("copyWithin",function copyWithin(target,start){return u$ArrayCopyWithin(aTypedArray(this),target,start,arguments.length>2?arguments[2]:void 0);});}});// node_modules/core-js/modules/es.typed-array.every.js
var require_es_typed_array_every=__commonJS({"node_modules/core-js/modules/es.typed-array.every.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $every=require_array_iteration().every;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("every",function every(callbackfn){return $every(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.fill.js
var require_es_typed_array_fill=__commonJS({"node_modules/core-js/modules/es.typed-array.fill.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $fill=require_array_fill();var toBigInt=require_to_big_int();var classof=require_classof();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var fails=require_fails();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var slice=uncurryThis("".slice);var CONVERSION_BUG=fails(function(){var count=0;new Int8Array(2).fill({valueOf:function(){return count++;}});return count!==1;});exportTypedArrayMethod("fill",function fill(value){var length=arguments.length;aTypedArray(this);var actualValue=slice(classof(this),0,3)==="Big"?toBigInt(value):+value;return call($fill,this,actualValue,length>1?arguments[1]:void 0,length>2?arguments[2]:void 0);},CONVERSION_BUG);}});// node_modules/core-js/internals/typed-array-from-same-type-and-list.js
var require_typed_array_from_same_type_and_list=__commonJS({"node_modules/core-js/internals/typed-array-from-same-type-and-list.js"(exports,module2){"use strict";var arrayFromConstructorAndList=require_array_from_constructor_and_list();var getTypedArrayConstructor=require_array_buffer_view_core().getTypedArrayConstructor;module2.exports=function(instance,list){return arrayFromConstructorAndList(getTypedArrayConstructor(instance),list);};}});// node_modules/core-js/modules/es.typed-array.filter.js
var require_es_typed_array_filter=__commonJS({"node_modules/core-js/modules/es.typed-array.filter.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $filter=require_array_iteration().filter;var fromSameTypeAndList=require_typed_array_from_same_type_and_list();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("filter",function filter(callbackfn){var list=$filter(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:void 0);return fromSameTypeAndList(this,list);});}});// node_modules/core-js/modules/es.typed-array.find.js
var require_es_typed_array_find=__commonJS({"node_modules/core-js/modules/es.typed-array.find.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $find=require_array_iteration().find;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("find",function find(predicate){return $find(aTypedArray(this),predicate,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.find-index.js
var require_es_typed_array_find_index=__commonJS({"node_modules/core-js/modules/es.typed-array.find-index.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $findIndex=require_array_iteration().findIndex;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("findIndex",function findIndex(predicate){return $findIndex(aTypedArray(this),predicate,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.find-last.js
var require_es_typed_array_find_last=__commonJS({"node_modules/core-js/modules/es.typed-array.find-last.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $findLast=require_array_iteration_from_last().findLast;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("findLast",function findLast(predicate){return $findLast(aTypedArray(this),predicate,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.find-last-index.js
var require_es_typed_array_find_last_index=__commonJS({"node_modules/core-js/modules/es.typed-array.find-last-index.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $findLastIndex=require_array_iteration_from_last().findLastIndex;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("findLastIndex",function findLastIndex(predicate){return $findLastIndex(aTypedArray(this),predicate,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.for-each.js
var require_es_typed_array_for_each=__commonJS({"node_modules/core-js/modules/es.typed-array.for-each.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $forEach=require_array_iteration().forEach;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("forEach",function forEach(callbackfn){$forEach(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.from.js
var require_es_typed_array_from=__commonJS({"node_modules/core-js/modules/es.typed-array.from.js"(){"use strict";var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS=require_typed_array_constructors_require_wrappers();var exportTypedArrayStaticMethod=require_array_buffer_view_core().exportTypedArrayStaticMethod;var typedArrayFrom=require_typed_array_from();exportTypedArrayStaticMethod("from",typedArrayFrom,TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);}});// node_modules/core-js/modules/es.typed-array.includes.js
var require_es_typed_array_includes=__commonJS({"node_modules/core-js/modules/es.typed-array.includes.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $includes=require_array_includes().includes;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("includes",function includes(searchElement){return $includes(aTypedArray(this),searchElement,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.index-of.js
var require_es_typed_array_index_of=__commonJS({"node_modules/core-js/modules/es.typed-array.index-of.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $indexOf=require_array_includes().indexOf;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("indexOf",function indexOf(searchElement){return $indexOf(aTypedArray(this),searchElement,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.iterator.js
var require_es_typed_array_iterator=__commonJS({"node_modules/core-js/modules/es.typed-array.iterator.js"(){"use strict";var globalThis2=require_global_this();var fails=require_fails();var uncurryThis=require_function_uncurry_this();var ArrayBufferViewCore=require_array_buffer_view_core();var ArrayIterators=require_es_array_iterator();var wellKnownSymbol=require_well_known_symbol();var ITERATOR=wellKnownSymbol("iterator");var Uint8Array2=globalThis2.Uint8Array;var arrayValues=uncurryThis(ArrayIterators.values);var arrayKeys=uncurryThis(ArrayIterators.keys);var arrayEntries=uncurryThis(ArrayIterators.entries);var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var TypedArrayPrototype=Uint8Array2&&Uint8Array2.prototype;var GENERIC=!fails(function(){TypedArrayPrototype[ITERATOR].call([1]);});var ITERATOR_IS_VALUES=!!TypedArrayPrototype&&TypedArrayPrototype.values&&TypedArrayPrototype[ITERATOR]===TypedArrayPrototype.values&&TypedArrayPrototype.values.name==="values";var typedArrayValues=function values(){return arrayValues(aTypedArray(this));};exportTypedArrayMethod("entries",function entries(){return arrayEntries(aTypedArray(this));},GENERIC);exportTypedArrayMethod("keys",function keys(){return arrayKeys(aTypedArray(this));},GENERIC);exportTypedArrayMethod("values",typedArrayValues,GENERIC||!ITERATOR_IS_VALUES,{name:"values"});exportTypedArrayMethod(ITERATOR,typedArrayValues,GENERIC||!ITERATOR_IS_VALUES,{name:"values"});}});// node_modules/core-js/modules/es.typed-array.join.js
var require_es_typed_array_join=__commonJS({"node_modules/core-js/modules/es.typed-array.join.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var uncurryThis=require_function_uncurry_this();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var $join=uncurryThis([].join);exportTypedArrayMethod("join",function join(separator){return $join(aTypedArray(this),separator);});}});// node_modules/core-js/modules/es.typed-array.last-index-of.js
var require_es_typed_array_last_index_of=__commonJS({"node_modules/core-js/modules/es.typed-array.last-index-of.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var apply=require_function_apply();var $lastIndexOf=require_array_last_index_of();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("lastIndexOf",function lastIndexOf(searchElement){var length=arguments.length;return apply($lastIndexOf,aTypedArray(this),length>1?[searchElement,arguments[1]]:[searchElement]);});}});// node_modules/core-js/modules/es.typed-array.map.js
var require_es_typed_array_map=__commonJS({"node_modules/core-js/modules/es.typed-array.map.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $map=require_array_iteration().map;var aTypedArray=ArrayBufferViewCore.aTypedArray;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("map",function map(mapfn){return $map(aTypedArray(this),mapfn,arguments.length>1?arguments[1]:void 0,function(O,length){return new(getTypedArrayConstructor(O))(length);});});}});// node_modules/core-js/modules/es.typed-array.of.js
var require_es_typed_array_of=__commonJS({"node_modules/core-js/modules/es.typed-array.of.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS=require_typed_array_constructors_require_wrappers();var aTypedArrayConstructor=ArrayBufferViewCore.aTypedArrayConstructor;var exportTypedArrayStaticMethod=ArrayBufferViewCore.exportTypedArrayStaticMethod;exportTypedArrayStaticMethod("of",function of(){var index=0;var length=arguments.length;var result=new(aTypedArrayConstructor(this))(length);while(length>index)result[index]=arguments[index++];return result;},TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);}});// node_modules/core-js/modules/es.typed-array.reduce.js
var require_es_typed_array_reduce=__commonJS({"node_modules/core-js/modules/es.typed-array.reduce.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $reduce=require_array_reduce().left;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("reduce",function reduce(callbackfn){var length=arguments.length;return $reduce(aTypedArray(this),callbackfn,length,length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.reduce-right.js
var require_es_typed_array_reduce_right=__commonJS({"node_modules/core-js/modules/es.typed-array.reduce-right.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $reduceRight=require_array_reduce().right;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("reduceRight",function reduceRight(callbackfn){var length=arguments.length;return $reduceRight(aTypedArray(this),callbackfn,length,length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.reverse.js
var require_es_typed_array_reverse=__commonJS({"node_modules/core-js/modules/es.typed-array.reverse.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var floor=Math.floor;exportTypedArrayMethod("reverse",function reverse(){var that=this;var length=aTypedArray(that).length;var middle=floor(length/2);var index=0;var value;while(index<middle){value=that[index];that[index++]=that[--length];that[length]=value;}return that;});}});// node_modules/core-js/modules/es.typed-array.set.js
var require_es_typed_array_set=__commonJS({"node_modules/core-js/modules/es.typed-array.set.js"(){"use strict";var globalThis2=require_global_this();var call=require_function_call();var ArrayBufferViewCore=require_array_buffer_view_core();var lengthOfArrayLike=require_length_of_array_like();var toOffset=require_to_offset();var toIndexedObject=require_to_object();var fails=require_fails();var RangeError2=globalThis2.RangeError;var Int8Array2=globalThis2.Int8Array;var Int8ArrayPrototype=Int8Array2&&Int8Array2.prototype;var $set=Int8ArrayPrototype&&Int8ArrayPrototype.set;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS=!fails(function(){var array=new Uint8ClampedArray(2);call($set,array,{length:1,0:3},1);return array[1]!==3;});var TO_OBJECT_BUG=WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS&&ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS&&fails(function(){var array=new Int8Array2(2);array.set(1);array.set("2",1);return array[0]!==0||array[1]!==2;});exportTypedArrayMethod("set",function set(arrayLike){aTypedArray(this);var offset=toOffset(arguments.length>1?arguments[1]:void 0,1);var src=toIndexedObject(arrayLike);if(WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS)return call($set,this,src,offset);var length=this.length;var len=lengthOfArrayLike(src);var index=0;if(len+offset>length)throw new RangeError2("Wrong length");while(index<len)this[offset+index]=src[index++];},!WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS||TO_OBJECT_BUG);}});// node_modules/core-js/modules/es.typed-array.slice.js
var require_es_typed_array_slice=__commonJS({"node_modules/core-js/modules/es.typed-array.slice.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var fails=require_fails();var arraySlice=require_array_slice();var aTypedArray=ArrayBufferViewCore.aTypedArray;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var FORCED=fails(function(){new Int8Array(1).slice();});exportTypedArrayMethod("slice",function slice(start,end){var list=arraySlice(aTypedArray(this),start,end);var C=getTypedArrayConstructor(this);var index=0;var length=list.length;var result=new C(length);while(length>index)result[index]=list[index++];return result;},FORCED);}});// node_modules/core-js/modules/es.typed-array.some.js
var require_es_typed_array_some=__commonJS({"node_modules/core-js/modules/es.typed-array.some.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var $some=require_array_iteration().some;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("some",function some(callbackfn){return $some(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:void 0);});}});// node_modules/core-js/modules/es.typed-array.sort.js
var require_es_typed_array_sort=__commonJS({"node_modules/core-js/modules/es.typed-array.sort.js"(){"use strict";var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this_clause();var fails=require_fails();var aCallable=require_a_callable();var internalSort=require_array_sort();var ArrayBufferViewCore=require_array_buffer_view_core();var FF=require_environment_ff_version();var IE_OR_EDGE=require_environment_is_ie_or_edge();var V8=require_environment_v8_version();var WEBKIT=require_environment_webkit_version();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var Uint16Array2=globalThis2.Uint16Array;var nativeSort=Uint16Array2&&uncurryThis(Uint16Array2.prototype.sort);var ACCEPT_INCORRECT_ARGUMENTS=!!nativeSort&&!(fails(function(){nativeSort(new Uint16Array2(2),null);})&&fails(function(){nativeSort(new Uint16Array2(2),{});}));var STABLE_SORT=!!nativeSort&&!fails(function(){if(V8)return V8<74;if(FF)return FF<67;if(IE_OR_EDGE)return true;if(WEBKIT)return WEBKIT<602;var array=new Uint16Array2(516);var expected=Array(516);var index,mod;for(index=0;index<516;index++){mod=index%4;array[index]=515-index;expected[index]=index-2*mod+3;}nativeSort(array,function(a,b){return(a/4|0)-(b/4|0);});for(index=0;index<516;index++){if(array[index]!==expected[index])return true;}});var getSortCompare=function(comparefn){return function(x,y){if(comparefn!==void 0)return+comparefn(x,y)||0;if(y!==y)return-1;if(x!==x)return 1;if(x===0&&y===0)return 1/x>0&&1/y<0?1:-1;return x>y;};};exportTypedArrayMethod("sort",function sort(comparefn){if(comparefn!==void 0)aCallable(comparefn);if(STABLE_SORT)return nativeSort(this,comparefn);return internalSort(aTypedArray(this),getSortCompare(comparefn));},!STABLE_SORT||ACCEPT_INCORRECT_ARGUMENTS);}});// node_modules/core-js/modules/es.typed-array.subarray.js
var require_es_typed_array_subarray=__commonJS({"node_modules/core-js/modules/es.typed-array.subarray.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var toLength=require_to_length();var toAbsoluteIndex=require_to_absolute_index();var aTypedArray=ArrayBufferViewCore.aTypedArray;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;exportTypedArrayMethod("subarray",function subarray(begin,end){var O=aTypedArray(this);var length=O.length;var beginIndex=toAbsoluteIndex(begin,length);var C=getTypedArrayConstructor(O);return new C(O.buffer,O.byteOffset+beginIndex*O.BYTES_PER_ELEMENT,toLength((end===void 0?length:toAbsoluteIndex(end,length))-beginIndex));});}});// node_modules/core-js/modules/es.typed-array.to-locale-string.js
var require_es_typed_array_to_locale_string=__commonJS({"node_modules/core-js/modules/es.typed-array.to-locale-string.js"(){"use strict";var globalThis2=require_global_this();var apply=require_function_apply();var ArrayBufferViewCore=require_array_buffer_view_core();var fails=require_fails();var arraySlice=require_array_slice();var Int8Array2=globalThis2.Int8Array;var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var $toLocaleString=[].toLocaleString;var TO_LOCALE_STRING_BUG=!!Int8Array2&&fails(function(){$toLocaleString.call(new Int8Array2(1));});var FORCED=fails(function(){return[1,2].toLocaleString()!==new Int8Array2([1,2]).toLocaleString();})||!fails(function(){Int8Array2.prototype.toLocaleString.call([1,2]);});exportTypedArrayMethod("toLocaleString",function toLocaleString(){return apply($toLocaleString,TO_LOCALE_STRING_BUG?arraySlice(aTypedArray(this)):aTypedArray(this),arraySlice(arguments));},FORCED);}});// node_modules/core-js/modules/es.typed-array.to-reversed.js
var require_es_typed_array_to_reversed=__commonJS({"node_modules/core-js/modules/es.typed-array.to-reversed.js"(){"use strict";var arrayToReversed=require_array_to_reversed();var ArrayBufferViewCore=require_array_buffer_view_core();var aTypedArray=ArrayBufferViewCore.aTypedArray;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;exportTypedArrayMethod("toReversed",function toReversed(){return arrayToReversed(aTypedArray(this),getTypedArrayConstructor(this));});}});// node_modules/core-js/modules/es.typed-array.to-sorted.js
var require_es_typed_array_to_sorted=__commonJS({"node_modules/core-js/modules/es.typed-array.to-sorted.js"(){"use strict";var ArrayBufferViewCore=require_array_buffer_view_core();var uncurryThis=require_function_uncurry_this();var aCallable=require_a_callable();var arrayFromConstructorAndList=require_array_from_constructor_and_list();var aTypedArray=ArrayBufferViewCore.aTypedArray;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var sort=uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);exportTypedArrayMethod("toSorted",function toSorted(compareFn){if(compareFn!==void 0)aCallable(compareFn);var O=aTypedArray(this);var A=arrayFromConstructorAndList(getTypedArrayConstructor(O),O);return sort(A,compareFn);});}});// node_modules/core-js/modules/es.typed-array.to-string.js
var require_es_typed_array_to_string=__commonJS({"node_modules/core-js/modules/es.typed-array.to-string.js"(){"use strict";var exportTypedArrayMethod=require_array_buffer_view_core().exportTypedArrayMethod;var fails=require_fails();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var Uint8Array2=globalThis2.Uint8Array;var Uint8ArrayPrototype=Uint8Array2&&Uint8Array2.prototype||{};var arrayToString=[].toString;var join=uncurryThis([].join);if(fails(function(){arrayToString.call({});})){arrayToString=function toString(){return join(this);};}var IS_NOT_ARRAY_METHOD=Uint8ArrayPrototype.toString!==arrayToString;exportTypedArrayMethod("toString",arrayToString,IS_NOT_ARRAY_METHOD);}});// node_modules/core-js/modules/es.typed-array.with.js
var require_es_typed_array_with=__commonJS({"node_modules/core-js/modules/es.typed-array.with.js"(){"use strict";var arrayWith=require_array_with();var ArrayBufferViewCore=require_array_buffer_view_core();var isBigIntArray=require_is_big_int_array();var toIntegerOrInfinity=require_to_integer_or_infinity();var toBigInt=require_to_big_int();var aTypedArray=ArrayBufferViewCore.aTypedArray;var getTypedArrayConstructor=ArrayBufferViewCore.getTypedArrayConstructor;var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;var PROPER_ORDER=function(){try{new Int8Array(1)["with"](2,{valueOf:function(){throw 8;}});}catch(error){return error===8;}}();var THROW_ON_NEGATIVE_FRACTIONAL_INDEX=PROPER_ORDER&&function(){try{new Int8Array(1)["with"](-0.5,1);}catch(error){return true;}}();exportTypedArrayMethod("with",{"with":function(index,value){var O=aTypedArray(this);var relativeIndex=toIntegerOrInfinity(index);var actualValue=isBigIntArray(O)?toBigInt(value):+value;return arrayWith(O,getTypedArrayConstructor(O),relativeIndex,actualValue);}}["with"],!PROPER_ORDER||THROW_ON_NEGATIVE_FRACTIONAL_INDEX);}});// node_modules/core-js/internals/an-object-or-undefined.js
var require_an_object_or_undefined=__commonJS({"node_modules/core-js/internals/an-object-or-undefined.js"(exports,module2){"use strict";var isObject=require_is_object();var $String=String;var $TypeError=TypeError;module2.exports=function(argument){if(argument===void 0||isObject(argument))return argument;throw new $TypeError($String(argument)+" is not an object or undefined");};}});// node_modules/core-js/internals/base64-map.js
var require_base64_map=__commonJS({"node_modules/core-js/internals/base64-map.js"(exports,module2){"use strict";var commonAlphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";var base64Alphabet=commonAlphabet+"+/";var base64UrlAlphabet=commonAlphabet+"-_";var inverse=function(characters){var result={};var index=0;for(;index<64;index++)result[characters.charAt(index)]=index;return result;};module2.exports={i2c:base64Alphabet,c2i:inverse(base64Alphabet),i2cUrl:base64UrlAlphabet,c2iUrl:inverse(base64UrlAlphabet)};}});// node_modules/core-js/internals/get-alphabet-option.js
var require_get_alphabet_option=__commonJS({"node_modules/core-js/internals/get-alphabet-option.js"(exports,module2){"use strict";var $TypeError=TypeError;module2.exports=function(options){var alphabet=options&&options.alphabet;if(alphabet===void 0||alphabet==="base64"||alphabet==="base64url")return alphabet||"base64";throw new $TypeError("Incorrect `alphabet` option");};}});// node_modules/core-js/internals/uint8-from-base64.js
var require_uint8_from_base64=__commonJS({"node_modules/core-js/internals/uint8-from-base64.js"(exports,module2){"use strict";var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var anObjectOrUndefined=require_an_object_or_undefined();var aString=require_a_string();var hasOwn=require_has_own_property();var base64Map=require_base64_map();var getAlphabetOption=require_get_alphabet_option();var notDetached=require_array_buffer_not_detached();var base64Alphabet=base64Map.c2i;var base64UrlAlphabet=base64Map.c2iUrl;var SyntaxError2=globalThis2.SyntaxError;var TypeError2=globalThis2.TypeError;var at=uncurryThis("".charAt);var skipAsciiWhitespace=function(string,index){var length=string.length;for(;index<length;index++){var chr=at(string,index);if(chr!==" "&&chr!=="	"&&chr!=="\n"&&chr!=="\f"&&chr!=="\r")break;}return index;};var decodeBase64Chunk=function(chunk,alphabet,throwOnExtraBits){var chunkLength=chunk.length;if(chunkLength<4){chunk+=chunkLength===2?"AA":"A";}var triplet=(alphabet[at(chunk,0)]<<18)+(alphabet[at(chunk,1)]<<12)+(alphabet[at(chunk,2)]<<6)+alphabet[at(chunk,3)];var chunkBytes=[triplet>>16&255,triplet>>8&255,triplet&255];if(chunkLength===2){if(throwOnExtraBits&&chunkBytes[1]!==0){throw new SyntaxError2("Extra bits");}return[chunkBytes[0]];}if(chunkLength===3){if(throwOnExtraBits&&chunkBytes[2]!==0){throw new SyntaxError2("Extra bits");}return[chunkBytes[0],chunkBytes[1]];}return chunkBytes;};var writeBytes=function(bytes,elements,written){var elementsLength=elements.length;for(var index=0;index<elementsLength;index++){bytes[written+index]=elements[index];}return written+elementsLength;};module2.exports=function(string,options,into,maxLength){aString(string);anObjectOrUndefined(options);var alphabet=getAlphabetOption(options)==="base64"?base64Alphabet:base64UrlAlphabet;var lastChunkHandling=options?options.lastChunkHandling:void 0;if(lastChunkHandling===void 0)lastChunkHandling="loose";if(lastChunkHandling!=="loose"&&lastChunkHandling!=="strict"&&lastChunkHandling!=="stop-before-partial"){throw new TypeError2("Incorrect `lastChunkHandling` option");}if(into)notDetached(into.buffer);var stringLength=string.length;var bytes=into||[];var written=0;var read2=0;var chunk="";var index=0;if(maxLength)while(true){index=skipAsciiWhitespace(string,index);if(index===stringLength){if(chunk.length>0){if(lastChunkHandling==="stop-before-partial"){break;}if(lastChunkHandling==="loose"){if(chunk.length===1){throw new SyntaxError2("Malformed padding: exactly one additional character");}written=writeBytes(bytes,decodeBase64Chunk(chunk,alphabet,false),written);}else{throw new SyntaxError2("Missing padding");}}read2=stringLength;break;}var chr=at(string,index);++index;if(chr==="="){if(chunk.length<2){throw new SyntaxError2("Padding is too early");}index=skipAsciiWhitespace(string,index);if(chunk.length===2){if(index===stringLength){if(lastChunkHandling==="stop-before-partial"){break;}throw new SyntaxError2("Malformed padding: only one =");}if(at(string,index)==="="){++index;index=skipAsciiWhitespace(string,index);}}if(index<stringLength){throw new SyntaxError2("Unexpected character after padding");}written=writeBytes(bytes,decodeBase64Chunk(chunk,alphabet,lastChunkHandling==="strict"),written);read2=stringLength;break;}if(!hasOwn(alphabet,chr)){throw new SyntaxError2("Unexpected character");}var remainingBytes=maxLength-written;if(remainingBytes===1&&chunk.length===2||remainingBytes===2&&chunk.length===3){break;}chunk+=chr;if(chunk.length===4){written=writeBytes(bytes,decodeBase64Chunk(chunk,alphabet,false),written);chunk="";read2=index;if(written===maxLength){break;}}}return{bytes,read:read2,written};};}});// node_modules/core-js/modules/es.uint8-array.from-base64.js
var require_es_uint8_array_from_base64=__commonJS({"node_modules/core-js/modules/es.uint8-array.from-base64.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var arrayFromConstructorAndList=require_array_from_constructor_and_list();var $fromBase64=require_uint8_from_base64();var Uint8Array2=globalThis2.Uint8Array;var INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS=!Uint8Array2||!Uint8Array2.fromBase64||!function(){try{Uint8Array2.fromBase64("a");return;}catch(error){}try{Uint8Array2.fromBase64("",null);}catch(error){return true;}}();if(Uint8Array2)$({target:"Uint8Array",stat:true,forced:INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS},{fromBase64:function fromBase64(string){var result=$fromBase64(string,arguments.length>1?arguments[1]:void 0,null,9007199254740991);return arrayFromConstructorAndList(Uint8Array2,result.bytes);}});}});// node_modules/core-js/internals/uint8-from-hex.js
var require_uint8_from_hex=__commonJS({"node_modules/core-js/internals/uint8-from-hex.js"(exports,module2){"use strict";var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var Uint8Array2=globalThis2.Uint8Array;var SyntaxError2=globalThis2.SyntaxError;var parseInt2=globalThis2.parseInt;var min=Math.min;var NOT_HEX=/[^\da-f]/i;var exec=uncurryThis(NOT_HEX.exec);var stringSlice=uncurryThis("".slice);module2.exports=function(string,into){var stringLength=string.length;if(stringLength%2!==0)throw new SyntaxError2("String should be an even number of characters");var maxLength=into?min(into.length,stringLength/2):stringLength/2;var bytes=into||new Uint8Array2(maxLength);var read2=0;var written=0;while(written<maxLength){var hexits=stringSlice(string,read2,read2+=2);if(exec(NOT_HEX,hexits))throw new SyntaxError2("String should only contain hex characters");bytes[written++]=parseInt2(hexits,16);}return{bytes,read:read2};};}});// node_modules/core-js/modules/es.uint8-array.from-hex.js
var require_es_uint8_array_from_hex=__commonJS({"node_modules/core-js/modules/es.uint8-array.from-hex.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var aString=require_a_string();var $fromHex=require_uint8_from_hex();if(globalThis2.Uint8Array)$({target:"Uint8Array",stat:true},{fromHex:function fromHex(string){return $fromHex(aString(string)).bytes;}});}});// node_modules/core-js/internals/an-uint8-array.js
var require_an_uint8_array=__commonJS({"node_modules/core-js/internals/an-uint8-array.js"(exports,module2){"use strict";var classof=require_classof();var $TypeError=TypeError;module2.exports=function(argument){if(classof(argument)==="Uint8Array")return argument;throw new $TypeError("Argument is not an Uint8Array");};}});// node_modules/core-js/modules/es.uint8-array.set-from-base64.js
var require_es_uint8_array_set_from_base64=__commonJS({"node_modules/core-js/modules/es.uint8-array.set-from-base64.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var $fromBase64=require_uint8_from_base64();var anUint8Array=require_an_uint8_array();var Uint8Array2=globalThis2.Uint8Array;var INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS=!Uint8Array2||!Uint8Array2.prototype.setFromBase64||!function(){var target=new Uint8Array2([255,255,255,255,255]);try{target.setFromBase64("",null);return;}catch(error){}try{target.setFromBase64("a");return;}catch(error){}try{target.setFromBase64("MjYyZg===");}catch(error){return target[0]===50&&target[1]===54&&target[2]===50&&target[3]===255&&target[4]===255;}}();if(Uint8Array2)$({target:"Uint8Array",proto:true,forced:INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS},{setFromBase64:function setFromBase64(string){anUint8Array(this);var result=$fromBase64(string,arguments.length>1?arguments[1]:void 0,this,this.length);return{read:result.read,written:result.written};}});}});// node_modules/core-js/modules/es.uint8-array.set-from-hex.js
var require_es_uint8_array_set_from_hex=__commonJS({"node_modules/core-js/modules/es.uint8-array.set-from-hex.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var aString=require_a_string();var anUint8Array=require_an_uint8_array();var notDetached=require_array_buffer_not_detached();var $fromHex=require_uint8_from_hex();if(globalThis2.Uint8Array)$({target:"Uint8Array",proto:true},{setFromHex:function setFromHex(string){anUint8Array(this);aString(string);notDetached(this.buffer);var read2=$fromHex(string,this).read;return{read:read2,written:read2/2};}});}});// node_modules/core-js/modules/es.uint8-array.to-base64.js
var require_es_uint8_array_to_base64=__commonJS({"node_modules/core-js/modules/es.uint8-array.to-base64.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var anObjectOrUndefined=require_an_object_or_undefined();var anUint8Array=require_an_uint8_array();var notDetached=require_array_buffer_not_detached();var base64Map=require_base64_map();var getAlphabetOption=require_get_alphabet_option();var base64Alphabet=base64Map.i2c;var base64UrlAlphabet=base64Map.i2cUrl;var charAt=uncurryThis("".charAt);var Uint8Array2=globalThis2.Uint8Array;var INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS=!Uint8Array2||!Uint8Array2.prototype.toBase64||!function(){try{var target=new Uint8Array2();target.toBase64(null);}catch(error){return true;}}();if(Uint8Array2)$({target:"Uint8Array",proto:true,forced:INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS},{toBase64:function toBase64(){var array=anUint8Array(this);var options=arguments.length?anObjectOrUndefined(arguments[0]):void 0;var alphabet=getAlphabetOption(options)==="base64"?base64Alphabet:base64UrlAlphabet;var omitPadding=!!options&&!!options.omitPadding;notDetached(this.buffer);var result="";var i=0;var length=array.length;var triplet;var at=function(shift){return charAt(alphabet,triplet>>6*shift&63);};for(;i+2<length;i+=3){triplet=(array[i]<<16)+(array[i+1]<<8)+array[i+2];result+=at(3)+at(2)+at(1)+at(0);}if(i+2===length){triplet=(array[i]<<16)+(array[i+1]<<8);result+=at(3)+at(2)+at(1)+(omitPadding?"":"=");}else if(i+1===length){triplet=array[i]<<16;result+=at(3)+at(2)+(omitPadding?"":"==");}return result;}});}});// node_modules/core-js/modules/es.uint8-array.to-hex.js
var require_es_uint8_array_to_hex=__commonJS({"node_modules/core-js/modules/es.uint8-array.to-hex.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var anUint8Array=require_an_uint8_array();var notDetached=require_array_buffer_not_detached();var numberToString=uncurryThis(1.1.toString);var Uint8Array2=globalThis2.Uint8Array;var INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS=!Uint8Array2||!Uint8Array2.prototype.toHex||!function(){try{var target=new Uint8Array2([255,255,255,255,255,255,255,255]);return target.toHex()==="ffffffffffffffff";}catch(error){return false;}}();if(Uint8Array2)$({target:"Uint8Array",proto:true,forced:INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS},{toHex:function toHex(){anUint8Array(this);notDetached(this.buffer);var result="";for(var i=0,length=this.length;i<length;i++){var hex=numberToString(this[i],16);result+=hex.length===1?"0"+hex:hex;}return result;}});}});// node_modules/core-js/modules/es.unescape.js
var require_es_unescape=__commonJS({"node_modules/core-js/modules/es.unescape.js"(){"use strict";var $=require_export();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var fromCharCode=String.fromCharCode;var charAt=uncurryThis("".charAt);var exec=uncurryThis(/./.exec);var stringSlice=uncurryThis("".slice);var hex2=/^[\da-f]{2}$/i;var hex4=/^[\da-f]{4}$/i;$({global:true},{unescape:function unescape(string){var str=toString(string);var result="";var length=str.length;var index=0;var chr,part;while(index<length){chr=charAt(str,index++);if(chr==="%"){if(charAt(str,index)==="u"){part=stringSlice(str,index+1,index+5);if(exec(hex4,part)){result+=fromCharCode(parseInt(part,16));index+=5;continue;}}else{part=stringSlice(str,index,index+2);if(exec(hex2,part)){result+=fromCharCode(parseInt(part,16));index+=2;continue;}}}result+=chr;}return result;}});}});// node_modules/core-js/internals/collection-weak.js
var require_collection_weak=__commonJS({"node_modules/core-js/internals/collection-weak.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var defineBuiltIns=require_define_built_ins();var getWeakData=require_internal_metadata().getWeakData;var anInstance=require_an_instance();var anObject=require_an_object();var isNullOrUndefined=require_is_null_or_undefined();var isObject=require_is_object();var iterate=require_iterate();var ArrayIterationModule=require_array_iteration();var hasOwn=require_has_own_property();var InternalStateModule=require_internal_state();var setInternalState=InternalStateModule.set;var internalStateGetterFor=InternalStateModule.getterFor;var find=ArrayIterationModule.find;var findIndex=ArrayIterationModule.findIndex;var splice=uncurryThis([].splice);var id=0;var uncaughtFrozenStore=function(state){return state.frozen||(state.frozen=new UncaughtFrozenStore());};var UncaughtFrozenStore=function(){this.entries=[];};var findUncaughtFrozen=function(store,key){return find(store.entries,function(it){return it[0]===key;});};UncaughtFrozenStore.prototype={get:function(key){var entry=findUncaughtFrozen(this,key);if(entry)return entry[1];},has:function(key){return!!findUncaughtFrozen(this,key);},set:function(key,value){var entry=findUncaughtFrozen(this,key);if(entry)entry[1]=value;else this.entries.push([key,value]);},"delete":function(key){var index=findIndex(this.entries,function(it){return it[0]===key;});if(~index)splice(this.entries,index,1);return!!~index;}};module2.exports={getConstructor:function(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var Constructor=wrapper(function(that,iterable){anInstance(that,Prototype);setInternalState(that,{type:CONSTRUCTOR_NAME,id:id++,frozen:null});if(!isNullOrUndefined(iterable))iterate(iterable,that[ADDER],{that,AS_ENTRIES:IS_MAP});});var Prototype=Constructor.prototype;var getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME);var define=function(that,key,value){var state=getInternalState(that);var data=getWeakData(anObject(key),true);if(data===true)uncaughtFrozenStore(state).set(key,value);else data[state.id]=value;return that;};defineBuiltIns(Prototype,{// `{ WeakMap, WeakSet }.prototype.delete(key)` methods
// https://tc39.es/ecma262/#sec-weakmap.prototype.delete
// https://tc39.es/ecma262/#sec-weakset.prototype.delete
"delete":function(key){var state=getInternalState(this);if(!isObject(key))return false;var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state)["delete"](key);return data&&hasOwn(data,state.id)&&delete data[state.id];},// `{ WeakMap, WeakSet }.prototype.has(key)` methods
// https://tc39.es/ecma262/#sec-weakmap.prototype.has
// https://tc39.es/ecma262/#sec-weakset.prototype.has
has:function has(key){var state=getInternalState(this);if(!isObject(key))return false;var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state).has(key);return data&&hasOwn(data,state.id);}});defineBuiltIns(Prototype,IS_MAP?{// `WeakMap.prototype.get(key)` method
// https://tc39.es/ecma262/#sec-weakmap.prototype.get
get:function get(key){var state=getInternalState(this);if(isObject(key)){var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state).get(key);if(data)return data[state.id];}},// `WeakMap.prototype.set(key, value)` method
// https://tc39.es/ecma262/#sec-weakmap.prototype.set
set:function set(key,value){return define(this,key,value);}}:{// `WeakSet.prototype.add(value)` method
// https://tc39.es/ecma262/#sec-weakset.prototype.add
add:function add(value){return define(this,value,true);}});return Constructor;}};}});// node_modules/core-js/modules/es.weak-map.constructor.js
var require_es_weak_map_constructor=__commonJS({"node_modules/core-js/modules/es.weak-map.constructor.js"(){"use strict";var FREEZING=require_freezing();var globalThis2=require_global_this();var uncurryThis=require_function_uncurry_this();var defineBuiltIns=require_define_built_ins();var InternalMetadataModule=require_internal_metadata();var collection=require_collection();var collectionWeak=require_collection_weak();var isObject=require_is_object();var enforceInternalState=require_internal_state().enforce;var fails=require_fails();var NATIVE_WEAK_MAP=require_weak_map_basic_detection();var $Object=Object;var isArray=Array.isArray;var isExtensible=$Object.isExtensible;var isFrozen=$Object.isFrozen;var isSealed=$Object.isSealed;var freeze=$Object.freeze;var seal=$Object.seal;var IS_IE11=!globalThis2.ActiveXObject&&"ActiveXObject"in globalThis2;var InternalWeakMap;var wrapper=function(init){return function WeakMap2(){return init(this,arguments.length?arguments[0]:void 0);};};var $WeakMap=collection("WeakMap",wrapper,collectionWeak);var WeakMapPrototype=$WeakMap.prototype;var nativeSet=uncurryThis(WeakMapPrototype.set);var hasMSEdgeFreezingBug=function(){return FREEZING&&fails(function(){var frozenArray=freeze([]);nativeSet(new $WeakMap(),frozenArray,1);return!isFrozen(frozenArray);});};if(NATIVE_WEAK_MAP){if(IS_IE11){InternalWeakMap=collectionWeak.getConstructor(wrapper,"WeakMap",true);InternalMetadataModule.enable();nativeDelete=uncurryThis(WeakMapPrototype["delete"]);nativeHas=uncurryThis(WeakMapPrototype.has);nativeGet=uncurryThis(WeakMapPrototype.get);defineBuiltIns(WeakMapPrototype,{"delete":function(key){if(isObject(key)&&!isExtensible(key)){var state=enforceInternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeDelete(this,key)||state.frozen["delete"](key);}return nativeDelete(this,key);},has:function has(key){if(isObject(key)&&!isExtensible(key)){var state=enforceInternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeHas(this,key)||state.frozen.has(key);}return nativeHas(this,key);},get:function get(key){if(isObject(key)&&!isExtensible(key)){var state=enforceInternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeHas(this,key)?nativeGet(this,key):state.frozen.get(key);}return nativeGet(this,key);},set:function set(key,value){if(isObject(key)&&!isExtensible(key)){var state=enforceInternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();nativeHas(this,key)?nativeSet(this,key,value):state.frozen.set(key,value);}else nativeSet(this,key,value);return this;}});}else if(hasMSEdgeFreezingBug()){defineBuiltIns(WeakMapPrototype,{set:function set(key,value){var arrayIntegrityLevel;if(isArray(key)){if(isFrozen(key))arrayIntegrityLevel=freeze;else if(isSealed(key))arrayIntegrityLevel=seal;}nativeSet(this,key,value);if(arrayIntegrityLevel)arrayIntegrityLevel(key);return this;}});}}var nativeDelete;var nativeHas;var nativeGet;}});// node_modules/core-js/modules/es.weak-map.js
var require_es_weak_map=__commonJS({"node_modules/core-js/modules/es.weak-map.js"(){"use strict";require_es_weak_map_constructor();}});// node_modules/core-js/modules/es.weak-set.constructor.js
var require_es_weak_set_constructor=__commonJS({"node_modules/core-js/modules/es.weak-set.constructor.js"(){"use strict";var collection=require_collection();var collectionWeak=require_collection_weak();collection("WeakSet",function(init){return function WeakSet2(){return init(this,arguments.length?arguments[0]:void 0);};},collectionWeak);}});// node_modules/core-js/modules/es.weak-set.js
var require_es_weak_set=__commonJS({"node_modules/core-js/modules/es.weak-set.js"(){"use strict";require_es_weak_set_constructor();}});// node_modules/core-js/modules/web.atob.js
var require_web_atob=__commonJS({"node_modules/core-js/modules/web.atob.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var getBuiltIn=require_get_built_in();var uncurryThis=require_function_uncurry_this();var call=require_function_call();var fails=require_fails();var toString=require_to_string();var validateArgumentsLength=require_validate_arguments_length();var c2i=require_base64_map().c2i;var disallowed=/[^\d+/a-z]/i;var whitespaces=/[\t\n\f\r ]+/g;var finalEq=/[=]{1,2}$/;var $atob=getBuiltIn("atob");var fromCharCode=String.fromCharCode;var charAt=uncurryThis("".charAt);var replace=uncurryThis("".replace);var exec=uncurryThis(disallowed.exec);var BASIC=!!$atob&&!fails(function(){return $atob("aGk=")!=="hi";});var NO_SPACES_IGNORE=BASIC&&fails(function(){return $atob(" ")!=="";});var NO_ENCODING_CHECK=BASIC&&!fails(function(){$atob("a");});var NO_ARG_RECEIVING_CHECK=BASIC&&!fails(function(){$atob();});var WRONG_ARITY=BASIC&&$atob.length!==1;var FORCED=!BASIC||NO_SPACES_IGNORE||NO_ENCODING_CHECK||NO_ARG_RECEIVING_CHECK||WRONG_ARITY;$({global:true,bind:true,enumerable:true,forced:FORCED},{atob:function atob3(data){validateArgumentsLength(arguments.length,1);if(BASIC&&!NO_SPACES_IGNORE&&!NO_ENCODING_CHECK)return call($atob,globalThis2,data);var string=replace(toString(data),whitespaces,"");var output="";var position=0;var bc=0;var length,chr,bs;if(string.length%4===0){string=replace(string,finalEq,"");}length=string.length;if(length%4===1||exec(disallowed,string)){throw new(getBuiltIn("DOMException"))("The string is not correctly encoded","InvalidCharacterError");}while(position<length){chr=charAt(string,position++);bs=bc%4?bs*64+c2i[chr]:c2i[chr];if(bc++%4)output+=fromCharCode(255&bs>>(-2*bc&6));}return output;}});}});// node_modules/core-js/modules/web.btoa.js
var require_web_btoa=__commonJS({"node_modules/core-js/modules/web.btoa.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var getBuiltIn=require_get_built_in();var uncurryThis=require_function_uncurry_this();var call=require_function_call();var fails=require_fails();var toString=require_to_string();var validateArgumentsLength=require_validate_arguments_length();var i2c=require_base64_map().i2c;var $btoa=getBuiltIn("btoa");var charAt=uncurryThis("".charAt);var charCodeAt=uncurryThis("".charCodeAt);var BASIC=!!$btoa&&!fails(function(){return $btoa("hi")!=="aGk=";});var NO_ARG_RECEIVING_CHECK=BASIC&&!fails(function(){$btoa();});var WRONG_ARG_CONVERSION=BASIC&&fails(function(){return $btoa(null)!=="bnVsbA==";});var WRONG_ARITY=BASIC&&$btoa.length!==1;$({global:true,bind:true,enumerable:true,forced:!BASIC||NO_ARG_RECEIVING_CHECK||WRONG_ARG_CONVERSION||WRONG_ARITY},{btoa:function btoa(data){validateArgumentsLength(arguments.length,1);if(BASIC)return call($btoa,globalThis2,toString(data));var string=toString(data);var output="";var position=0;var map=i2c;var block,charCode;while(charAt(string,position)||(map="=",position%1)){charCode=charCodeAt(string,position+=3/4);if(charCode>255){throw new(getBuiltIn("DOMException"))("The string contains characters outside of the Latin1 range","InvalidCharacterError");}block=block<<8|charCode;output+=charAt(map,63&block>>8-position%1*8);}return output;}});}});// node_modules/core-js/internals/dom-iterables.js
var require_dom_iterables=__commonJS({"node_modules/core-js/internals/dom-iterables.js"(exports,module2){"use strict";module2.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0};}});// node_modules/core-js/internals/dom-token-list-prototype.js
var require_dom_token_list_prototype=__commonJS({"node_modules/core-js/internals/dom-token-list-prototype.js"(exports,module2){"use strict";var documentCreateElement=require_document_create_element();var classList=documentCreateElement("span").classList;var DOMTokenListPrototype=classList&&classList.constructor&&classList.constructor.prototype;module2.exports=DOMTokenListPrototype===Object.prototype?void 0:DOMTokenListPrototype;}});// node_modules/core-js/modules/web.dom-collections.for-each.js
var require_web_dom_collections_for_each=__commonJS({"node_modules/core-js/modules/web.dom-collections.for-each.js"(){"use strict";var globalThis2=require_global_this();var DOMIterables=require_dom_iterables();var DOMTokenListPrototype=require_dom_token_list_prototype();var forEach=require_array_for_each();var createNonEnumerableProperty=require_create_non_enumerable_property();var handlePrototype=function(CollectionPrototype){if(CollectionPrototype&&CollectionPrototype.forEach!==forEach)try{createNonEnumerableProperty(CollectionPrototype,"forEach",forEach);}catch(error){CollectionPrototype.forEach=forEach;}};for(COLLECTION_NAME in DOMIterables){if(DOMIterables[COLLECTION_NAME]){handlePrototype(globalThis2[COLLECTION_NAME]&&globalThis2[COLLECTION_NAME].prototype);}}var COLLECTION_NAME;handlePrototype(DOMTokenListPrototype);}});// node_modules/core-js/modules/web.dom-collections.iterator.js
var require_web_dom_collections_iterator=__commonJS({"node_modules/core-js/modules/web.dom-collections.iterator.js"(){"use strict";var globalThis2=require_global_this();var DOMIterables=require_dom_iterables();var DOMTokenListPrototype=require_dom_token_list_prototype();var ArrayIteratorMethods=require_es_array_iterator();var createNonEnumerableProperty=require_create_non_enumerable_property();var setToStringTag=require_set_to_string_tag();var wellKnownSymbol=require_well_known_symbol();var ITERATOR=wellKnownSymbol("iterator");var ArrayValues=ArrayIteratorMethods.values;var handlePrototype=function(CollectionPrototype,COLLECTION_NAME2){if(CollectionPrototype){if(CollectionPrototype[ITERATOR]!==ArrayValues)try{createNonEnumerableProperty(CollectionPrototype,ITERATOR,ArrayValues);}catch(error){CollectionPrototype[ITERATOR]=ArrayValues;}setToStringTag(CollectionPrototype,COLLECTION_NAME2,true);if(DOMIterables[COLLECTION_NAME2])for(var METHOD_NAME in ArrayIteratorMethods){if(CollectionPrototype[METHOD_NAME]!==ArrayIteratorMethods[METHOD_NAME])try{createNonEnumerableProperty(CollectionPrototype,METHOD_NAME,ArrayIteratorMethods[METHOD_NAME]);}catch(error){CollectionPrototype[METHOD_NAME]=ArrayIteratorMethods[METHOD_NAME];}}}};for(COLLECTION_NAME in DOMIterables){handlePrototype(globalThis2[COLLECTION_NAME]&&globalThis2[COLLECTION_NAME].prototype,COLLECTION_NAME);}var COLLECTION_NAME;handlePrototype(DOMTokenListPrototype,"DOMTokenList");}});// node_modules/core-js/internals/dom-exception-constants.js
var require_dom_exception_constants=__commonJS({"node_modules/core-js/internals/dom-exception-constants.js"(exports,module2){"use strict";module2.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}};}});// node_modules/core-js/modules/web.dom-exception.constructor.js
var require_web_dom_exception_constructor=__commonJS({"node_modules/core-js/modules/web.dom-exception.constructor.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var getBuiltInNodeModule=require_get_built_in_node_module();var fails=require_fails();var create=require_object_create();var createPropertyDescriptor=require_create_property_descriptor();var defineProperty=require_object_define_property().f;var defineBuiltIn=require_define_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var hasOwn=require_has_own_property();var anInstance=require_an_instance();var anObject=require_an_object();var errorToString=require_error_to_string();var normalizeStringArgument=require_normalize_string_argument();var DOMExceptionConstants=require_dom_exception_constants();var clearErrorStack=require_error_stack_clear();var InternalStateModule=require_internal_state();var DESCRIPTORS=require_descriptors();var IS_PURE=require_is_pure();var DOM_EXCEPTION="DOMException";var DATA_CLONE_ERR="DATA_CLONE_ERR";var Error2=getBuiltIn("Error");var NativeDOMException=getBuiltIn(DOM_EXCEPTION)||function(){try{var MessageChannel2=getBuiltIn("MessageChannel")||getBuiltInNodeModule("worker_threads").MessageChannel;new MessageChannel2().port1.postMessage(/* @__PURE__ */new WeakMap());}catch(error){if(error.name===DATA_CLONE_ERR&&error.code===25)return error.constructor;}}();var NativeDOMExceptionPrototype=NativeDOMException&&NativeDOMException.prototype;var ErrorPrototype=Error2.prototype;var setInternalState=InternalStateModule.set;var getInternalState=InternalStateModule.getterFor(DOM_EXCEPTION);var HAS_STACK="stack"in new Error2(DOM_EXCEPTION);var codeFor=function(name){return hasOwn(DOMExceptionConstants,name)&&DOMExceptionConstants[name].m?DOMExceptionConstants[name].c:0;};var $DOMException=function DOMException(){anInstance(this,DOMExceptionPrototype);var argumentsLength=arguments.length;var message=normalizeStringArgument(argumentsLength<1?void 0:arguments[0]);var name=normalizeStringArgument(argumentsLength<2?void 0:arguments[1],"Error");var code=codeFor(name);setInternalState(this,{type:DOM_EXCEPTION,name,message,code});if(!DESCRIPTORS){this.name=name;this.message=message;this.code=code;}if(HAS_STACK){var error=new Error2(message);error.name=DOM_EXCEPTION;defineProperty(this,"stack",createPropertyDescriptor(1,clearErrorStack(error.stack,1)));}};var DOMExceptionPrototype=$DOMException.prototype=create(ErrorPrototype);var createGetterDescriptor=function(get){return{enumerable:true,configurable:true,get};};var getterFor=function(key2){return createGetterDescriptor(function(){return getInternalState(this)[key2];});};if(DESCRIPTORS){defineBuiltInAccessor(DOMExceptionPrototype,"code",getterFor("code"));defineBuiltInAccessor(DOMExceptionPrototype,"message",getterFor("message"));defineBuiltInAccessor(DOMExceptionPrototype,"name",getterFor("name"));}defineProperty(DOMExceptionPrototype,"constructor",createPropertyDescriptor(1,$DOMException));var INCORRECT_CONSTRUCTOR=fails(function(){return!(new NativeDOMException()instanceof Error2);});var INCORRECT_TO_STRING=INCORRECT_CONSTRUCTOR||fails(function(){return ErrorPrototype.toString!==errorToString||String(new NativeDOMException(1,2))!=="2: 1";});var INCORRECT_CODE=INCORRECT_CONSTRUCTOR||fails(function(){return new NativeDOMException(1,"DataCloneError").code!==25;});var MISSED_CONSTANTS=INCORRECT_CONSTRUCTOR||NativeDOMException[DATA_CLONE_ERR]!==25||NativeDOMExceptionPrototype[DATA_CLONE_ERR]!==25;var FORCED_CONSTRUCTOR=IS_PURE?INCORRECT_TO_STRING||INCORRECT_CODE||MISSED_CONSTANTS:INCORRECT_CONSTRUCTOR;$({global:true,constructor:true,forced:FORCED_CONSTRUCTOR},{DOMException:FORCED_CONSTRUCTOR?$DOMException:NativeDOMException});var PolyfilledDOMException=getBuiltIn(DOM_EXCEPTION);var PolyfilledDOMExceptionPrototype=PolyfilledDOMException.prototype;if(INCORRECT_TO_STRING&&(IS_PURE||NativeDOMException===PolyfilledDOMException)){defineBuiltIn(PolyfilledDOMExceptionPrototype,"toString",errorToString);}if(INCORRECT_CODE&&DESCRIPTORS&&NativeDOMException===PolyfilledDOMException){defineBuiltInAccessor(PolyfilledDOMExceptionPrototype,"code",createGetterDescriptor(function(){return codeFor(anObject(this).name);}));}for(key in DOMExceptionConstants)if(hasOwn(DOMExceptionConstants,key)){constant=DOMExceptionConstants[key];constantName=constant.s;descriptor=createPropertyDescriptor(6,constant.c);if(!hasOwn(PolyfilledDOMException,constantName)){defineProperty(PolyfilledDOMException,constantName,descriptor);}if(!hasOwn(PolyfilledDOMExceptionPrototype,constantName)){defineProperty(PolyfilledDOMExceptionPrototype,constantName,descriptor);}}var constant;var constantName;var descriptor;var key;}});// node_modules/core-js/modules/web.dom-exception.stack.js
var require_web_dom_exception_stack=__commonJS({"node_modules/core-js/modules/web.dom-exception.stack.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var getBuiltIn=require_get_built_in();var createPropertyDescriptor=require_create_property_descriptor();var defineProperty=require_object_define_property().f;var hasOwn=require_has_own_property();var anInstance=require_an_instance();var inheritIfRequired=require_inherit_if_required();var normalizeStringArgument=require_normalize_string_argument();var DOMExceptionConstants=require_dom_exception_constants();var clearErrorStack=require_error_stack_clear();var DESCRIPTORS=require_descriptors();var IS_PURE=require_is_pure();var DOM_EXCEPTION="DOMException";var Error2=getBuiltIn("Error");var NativeDOMException=getBuiltIn(DOM_EXCEPTION);var $DOMException=function DOMException(){anInstance(this,DOMExceptionPrototype);var argumentsLength=arguments.length;var message=normalizeStringArgument(argumentsLength<1?void 0:arguments[0]);var name=normalizeStringArgument(argumentsLength<2?void 0:arguments[1],"Error");var that=new NativeDOMException(message,name);var error=new Error2(message);error.name=DOM_EXCEPTION;defineProperty(that,"stack",createPropertyDescriptor(1,clearErrorStack(error.stack,1)));inheritIfRequired(that,this,$DOMException);return that;};var DOMExceptionPrototype=$DOMException.prototype=NativeDOMException.prototype;var ERROR_HAS_STACK="stack"in new Error2(DOM_EXCEPTION);var DOM_EXCEPTION_HAS_STACK="stack"in new NativeDOMException(1,2);var descriptor=NativeDOMException&&DESCRIPTORS&&Object.getOwnPropertyDescriptor(globalThis2,DOM_EXCEPTION);var BUGGY_DESCRIPTOR=!!descriptor&&!(descriptor.writable&&descriptor.configurable);var FORCED_CONSTRUCTOR=ERROR_HAS_STACK&&!BUGGY_DESCRIPTOR&&!DOM_EXCEPTION_HAS_STACK;$({global:true,constructor:true,forced:IS_PURE||FORCED_CONSTRUCTOR},{// TODO: fix export logic
DOMException:FORCED_CONSTRUCTOR?$DOMException:NativeDOMException});var PolyfilledDOMException=getBuiltIn(DOM_EXCEPTION);var PolyfilledDOMExceptionPrototype=PolyfilledDOMException.prototype;if(PolyfilledDOMExceptionPrototype.constructor!==PolyfilledDOMException){if(!IS_PURE){defineProperty(PolyfilledDOMExceptionPrototype,"constructor",createPropertyDescriptor(1,PolyfilledDOMException));}for(key in DOMExceptionConstants)if(hasOwn(DOMExceptionConstants,key)){constant=DOMExceptionConstants[key];constantName=constant.s;if(!hasOwn(PolyfilledDOMException,constantName)){defineProperty(PolyfilledDOMException,constantName,createPropertyDescriptor(6,constant.c));}}}var constant;var constantName;var key;}});// node_modules/core-js/modules/web.dom-exception.to-string-tag.js
var require_web_dom_exception_to_string_tag=__commonJS({"node_modules/core-js/modules/web.dom-exception.to-string-tag.js"(){"use strict";var getBuiltIn=require_get_built_in();var setToStringTag=require_set_to_string_tag();var DOM_EXCEPTION="DOMException";setToStringTag(getBuiltIn(DOM_EXCEPTION),DOM_EXCEPTION);}});// node_modules/core-js/modules/web.clear-immediate.js
var require_web_clear_immediate=__commonJS({"node_modules/core-js/modules/web.clear-immediate.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var clearImmediate=require_task().clear;$({global:true,bind:true,enumerable:true,forced:globalThis2.clearImmediate!==clearImmediate},{clearImmediate});}});// node_modules/core-js/internals/schedulers-fix.js
var require_schedulers_fix=__commonJS({"node_modules/core-js/internals/schedulers-fix.js"(exports,module2){"use strict";var globalThis2=require_global_this();var apply=require_function_apply();var isCallable=require_is_callable();var ENVIRONMENT=require_environment();var USER_AGENT=require_environment_user_agent();var arraySlice=require_array_slice();var validateArgumentsLength=require_validate_arguments_length();var Function2=globalThis2.Function;var WRAP=/MSIE .\./.test(USER_AGENT)||ENVIRONMENT==="BUN"&&function(){var version=globalThis2.Bun.version.split(".");return version.length<3||version[0]==="0"&&(version[1]<3||version[1]==="3"&&version[2]==="0");}();module2.exports=function(scheduler,hasTimeArg){var firstParamIndex=hasTimeArg?2:1;return WRAP?function(handler,timeout){var boundArgs=validateArgumentsLength(arguments.length,1)>firstParamIndex;var fn=isCallable(handler)?handler:Function2(handler);var params=boundArgs?arraySlice(arguments,firstParamIndex):[];var callback=boundArgs?function(){apply(fn,this,params);}:fn;return hasTimeArg?scheduler(callback,timeout):scheduler(callback);}:scheduler;};}});// node_modules/core-js/modules/web.set-immediate.js
var require_web_set_immediate=__commonJS({"node_modules/core-js/modules/web.set-immediate.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var setTask=require_task().set;var schedulersFix=require_schedulers_fix();var setImmediate=globalThis2.setImmediate?schedulersFix(setTask,false):setTask;$({global:true,bind:true,enumerable:true,forced:globalThis2.setImmediate!==setImmediate},{setImmediate});}});// node_modules/core-js/modules/web.immediate.js
var require_web_immediate=__commonJS({"node_modules/core-js/modules/web.immediate.js"(){"use strict";require_web_clear_immediate();require_web_set_immediate();}});// node_modules/core-js/modules/web.queue-microtask.js
var require_web_queue_microtask=__commonJS({"node_modules/core-js/modules/web.queue-microtask.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var microtask=require_microtask();var aCallable=require_a_callable();var validateArgumentsLength=require_validate_arguments_length();var fails=require_fails();var DESCRIPTORS=require_descriptors();var WRONG_ARITY=fails(function(){return DESCRIPTORS&&Object.getOwnPropertyDescriptor(globalThis2,"queueMicrotask").value.length!==1;});$({global:true,enumerable:true,dontCallGetSet:true,forced:WRONG_ARITY},{queueMicrotask:function queueMicrotask(fn){validateArgumentsLength(arguments.length,1);microtask(aCallable(fn));}});}});// node_modules/core-js/modules/web.self.js
var require_web_self=__commonJS({"node_modules/core-js/modules/web.self.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var defineBuiltInAccessor=require_define_built_in_accessor();var DESCRIPTORS=require_descriptors();var $TypeError=TypeError;var defineProperty=Object.defineProperty;var INCORRECT_VALUE=globalThis2.self!==globalThis2;try{if(DESCRIPTORS){descriptor=Object.getOwnPropertyDescriptor(globalThis2,"self");if(INCORRECT_VALUE||!descriptor||!descriptor.get||!descriptor.enumerable){defineBuiltInAccessor(globalThis2,"self",{get:function self2(){return globalThis2;},set:function self2(value){if(this!==globalThis2)throw new $TypeError("Illegal invocation");defineProperty(globalThis2,"self",{value,writable:true,configurable:true,enumerable:true});},configurable:true,enumerable:true});}}else $({global:true,simple:true,forced:INCORRECT_VALUE},{self:globalThis2});}catch(error){}var descriptor;}});// node_modules/core-js/modules/web.structured-clone.js
var require_web_structured_clone=__commonJS({"node_modules/core-js/modules/web.structured-clone.js"(){"use strict";var IS_PURE=require_is_pure();var $=require_export();var globalThis2=require_global_this();var getBuiltIn=require_get_built_in();var uncurryThis=require_function_uncurry_this();var fails=require_fails();var uid=require_uid();var isCallable=require_is_callable();var isConstructor=require_is_constructor();var isNullOrUndefined=require_is_null_or_undefined();var isObject=require_is_object();var isSymbol=require_is_symbol();var iterate=require_iterate();var anObject=require_an_object();var classof=require_classof();var hasOwn=require_has_own_property();var createProperty=require_create_property();var createNonEnumerableProperty=require_create_non_enumerable_property();var lengthOfArrayLike=require_length_of_array_like();var validateArgumentsLength=require_validate_arguments_length();var getRegExpFlags=require_regexp_get_flags();var MapHelpers=require_map_helpers();var SetHelpers=require_set_helpers();var setIterate=require_set_iterate();var detachTransferable=require_detach_transferable();var ERROR_STACK_INSTALLABLE=require_error_stack_installable();var PROPER_STRUCTURED_CLONE_TRANSFER=require_structured_clone_proper_transfer();var Object2=globalThis2.Object;var Array2=globalThis2.Array;var Date2=globalThis2.Date;var Error2=globalThis2.Error;var TypeError2=globalThis2.TypeError;var PerformanceMark=globalThis2.PerformanceMark;var DOMException=getBuiltIn("DOMException");var Map2=MapHelpers.Map;var mapHas=MapHelpers.has;var mapGet=MapHelpers.get;var mapSet=MapHelpers.set;var Set2=SetHelpers.Set;var setAdd=SetHelpers.add;var setHas=SetHelpers.has;var objectKeys=getBuiltIn("Object","keys");var push=uncurryThis([].push);var thisBooleanValue=uncurryThis(true.valueOf);var thisNumberValue=uncurryThis(1.1.valueOf);var thisStringValue=uncurryThis("".valueOf);var thisTimeValue=uncurryThis(Date2.prototype.getTime);var PERFORMANCE_MARK=uid("structuredClone");var DATA_CLONE_ERROR="DataCloneError";var TRANSFERRING="Transferring";var checkBasicSemantic=function(structuredCloneImplementation){return!fails(function(){var set1=new globalThis2.Set([7]);var set2=structuredCloneImplementation(set1);var number=structuredCloneImplementation(Object2(7));return set2===set1||!set2.has(7)||!isObject(number)||+number!==7;})&&structuredCloneImplementation;};var checkErrorsCloning=function(structuredCloneImplementation,$Error){return!fails(function(){var error=new $Error();var test=structuredCloneImplementation({a:error,b:error});return!(test&&test.a===test.b&&test.a instanceof $Error&&test.a.stack===error.stack);});};var checkNewErrorsCloningSemantic=function(structuredCloneImplementation){return!fails(function(){var test=structuredCloneImplementation(new globalThis2.AggregateError([1],PERFORMANCE_MARK,{cause:3}));return test.name!=="AggregateError"||test.errors[0]!==1||test.message!==PERFORMANCE_MARK||test.cause!==3;});};var nativeStructuredClone=globalThis2.structuredClone;var FORCED_REPLACEMENT=IS_PURE||!checkErrorsCloning(nativeStructuredClone,Error2)||!checkErrorsCloning(nativeStructuredClone,DOMException)||!checkNewErrorsCloningSemantic(nativeStructuredClone);var structuredCloneFromMark=!nativeStructuredClone&&checkBasicSemantic(function(value){return new PerformanceMark(PERFORMANCE_MARK,{detail:value}).detail;});var nativeRestrictedStructuredClone=checkBasicSemantic(nativeStructuredClone)||structuredCloneFromMark;var throwUncloneable=function(type){throw new DOMException("Uncloneable type: "+type,DATA_CLONE_ERROR);};var throwUnpolyfillable=function(type,action){throw new DOMException((action||"Cloning")+" of "+type+" cannot be properly polyfilled in this engine",DATA_CLONE_ERROR);};var tryNativeRestrictedStructuredClone=function(value,type){if(!nativeRestrictedStructuredClone)throwUnpolyfillable(type);return nativeRestrictedStructuredClone(value);};var createDataTransfer=function(){var dataTransfer;try{dataTransfer=new globalThis2.DataTransfer();}catch(error){try{dataTransfer=new globalThis2.ClipboardEvent("").clipboardData;}catch(error2){}}return dataTransfer&&dataTransfer.items&&dataTransfer.files?dataTransfer:null;};var cloneBuffer=function(value,map,$type){if(mapHas(map,value))return mapGet(map,value);var type=$type||classof(value);var clone,length,options,source,target,i;if(type==="SharedArrayBuffer"){if(nativeRestrictedStructuredClone)clone=nativeRestrictedStructuredClone(value);else clone=value;}else{var DataView2=globalThis2.DataView;if(!DataView2&&!isCallable(value.slice))throwUnpolyfillable("ArrayBuffer");try{if(isCallable(value.slice)&&!value.resizable){clone=value.slice(0);}else{length=value.byteLength;options="maxByteLength"in value?{maxByteLength:value.maxByteLength}:void 0;clone=new ArrayBuffer(length,options);source=new DataView2(value);target=new DataView2(clone);for(i=0;i<length;i++){target.setUint8(i,source.getUint8(i));}}}catch(error){throw new DOMException("ArrayBuffer is detached",DATA_CLONE_ERROR);}}mapSet(map,value,clone);return clone;};var cloneView=function(value,type,offset,length,map){var C=globalThis2[type];if(!isObject(C))throwUnpolyfillable(type);return new C(cloneBuffer(value.buffer,map),offset,length);};var structuredCloneInternal=function(value,map){if(isSymbol(value))throwUncloneable("Symbol");if(!isObject(value))return value;if(map){if(mapHas(map,value))return mapGet(map,value);}else map=new Map2();var type=classof(value);var C,name,cloned,dataTransfer,i,length,keys,key;switch(type){case"Array":cloned=Array2(lengthOfArrayLike(value));break;case"Object":cloned={};break;case"Map":cloned=new Map2();break;case"Set":cloned=new Set2();break;case"RegExp":cloned=new RegExp(value.source,getRegExpFlags(value));break;case"Error":name=value.name;switch(name){case"AggregateError":cloned=new(getBuiltIn(name))([]);break;case"EvalError":case"RangeError":case"ReferenceError":case"SuppressedError":case"SyntaxError":case"TypeError":case"URIError":cloned=new(getBuiltIn(name))();break;case"CompileError":case"LinkError":case"RuntimeError":cloned=new(getBuiltIn("WebAssembly",name))();break;default:cloned=new Error2();}break;case"DOMException":cloned=new DOMException(value.message,value.name);break;case"ArrayBuffer":case"SharedArrayBuffer":cloned=cloneBuffer(value,map,type);break;case"DataView":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float16Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":length=type==="DataView"?value.byteLength:value.length;cloned=cloneView(value,type,value.byteOffset,length,map);break;case"DOMQuad":try{cloned=new DOMQuad(structuredCloneInternal(value.p1,map),structuredCloneInternal(value.p2,map),structuredCloneInternal(value.p3,map),structuredCloneInternal(value.p4,map));}catch(error){cloned=tryNativeRestrictedStructuredClone(value,type);}break;case"File":if(nativeRestrictedStructuredClone)try{cloned=nativeRestrictedStructuredClone(value);if(classof(cloned)!==type)cloned=void 0;}catch(error){}if(!cloned)try{cloned=new File([value],value.name,value);}catch(error){}if(!cloned)throwUnpolyfillable(type);break;case"FileList":dataTransfer=createDataTransfer();if(dataTransfer){for(i=0,length=lengthOfArrayLike(value);i<length;i++){dataTransfer.items.add(structuredCloneInternal(value[i],map));}cloned=dataTransfer.files;}else cloned=tryNativeRestrictedStructuredClone(value,type);break;case"ImageData":try{cloned=new ImageData(structuredCloneInternal(value.data,map),value.width,value.height,{colorSpace:value.colorSpace});}catch(error){cloned=tryNativeRestrictedStructuredClone(value,type);}break;default:if(nativeRestrictedStructuredClone){cloned=nativeRestrictedStructuredClone(value);}else switch(type){case"BigInt":cloned=Object2(value.valueOf());break;case"Boolean":cloned=Object2(thisBooleanValue(value));break;case"Number":cloned=Object2(thisNumberValue(value));break;case"String":cloned=Object2(thisStringValue(value));break;case"Date":cloned=new Date2(thisTimeValue(value));break;case"Blob":try{cloned=value.slice(0,value.size,value.type);}catch(error){throwUnpolyfillable(type);}break;case"DOMPoint":case"DOMPointReadOnly":C=globalThis2[type];try{cloned=C.fromPoint?C.fromPoint(value):new C(value.x,value.y,value.z,value.w);}catch(error){throwUnpolyfillable(type);}break;case"DOMRect":case"DOMRectReadOnly":C=globalThis2[type];try{cloned=C.fromRect?C.fromRect(value):new C(value.x,value.y,value.width,value.height);}catch(error){throwUnpolyfillable(type);}break;case"DOMMatrix":case"DOMMatrixReadOnly":C=globalThis2[type];try{cloned=C.fromMatrix?C.fromMatrix(value):new C(value);}catch(error){throwUnpolyfillable(type);}break;case"AudioData":case"VideoFrame":if(!isCallable(value.clone))throwUnpolyfillable(type);try{cloned=value.clone();}catch(error){throwUncloneable(type);}break;case"CropTarget":case"CryptoKey":case"FileSystemDirectoryHandle":case"FileSystemFileHandle":case"FileSystemHandle":case"GPUCompilationInfo":case"GPUCompilationMessage":case"ImageBitmap":case"RTCCertificate":case"WebAssembly.Module":throwUnpolyfillable(type);// break omitted
default:throwUncloneable(type);}}mapSet(map,value,cloned);switch(type){case"Array":case"Object":keys=objectKeys(value);for(i=0,length=lengthOfArrayLike(keys);i<length;i++){key=keys[i];createProperty(cloned,key,structuredCloneInternal(value[key],map));}break;case"Map":value.forEach(function(v,k){mapSet(cloned,structuredCloneInternal(k,map),structuredCloneInternal(v,map));});break;case"Set":value.forEach(function(v){setAdd(cloned,structuredCloneInternal(v,map));});break;case"Error":createNonEnumerableProperty(cloned,"message",structuredCloneInternal(value.message,map));if(hasOwn(value,"cause")){createNonEnumerableProperty(cloned,"cause",structuredCloneInternal(value.cause,map));}if(name==="AggregateError"){cloned.errors=structuredCloneInternal(value.errors,map);}else if(name==="SuppressedError"){cloned.error=structuredCloneInternal(value.error,map);cloned.suppressed=structuredCloneInternal(value.suppressed,map);}// break omitted
case"DOMException":if(ERROR_STACK_INSTALLABLE){createNonEnumerableProperty(cloned,"stack",structuredCloneInternal(value.stack,map));}}return cloned;};var tryToTransfer=function(rawTransfer,map){if(!isObject(rawTransfer))throw new TypeError2("Transfer option cannot be converted to a sequence");var transfer=[];iterate(rawTransfer,function(value2){push(transfer,anObject(value2));});var i=0;var length=lengthOfArrayLike(transfer);var buffers=new Set2();var value,type,C,transferred,canvas,context;while(i<length){value=transfer[i++];type=classof(value);if(type==="ArrayBuffer"?setHas(buffers,value):mapHas(map,value)){throw new DOMException("Duplicate transferable",DATA_CLONE_ERROR);}if(type==="ArrayBuffer"){setAdd(buffers,value);continue;}if(PROPER_STRUCTURED_CLONE_TRANSFER){transferred=nativeStructuredClone(value,{transfer:[value]});}else switch(type){case"ImageBitmap":C=globalThis2.OffscreenCanvas;if(!isConstructor(C))throwUnpolyfillable(type,TRANSFERRING);try{canvas=new C(value.width,value.height);context=canvas.getContext("bitmaprenderer");context.transferFromImageBitmap(value);transferred=canvas.transferToImageBitmap();}catch(error){}break;case"AudioData":case"VideoFrame":if(!isCallable(value.clone)||!isCallable(value.close))throwUnpolyfillable(type,TRANSFERRING);try{transferred=value.clone();value.close();}catch(error){}break;case"MediaSourceHandle":case"MessagePort":case"MIDIAccess":case"OffscreenCanvas":case"ReadableStream":case"RTCDataChannel":case"TransformStream":case"WebTransportReceiveStream":case"WebTransportSendStream":case"WritableStream":throwUnpolyfillable(type,TRANSFERRING);}if(transferred===void 0)throw new DOMException("This object cannot be transferred: "+type,DATA_CLONE_ERROR);mapSet(map,value,transferred);}return buffers;};var detachBuffers=function(buffers){setIterate(buffers,function(buffer){if(PROPER_STRUCTURED_CLONE_TRANSFER){nativeRestrictedStructuredClone(buffer,{transfer:[buffer]});}else if(isCallable(buffer.transfer)){buffer.transfer();}else if(detachTransferable){detachTransferable(buffer);}else{throwUnpolyfillable("ArrayBuffer",TRANSFERRING);}});};$({global:true,enumerable:true,sham:!PROPER_STRUCTURED_CLONE_TRANSFER,forced:FORCED_REPLACEMENT},{structuredClone:function structuredClone(value){var options=validateArgumentsLength(arguments.length,1)>1&&!isNullOrUndefined(arguments[1])?anObject(arguments[1]):void 0;var transfer=options?options.transfer:void 0;var map,buffers;if(transfer!==void 0){map=new Map2();buffers=tryToTransfer(transfer,map);}var clone=structuredCloneInternal(value,map);if(buffers)detachBuffers(buffers);return clone;}});}});// node_modules/core-js/modules/web.set-interval.js
var require_web_set_interval=__commonJS({"node_modules/core-js/modules/web.set-interval.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var schedulersFix=require_schedulers_fix();var setInterval2=schedulersFix(globalThis2.setInterval,true);$({global:true,bind:true,forced:globalThis2.setInterval!==setInterval2},{setInterval:setInterval2});}});// node_modules/core-js/modules/web.set-timeout.js
var require_web_set_timeout=__commonJS({"node_modules/core-js/modules/web.set-timeout.js"(){"use strict";var $=require_export();var globalThis2=require_global_this();var schedulersFix=require_schedulers_fix();var setTimeout2=schedulersFix(globalThis2.setTimeout,true);$({global:true,bind:true,forced:globalThis2.setTimeout!==setTimeout2},{setTimeout:setTimeout2});}});// node_modules/core-js/modules/web.timers.js
var require_web_timers=__commonJS({"node_modules/core-js/modules/web.timers.js"(){"use strict";require_web_set_interval();require_web_set_timeout();}});// node_modules/core-js/internals/url-constructor-detection.js
var require_url_constructor_detection=__commonJS({"node_modules/core-js/internals/url-constructor-detection.js"(exports,module2){"use strict";var fails=require_fails();var wellKnownSymbol=require_well_known_symbol();var DESCRIPTORS=require_descriptors();var IS_PURE=require_is_pure();var ITERATOR=wellKnownSymbol("iterator");module2.exports=!fails(function(){var url=new URL("b?a=1&b=2&c=3","https://a");var params=url.searchParams;var params2=new URLSearchParams("a=1&a=2&b=3");var result="";url.pathname="c%20d";params.forEach(function(value,key){params["delete"]("b");result+=key+value;});params2["delete"]("a",2);params2["delete"]("b",void 0);return IS_PURE&&(!url.toJSON||!params2.has("a",1)||params2.has("a",2)||!params2.has("a",void 0)||params2.has("b"))||!params.size&&(IS_PURE||!DESCRIPTORS)||!params.sort||url.href!=="https://a/c%20d?a=1&c=3"||params.get("c")!=="3"||String(new URLSearchParams("?a=1"))!=="a=1"||!params[ITERATOR]||new URL("https://a@b").username!=="a"||new URLSearchParams(new URLSearchParams("a=b")).get("a")!=="b"||new URL("https://\u0442\u0435\u0441\u0442").host!=="xn--e1aybc"||new URL("https://a#\u0431").hash!=="#%D0%B1"||result!=="a1c3"||new URL("https://x",void 0).host!=="x";});}});// node_modules/core-js/internals/string-punycode-to-ascii.js
var require_string_punycode_to_ascii=__commonJS({"node_modules/core-js/internals/string-punycode-to-ascii.js"(exports,module2){"use strict";var uncurryThis=require_function_uncurry_this();var maxInt=2147483647;var base=36;var tMin=1;var tMax=26;var skew=38;var damp=700;var initialBias=72;var initialN=128;var delimiter="-";var regexNonASCII=/[^\0-\u007E]/;var regexSeparators=/[.\u3002\uFF0E\uFF61]/g;var OVERFLOW_ERROR="Overflow: input needs wider integers to process";var baseMinusTMin=base-tMin;var $RangeError=RangeError;var exec=uncurryThis(regexSeparators.exec);var floor=Math.floor;var fromCharCode=String.fromCharCode;var charCodeAt=uncurryThis("".charCodeAt);var join=uncurryThis([].join);var push=uncurryThis([].push);var replace=uncurryThis("".replace);var split=uncurryThis("".split);var toLowerCase=uncurryThis("".toLowerCase);var ucs2decode=function(string){var output=[];var counter=0;var length=string.length;while(counter<length){var value=charCodeAt(string,counter++);if(value>=55296&&value<=56319&&counter<length){var extra=charCodeAt(string,counter++);if((extra&64512)===56320){push(output,((value&1023)<<10)+(extra&1023)+65536);}else{push(output,value);counter--;}}else{push(output,value);}}return output;};var digitToBasic=function(digit){return digit+22+75*(digit<26);};var adapt=function(delta,numPoints,firstTime){var k=0;delta=firstTime?floor(delta/damp):delta>>1;delta+=floor(delta/numPoints);while(delta>baseMinusTMin*tMax>>1){delta=floor(delta/baseMinusTMin);k+=base;}return floor(k+(baseMinusTMin+1)*delta/(delta+skew));};var encode=function(input){var output=[];input=ucs2decode(input);var inputLength=input.length;var n=initialN;var delta=0;var bias=initialBias;var i,currentValue;for(i=0;i<input.length;i++){currentValue=input[i];if(currentValue<128){push(output,fromCharCode(currentValue));}}var basicLength=output.length;var handledCPCount=basicLength;if(basicLength){push(output,delimiter);}while(handledCPCount<inputLength){var m=maxInt;for(i=0;i<input.length;i++){currentValue=input[i];if(currentValue>=n&&currentValue<m){m=currentValue;}}var handledCPCountPlusOne=handledCPCount+1;if(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){throw new $RangeError(OVERFLOW_ERROR);}delta+=(m-n)*handledCPCountPlusOne;n=m;for(i=0;i<input.length;i++){currentValue=input[i];if(currentValue<n&&++delta>maxInt){throw new $RangeError(OVERFLOW_ERROR);}if(currentValue===n){var q=delta;var k=base;while(true){var t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(q<t)break;var qMinusT=q-t;var baseMinusT=base-t;push(output,fromCharCode(digitToBasic(t+qMinusT%baseMinusT)));q=floor(qMinusT/baseMinusT);k+=base;}push(output,fromCharCode(digitToBasic(q)));bias=adapt(delta,handledCPCountPlusOne,handledCPCount===basicLength);delta=0;handledCPCount++;}}delta++;n++;}return join(output,"");};module2.exports=function(input){var encoded=[];var labels=split(replace(toLowerCase(input),regexSeparators,"."),".");var i,label;for(i=0;i<labels.length;i++){label=labels[i];push(encoded,exec(regexNonASCII,label)?"xn--"+encode(label):label);}return join(encoded,".");};}});// node_modules/core-js/modules/web.url-search-params.constructor.js
var require_web_url_search_params_constructor=__commonJS({"node_modules/core-js/modules/web.url-search-params.constructor.js"(exports,module2){"use strict";require_es_array_iterator();require_es_string_from_code_point();var $=require_export();var globalThis2=require_global_this();var safeGetBuiltIn=require_safe_get_built_in();var getBuiltIn=require_get_built_in();var call=require_function_call();var uncurryThis=require_function_uncurry_this();var DESCRIPTORS=require_descriptors();var USE_NATIVE_URL=require_url_constructor_detection();var defineBuiltIn=require_define_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var defineBuiltIns=require_define_built_ins();var setToStringTag=require_set_to_string_tag();var createIteratorConstructor=require_iterator_create_constructor();var InternalStateModule=require_internal_state();var anInstance=require_an_instance();var isCallable=require_is_callable();var hasOwn=require_has_own_property();var bind=require_function_bind_context();var classof=require_classof();var anObject=require_an_object();var isObject=require_is_object();var $toString=require_to_string();var create=require_object_create();var createPropertyDescriptor=require_create_property_descriptor();var getIterator=require_get_iterator();var getIteratorMethod=require_get_iterator_method();var createIterResultObject=require_create_iter_result_object();var validateArgumentsLength=require_validate_arguments_length();var wellKnownSymbol=require_well_known_symbol();var arraySort=require_array_sort();var ITERATOR=wellKnownSymbol("iterator");var URL_SEARCH_PARAMS="URLSearchParams";var URL_SEARCH_PARAMS_ITERATOR=URL_SEARCH_PARAMS+"Iterator";var setInternalState=InternalStateModule.set;var getInternalParamsState=InternalStateModule.getterFor(URL_SEARCH_PARAMS);var getInternalIteratorState=InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);var nativeFetch=safeGetBuiltIn("fetch");var NativeRequest=safeGetBuiltIn("Request");var Headers=safeGetBuiltIn("Headers");var RequestPrototype=NativeRequest&&NativeRequest.prototype;var HeadersPrototype=Headers&&Headers.prototype;var TypeError2=globalThis2.TypeError;var encodeURIComponent2=globalThis2.encodeURIComponent;var fromCharCode=String.fromCharCode;var fromCodePoint=getBuiltIn("String","fromCodePoint");var $parseInt=parseInt;var charAt=uncurryThis("".charAt);var join=uncurryThis([].join);var push=uncurryThis([].push);var replace=uncurryThis("".replace);var shift=uncurryThis([].shift);var splice=uncurryThis([].splice);var split=uncurryThis("".split);var stringSlice=uncurryThis("".slice);var exec=uncurryThis(/./.exec);var plus=/\+/g;var FALLBACK_REPLACER="\uFFFD";var VALID_HEX=/^[0-9a-f]+$/i;var parseHexOctet=function(string,start){var substr=stringSlice(string,start,start+2);if(!exec(VALID_HEX,substr))return NaN;return $parseInt(substr,16);};var getLeadingOnes=function(octet){var count=0;for(var mask=128;mask>0&&(octet&mask)!==0;mask>>=1){count++;}return count;};var utf8Decode=function(octets){var codePoint=null;switch(octets.length){case 1:codePoint=octets[0];break;case 2:codePoint=(octets[0]&31)<<6|octets[1]&63;break;case 3:codePoint=(octets[0]&15)<<12|(octets[1]&63)<<6|octets[2]&63;break;case 4:codePoint=(octets[0]&7)<<18|(octets[1]&63)<<12|(octets[2]&63)<<6|octets[3]&63;break;}return codePoint>1114111?null:codePoint;};var decode=function(input){input=replace(input,plus," ");var length=input.length;var result="";var i=0;while(i<length){var decodedChar=charAt(input,i);if(decodedChar==="%"){if(charAt(input,i+1)==="%"||i+3>length){result+="%";i++;continue;}var octet=parseHexOctet(input,i+1);if(octet!==octet){result+=decodedChar;i++;continue;}i+=2;var byteSequenceLength=getLeadingOnes(octet);if(byteSequenceLength===0){decodedChar=fromCharCode(octet);}else{if(byteSequenceLength===1||byteSequenceLength>4){result+=FALLBACK_REPLACER;i++;continue;}var octets=[octet];var sequenceIndex=1;while(sequenceIndex<byteSequenceLength){i++;if(i+3>length||charAt(input,i)!=="%")break;var nextByte=parseHexOctet(input,i+1);if(nextByte!==nextByte){i+=3;break;}if(nextByte>191||nextByte<128)break;push(octets,nextByte);i+=2;sequenceIndex++;}if(octets.length!==byteSequenceLength){result+=FALLBACK_REPLACER;continue;}var codePoint=utf8Decode(octets);if(codePoint===null){result+=FALLBACK_REPLACER;}else{decodedChar=fromCodePoint(codePoint);}}}result+=decodedChar;i++;}return result;};var find=/[!'()~]|%20/g;var replacements={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"};var replacer=function(match){return replacements[match];};var serialize=function(it){return replace(encodeURIComponent2(it),find,replacer);};var URLSearchParamsIterator=createIteratorConstructor(function Iterator2(params,kind){setInternalState(this,{type:URL_SEARCH_PARAMS_ITERATOR,target:getInternalParamsState(params).entries,index:0,kind});},URL_SEARCH_PARAMS,function next(){var state=getInternalIteratorState(this);var target=state.target;var index=state.index++;if(!target||index>=target.length){state.target=null;return createIterResultObject(void 0,true);}var entry=target[index];switch(state.kind){case"keys":return createIterResultObject(entry.key,false);case"values":return createIterResultObject(entry.value,false);}return createIterResultObject([entry.key,entry.value],false);},true);var URLSearchParamsState=function(init){this.entries=[];this.url=null;if(init!==void 0){if(isObject(init))this.parseObject(init);else this.parseQuery(typeof init=="string"?charAt(init,0)==="?"?stringSlice(init,1):init:$toString(init));}};URLSearchParamsState.prototype={type:URL_SEARCH_PARAMS,bindURL:function(url){this.url=url;this.update();},parseObject:function(object){var entries=this.entries;var iteratorMethod=getIteratorMethod(object);var iterator,next,step,entryIterator,entryNext,first,second;if(iteratorMethod){iterator=getIterator(object,iteratorMethod);next=iterator.next;while(!(step=call(next,iterator)).done){entryIterator=getIterator(anObject(step.value));entryNext=entryIterator.next;if((first=call(entryNext,entryIterator)).done||(second=call(entryNext,entryIterator)).done||!call(entryNext,entryIterator).done)throw new TypeError2("Expected sequence with length 2");push(entries,{key:$toString(first.value),value:$toString(second.value)});}}else for(var key in object)if(hasOwn(object,key)){push(entries,{key,value:$toString(object[key])});}},parseQuery:function(query){if(query){var entries=this.entries;var attributes=split(query,"&");var index=0;var attribute,entry;while(index<attributes.length){attribute=attributes[index++];if(attribute.length){entry=split(attribute,"=");push(entries,{key:decode(shift(entry)),value:decode(join(entry,"="))});}}}},serialize:function(){var entries=this.entries;var result=[];var index=0;var entry;while(index<entries.length){entry=entries[index++];push(result,serialize(entry.key)+"="+serialize(entry.value));}return join(result,"&");},update:function(){this.entries.length=0;this.parseQuery(this.url.query);},updateURL:function(){if(this.url)this.url.update();}};var URLSearchParamsConstructor=function URLSearchParams2(){anInstance(this,URLSearchParamsPrototype);var init=arguments.length>0?arguments[0]:void 0;var state=setInternalState(this,new URLSearchParamsState(init));if(!DESCRIPTORS)this.size=state.entries.length;};var URLSearchParamsPrototype=URLSearchParamsConstructor.prototype;defineBuiltIns(URLSearchParamsPrototype,{// `URLSearchParams.prototype.append` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-append
append:function append(name,value){var state=getInternalParamsState(this);validateArgumentsLength(arguments.length,2);push(state.entries,{key:$toString(name),value:$toString(value)});if(!DESCRIPTORS)this.length++;state.updateURL();},// `URLSearchParams.prototype.delete` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-delete
"delete":function(name){var state=getInternalParamsState(this);var length=validateArgumentsLength(arguments.length,1);var entries=state.entries;var key=$toString(name);var $value=length<2?void 0:arguments[1];var value=$value===void 0?$value:$toString($value);var index=0;while(index<entries.length){var entry=entries[index];if(entry.key===key&&(value===void 0||entry.value===value)){splice(entries,index,1);if(value!==void 0)break;}else index++;}if(!DESCRIPTORS)this.size=entries.length;state.updateURL();},// `URLSearchParams.prototype.get` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-get
get:function get(name){var entries=getInternalParamsState(this).entries;validateArgumentsLength(arguments.length,1);var key=$toString(name);var index=0;for(;index<entries.length;index++){if(entries[index].key===key)return entries[index].value;}return null;},// `URLSearchParams.prototype.getAll` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-getall
getAll:function getAll(name){var entries=getInternalParamsState(this).entries;validateArgumentsLength(arguments.length,1);var key=$toString(name);var result=[];var index=0;for(;index<entries.length;index++){if(entries[index].key===key)push(result,entries[index].value);}return result;},// `URLSearchParams.prototype.has` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-has
has:function has(name){var entries=getInternalParamsState(this).entries;var length=validateArgumentsLength(arguments.length,1);var key=$toString(name);var $value=length<2?void 0:arguments[1];var value=$value===void 0?$value:$toString($value);var index=0;while(index<entries.length){var entry=entries[index++];if(entry.key===key&&(value===void 0||entry.value===value))return true;}return false;},// `URLSearchParams.prototype.set` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-set
set:function set(name,value){var state=getInternalParamsState(this);validateArgumentsLength(arguments.length,1);var entries=state.entries;var found=false;var key=$toString(name);var val=$toString(value);var index=0;var entry;for(;index<entries.length;index++){entry=entries[index];if(entry.key===key){if(found)splice(entries,index--,1);else{found=true;entry.value=val;}}}if(!found)push(entries,{key,value:val});if(!DESCRIPTORS)this.size=entries.length;state.updateURL();},// `URLSearchParams.prototype.sort` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-sort
sort:function sort(){var state=getInternalParamsState(this);arraySort(state.entries,function(a,b){return a.key>b.key?1:-1;});state.updateURL();},// `URLSearchParams.prototype.forEach` method
forEach:function forEach(callback){var entries=getInternalParamsState(this).entries;var boundFunction=bind(callback,arguments.length>1?arguments[1]:void 0);var index=0;var entry;while(index<entries.length){entry=entries[index++];boundFunction(entry.value,entry.key,this);}},// `URLSearchParams.prototype.keys` method
keys:function keys(){return new URLSearchParamsIterator(this,"keys");},// `URLSearchParams.prototype.values` method
values:function values(){return new URLSearchParamsIterator(this,"values");},// `URLSearchParams.prototype.entries` method
entries:function entries(){return new URLSearchParamsIterator(this,"entries");}},{enumerable:true});defineBuiltIn(URLSearchParamsPrototype,ITERATOR,URLSearchParamsPrototype.entries,{name:"entries"});defineBuiltIn(URLSearchParamsPrototype,"toString",function toString(){return getInternalParamsState(this).serialize();},{enumerable:true});if(DESCRIPTORS)defineBuiltInAccessor(URLSearchParamsPrototype,"size",{get:function size(){return getInternalParamsState(this).entries.length;},configurable:true,enumerable:true});setToStringTag(URLSearchParamsConstructor,URL_SEARCH_PARAMS);$({global:true,constructor:true,forced:!USE_NATIVE_URL},{URLSearchParams:URLSearchParamsConstructor});if(!USE_NATIVE_URL&&isCallable(Headers)){headersHas=uncurryThis(HeadersPrototype.has);headersSet=uncurryThis(HeadersPrototype.set);wrapRequestOptions=function(init){if(isObject(init)){var body=init.body;var headers;if(classof(body)===URL_SEARCH_PARAMS){headers=init.headers?new Headers(init.headers):new Headers();if(!headersHas(headers,"content-type")){headersSet(headers,"content-type","application/x-www-form-urlencoded;charset=UTF-8");}return create(init,{body:createPropertyDescriptor(0,$toString(body)),headers:createPropertyDescriptor(0,headers)});}}return init;};if(isCallable(nativeFetch)){$({global:true,enumerable:true,dontCallGetSet:true,forced:true},{fetch:function fetch2(input){return nativeFetch(input,arguments.length>1?wrapRequestOptions(arguments[1]):{});}});}if(isCallable(NativeRequest)){RequestConstructor=function Request(input){anInstance(this,RequestPrototype);return new NativeRequest(input,arguments.length>1?wrapRequestOptions(arguments[1]):{});};RequestPrototype.constructor=RequestConstructor;RequestConstructor.prototype=RequestPrototype;$({global:true,constructor:true,dontCallGetSet:true,forced:true},{Request:RequestConstructor});}}var headersHas;var headersSet;var wrapRequestOptions;var RequestConstructor;module2.exports={URLSearchParams:URLSearchParamsConstructor,getState:getInternalParamsState};}});// node_modules/core-js/modules/web.url.constructor.js
var require_web_url_constructor=__commonJS({"node_modules/core-js/modules/web.url.constructor.js"(){"use strict";require_es_string_iterator();var $=require_export();var DESCRIPTORS=require_descriptors();var USE_NATIVE_URL=require_url_constructor_detection();var globalThis2=require_global_this();var bind=require_function_bind_context();var uncurryThis=require_function_uncurry_this();var defineBuiltIn=require_define_built_in();var defineBuiltInAccessor=require_define_built_in_accessor();var anInstance=require_an_instance();var hasOwn=require_has_own_property();var assign=require_object_assign();var arrayFrom=require_array_from();var arraySlice=require_array_slice();var codeAt=require_string_multibyte().codeAt;var toASCII=require_string_punycode_to_ascii();var $toString=require_to_string();var setToStringTag=require_set_to_string_tag();var validateArgumentsLength=require_validate_arguments_length();var URLSearchParamsModule=require_web_url_search_params_constructor();var InternalStateModule=require_internal_state();var setInternalState=InternalStateModule.set;var getInternalURLState=InternalStateModule.getterFor("URL");var URLSearchParams2=URLSearchParamsModule.URLSearchParams;var getInternalSearchParamsState=URLSearchParamsModule.getState;var NativeURL=globalThis2.URL;var TypeError2=globalThis2.TypeError;var parseInt2=globalThis2.parseInt;var floor=Math.floor;var pow=Math.pow;var charAt=uncurryThis("".charAt);var exec=uncurryThis(/./.exec);var join=uncurryThis([].join);var numberToString=uncurryThis(1.1.toString);var pop=uncurryThis([].pop);var push=uncurryThis([].push);var replace=uncurryThis("".replace);var shift=uncurryThis([].shift);var split=uncurryThis("".split);var stringSlice=uncurryThis("".slice);var toLowerCase=uncurryThis("".toLowerCase);var unshift=uncurryThis([].unshift);var INVALID_AUTHORITY="Invalid authority";var INVALID_SCHEME="Invalid scheme";var INVALID_HOST="Invalid host";var INVALID_PORT="Invalid port";var ALPHA=/[a-z]/i;var ALPHANUMERIC=/[\d+-.a-z]/i;var DIGIT=/\d/;var HEX_START=/^0x/i;var OCT=/^[0-7]+$/;var DEC=/^\d+$/;var HEX=/^[\da-f]+$/i;var FORBIDDEN_HOST_CODE_POINT=/[\0\t\n\r #%/:<>?@[\\\]^|]/;var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT=/[\0\t\n\r #/:<>?@[\\\]^|]/;var LEADING_C0_CONTROL_OR_SPACE=/^[\u0000-\u0020]+/;var TRAILING_C0_CONTROL_OR_SPACE=/(^|[^\u0000-\u0020])[\u0000-\u0020]+$/;var TAB_AND_NEW_LINE=/[\t\n\r]/g;var EOF;var parseIPv4=function(input){var parts=split(input,".");var partsLength,numbers,index,part,radix,number,ipv4;if(parts.length&&parts[parts.length-1]===""){parts.length--;}partsLength=parts.length;if(partsLength>4)return input;numbers=[];for(index=0;index<partsLength;index++){part=parts[index];if(part==="")return input;radix=10;if(part.length>1&&charAt(part,0)==="0"){radix=exec(HEX_START,part)?16:8;part=stringSlice(part,radix===8?1:2);}if(part===""){number=0;}else{if(!exec(radix===10?DEC:radix===8?OCT:HEX,part))return input;number=parseInt2(part,radix);}push(numbers,number);}for(index=0;index<partsLength;index++){number=numbers[index];if(index===partsLength-1){if(number>=pow(256,5-partsLength))return null;}else if(number>255)return null;}ipv4=pop(numbers);for(index=0;index<numbers.length;index++){ipv4+=numbers[index]*pow(256,3-index);}return ipv4;};var parseIPv6=function(input){var address=[0,0,0,0,0,0,0,0];var pieceIndex=0;var compress=null;var pointer=0;var value,length,numbersSeen,ipv4Piece,number,swaps,swap;var chr=function(){return charAt(input,pointer);};if(chr()===":"){if(charAt(input,1)!==":")return;pointer+=2;pieceIndex++;compress=pieceIndex;}while(chr()){if(pieceIndex===8)return;if(chr()===":"){if(compress!==null)return;pointer++;pieceIndex++;compress=pieceIndex;continue;}value=length=0;while(length<4&&exec(HEX,chr())){value=value*16+parseInt2(chr(),16);pointer++;length++;}if(chr()==="."){if(length===0)return;pointer-=length;if(pieceIndex>6)return;numbersSeen=0;while(chr()){ipv4Piece=null;if(numbersSeen>0){if(chr()==="."&&numbersSeen<4)pointer++;else return;}if(!exec(DIGIT,chr()))return;while(exec(DIGIT,chr())){number=parseInt2(chr(),10);if(ipv4Piece===null)ipv4Piece=number;else if(ipv4Piece===0)return;else ipv4Piece=ipv4Piece*10+number;if(ipv4Piece>255)return;pointer++;}address[pieceIndex]=address[pieceIndex]*256+ipv4Piece;numbersSeen++;if(numbersSeen===2||numbersSeen===4)pieceIndex++;}if(numbersSeen!==4)return;break;}else if(chr()===":"){pointer++;if(!chr())return;}else if(chr())return;address[pieceIndex++]=value;}if(compress!==null){swaps=pieceIndex-compress;pieceIndex=7;while(pieceIndex!==0&&swaps>0){swap=address[pieceIndex];address[pieceIndex--]=address[compress+swaps-1];address[compress+--swaps]=swap;}}else if(pieceIndex!==8)return;return address;};var findLongestZeroSequence=function(ipv6){var maxIndex=null;var maxLength=1;var currStart=null;var currLength=0;var index=0;for(;index<8;index++){if(ipv6[index]!==0){if(currLength>maxLength){maxIndex=currStart;maxLength=currLength;}currStart=null;currLength=0;}else{if(currStart===null)currStart=index;++currLength;}}return currLength>maxLength?currStart:maxIndex;};var serializeHost=function(host){var result,index,compress,ignore0;if(typeof host=="number"){result=[];for(index=0;index<4;index++){unshift(result,host%256);host=floor(host/256);}return join(result,".");}if(typeof host=="object"){result="";compress=findLongestZeroSequence(host);for(index=0;index<8;index++){if(ignore0&&host[index]===0)continue;if(ignore0)ignore0=false;if(compress===index){result+=index?":":"::";ignore0=true;}else{result+=numberToString(host[index],16);if(index<7)result+=":";}}return"["+result+"]";}return host;};var C0ControlPercentEncodeSet={};var fragmentPercentEncodeSet=assign({},C0ControlPercentEncodeSet,{" ":1,'"':1,"<":1,">":1,"`":1});var pathPercentEncodeSet=assign({},fragmentPercentEncodeSet,{"#":1,"?":1,"{":1,"}":1});var userinfoPercentEncodeSet=assign({},pathPercentEncodeSet,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1});var percentEncode=function(chr,set){var code=codeAt(chr,0);return code>32&&code<127&&!hasOwn(set,chr)?chr:encodeURIComponent(chr);};var specialSchemes={ftp:21,file:null,http:80,https:443,ws:80,wss:443};var isWindowsDriveLetter=function(string,normalized){var second;return string.length===2&&exec(ALPHA,charAt(string,0))&&((second=charAt(string,1))===":"||!normalized&&second==="|");};var startsWithWindowsDriveLetter=function(string){var third;return string.length>1&&isWindowsDriveLetter(stringSlice(string,0,2))&&(string.length===2||(third=charAt(string,2))==="/"||third==="\\"||third==="?"||third==="#");};var isSingleDot=function(segment){return segment==="."||toLowerCase(segment)==="%2e";};var isDoubleDot=function(segment){segment=toLowerCase(segment);return segment===".."||segment==="%2e."||segment===".%2e"||segment==="%2e%2e";};var SCHEME_START={};var SCHEME={};var NO_SCHEME={};var SPECIAL_RELATIVE_OR_AUTHORITY={};var PATH_OR_AUTHORITY={};var RELATIVE={};var RELATIVE_SLASH={};var SPECIAL_AUTHORITY_SLASHES={};var SPECIAL_AUTHORITY_IGNORE_SLASHES={};var AUTHORITY={};var HOST={};var HOSTNAME={};var PORT={};var FILE={};var FILE_SLASH={};var FILE_HOST={};var PATH_START={};var PATH={};var CANNOT_BE_A_BASE_URL_PATH={};var QUERY={};var FRAGMENT={};var URLState=function(url,isBase,base){var urlString=$toString(url);var baseState,failure,searchParams;if(isBase){failure=this.parse(urlString);if(failure)throw new TypeError2(failure);this.searchParams=null;}else{if(base!==void 0)baseState=new URLState(base,true);failure=this.parse(urlString,null,baseState);if(failure)throw new TypeError2(failure);searchParams=getInternalSearchParamsState(new URLSearchParams2());searchParams.bindURL(this);this.searchParams=searchParams;}};URLState.prototype={type:"URL",// https://url.spec.whatwg.org/#url-parsing
// eslint-disable-next-line max-statements -- TODO
parse:function(input,stateOverride,base){var url=this;var state=stateOverride||SCHEME_START;var pointer=0;var buffer="";var seenAt=false;var seenBracket=false;var seenPasswordToken=false;var codePoints,chr,bufferCodePoints,failure;input=$toString(input);if(!stateOverride){url.scheme="";url.username="";url.password="";url.host=null;url.port=null;url.path=[];url.query=null;url.fragment=null;url.cannotBeABaseURL=false;input=replace(input,LEADING_C0_CONTROL_OR_SPACE,"");input=replace(input,TRAILING_C0_CONTROL_OR_SPACE,"$1");}input=replace(input,TAB_AND_NEW_LINE,"");codePoints=arrayFrom(input);while(pointer<=codePoints.length){chr=codePoints[pointer];switch(state){case SCHEME_START:if(chr&&exec(ALPHA,chr)){buffer+=toLowerCase(chr);state=SCHEME;}else if(!stateOverride){state=NO_SCHEME;continue;}else return INVALID_SCHEME;break;case SCHEME:if(chr&&(exec(ALPHANUMERIC,chr)||chr==="+"||chr==="-"||chr===".")){buffer+=toLowerCase(chr);}else if(chr===":"){if(stateOverride&&(url.isSpecial()!==hasOwn(specialSchemes,buffer)||buffer==="file"&&(url.includesCredentials()||url.port!==null)||url.scheme==="file"&&!url.host))return;url.scheme=buffer;if(stateOverride){if(url.isSpecial()&&specialSchemes[url.scheme]===url.port)url.port=null;return;}buffer="";if(url.scheme==="file"){state=FILE;}else if(url.isSpecial()&&base&&base.scheme===url.scheme){state=SPECIAL_RELATIVE_OR_AUTHORITY;}else if(url.isSpecial()){state=SPECIAL_AUTHORITY_SLASHES;}else if(codePoints[pointer+1]==="/"){state=PATH_OR_AUTHORITY;pointer++;}else{url.cannotBeABaseURL=true;push(url.path,"");state=CANNOT_BE_A_BASE_URL_PATH;}}else if(!stateOverride){buffer="";state=NO_SCHEME;pointer=0;continue;}else return INVALID_SCHEME;break;case NO_SCHEME:if(!base||base.cannotBeABaseURL&&chr!=="#")return INVALID_SCHEME;if(base.cannotBeABaseURL&&chr==="#"){url.scheme=base.scheme;url.path=arraySlice(base.path);url.query=base.query;url.fragment="";url.cannotBeABaseURL=true;state=FRAGMENT;break;}state=base.scheme==="file"?FILE:RELATIVE;continue;case SPECIAL_RELATIVE_OR_AUTHORITY:if(chr==="/"&&codePoints[pointer+1]==="/"){state=SPECIAL_AUTHORITY_IGNORE_SLASHES;pointer++;}else{state=RELATIVE;continue;}break;case PATH_OR_AUTHORITY:if(chr==="/"){state=AUTHORITY;break;}else{state=PATH;continue;}case RELATIVE:url.scheme=base.scheme;if(chr===EOF){url.username=base.username;url.password=base.password;url.host=base.host;url.port=base.port;url.path=arraySlice(base.path);url.query=base.query;}else if(chr==="/"||chr==="\\"&&url.isSpecial()){state=RELATIVE_SLASH;}else if(chr==="?"){url.username=base.username;url.password=base.password;url.host=base.host;url.port=base.port;url.path=arraySlice(base.path);url.query="";state=QUERY;}else if(chr==="#"){url.username=base.username;url.password=base.password;url.host=base.host;url.port=base.port;url.path=arraySlice(base.path);url.query=base.query;url.fragment="";state=FRAGMENT;}else{url.username=base.username;url.password=base.password;url.host=base.host;url.port=base.port;url.path=arraySlice(base.path);url.path.length--;state=PATH;continue;}break;case RELATIVE_SLASH:if(url.isSpecial()&&(chr==="/"||chr==="\\")){state=SPECIAL_AUTHORITY_IGNORE_SLASHES;}else if(chr==="/"){state=AUTHORITY;}else{url.username=base.username;url.password=base.password;url.host=base.host;url.port=base.port;state=PATH;continue;}break;case SPECIAL_AUTHORITY_SLASHES:state=SPECIAL_AUTHORITY_IGNORE_SLASHES;if(chr!=="/"||charAt(buffer,pointer+1)!=="/")continue;pointer++;break;case SPECIAL_AUTHORITY_IGNORE_SLASHES:if(chr!=="/"&&chr!=="\\"){state=AUTHORITY;continue;}break;case AUTHORITY:if(chr==="@"){if(seenAt)buffer="%40"+buffer;seenAt=true;bufferCodePoints=arrayFrom(buffer);for(var i=0;i<bufferCodePoints.length;i++){var codePoint=bufferCodePoints[i];if(codePoint===":"&&!seenPasswordToken){seenPasswordToken=true;continue;}var encodedCodePoints=percentEncode(codePoint,userinfoPercentEncodeSet);if(seenPasswordToken)url.password+=encodedCodePoints;else url.username+=encodedCodePoints;}buffer="";}else if(chr===EOF||chr==="/"||chr==="?"||chr==="#"||chr==="\\"&&url.isSpecial()){if(seenAt&&buffer==="")return INVALID_AUTHORITY;pointer-=arrayFrom(buffer).length+1;buffer="";state=HOST;}else buffer+=chr;break;case HOST:case HOSTNAME:if(stateOverride&&url.scheme==="file"){state=FILE_HOST;continue;}else if(chr===":"&&!seenBracket){if(buffer==="")return INVALID_HOST;failure=url.parseHost(buffer);if(failure)return failure;buffer="";state=PORT;if(stateOverride===HOSTNAME)return;}else if(chr===EOF||chr==="/"||chr==="?"||chr==="#"||chr==="\\"&&url.isSpecial()){if(url.isSpecial()&&buffer==="")return INVALID_HOST;if(stateOverride&&buffer===""&&(url.includesCredentials()||url.port!==null))return;failure=url.parseHost(buffer);if(failure)return failure;buffer="";state=PATH_START;if(stateOverride)return;continue;}else{if(chr==="[")seenBracket=true;else if(chr==="]")seenBracket=false;buffer+=chr;}break;case PORT:if(exec(DIGIT,chr)){buffer+=chr;}else if(chr===EOF||chr==="/"||chr==="?"||chr==="#"||chr==="\\"&&url.isSpecial()||stateOverride){if(buffer!==""){var port=parseInt2(buffer,10);if(port>65535)return INVALID_PORT;url.port=url.isSpecial()&&port===specialSchemes[url.scheme]?null:port;buffer="";}if(stateOverride)return;state=PATH_START;continue;}else return INVALID_PORT;break;case FILE:url.scheme="file";if(chr==="/"||chr==="\\")state=FILE_SLASH;else if(base&&base.scheme==="file"){switch(chr){case EOF:url.host=base.host;url.path=arraySlice(base.path);url.query=base.query;break;case"?":url.host=base.host;url.path=arraySlice(base.path);url.query="";state=QUERY;break;case"#":url.host=base.host;url.path=arraySlice(base.path);url.query=base.query;url.fragment="";state=FRAGMENT;break;default:if(!startsWithWindowsDriveLetter(join(arraySlice(codePoints,pointer),""))){url.host=base.host;url.path=arraySlice(base.path);url.shortenPath();}state=PATH;continue;}}else{state=PATH;continue;}break;case FILE_SLASH:if(chr==="/"||chr==="\\"){state=FILE_HOST;break;}if(base&&base.scheme==="file"&&!startsWithWindowsDriveLetter(join(arraySlice(codePoints,pointer),""))){if(isWindowsDriveLetter(base.path[0],true))push(url.path,base.path[0]);else url.host=base.host;}state=PATH;continue;case FILE_HOST:if(chr===EOF||chr==="/"||chr==="\\"||chr==="?"||chr==="#"){if(!stateOverride&&isWindowsDriveLetter(buffer)){state=PATH;}else if(buffer===""){url.host="";if(stateOverride)return;state=PATH_START;}else{failure=url.parseHost(buffer);if(failure)return failure;if(url.host==="localhost")url.host="";if(stateOverride)return;buffer="";state=PATH_START;}continue;}else buffer+=chr;break;case PATH_START:if(url.isSpecial()){state=PATH;if(chr!=="/"&&chr!=="\\")continue;}else if(!stateOverride&&chr==="?"){url.query="";state=QUERY;}else if(!stateOverride&&chr==="#"){url.fragment="";state=FRAGMENT;}else if(chr!==EOF){state=PATH;if(chr!=="/")continue;}break;case PATH:if(chr===EOF||chr==="/"||chr==="\\"&&url.isSpecial()||!stateOverride&&(chr==="?"||chr==="#")){if(isDoubleDot(buffer)){url.shortenPath();if(chr!=="/"&&!(chr==="\\"&&url.isSpecial())){push(url.path,"");}}else if(isSingleDot(buffer)){if(chr!=="/"&&!(chr==="\\"&&url.isSpecial())){push(url.path,"");}}else{if(url.scheme==="file"&&!url.path.length&&isWindowsDriveLetter(buffer)){if(url.host)url.host="";buffer=charAt(buffer,0)+":";}push(url.path,buffer);}buffer="";if(url.scheme==="file"&&(chr===EOF||chr==="?"||chr==="#")){while(url.path.length>1&&url.path[0]===""){shift(url.path);}}if(chr==="?"){url.query="";state=QUERY;}else if(chr==="#"){url.fragment="";state=FRAGMENT;}}else{buffer+=percentEncode(chr,pathPercentEncodeSet);}break;case CANNOT_BE_A_BASE_URL_PATH:if(chr==="?"){url.query="";state=QUERY;}else if(chr==="#"){url.fragment="";state=FRAGMENT;}else if(chr!==EOF){url.path[0]+=percentEncode(chr,C0ControlPercentEncodeSet);}break;case QUERY:if(!stateOverride&&chr==="#"){url.fragment="";state=FRAGMENT;}else if(chr!==EOF){if(chr==="'"&&url.isSpecial())url.query+="%27";else if(chr==="#")url.query+="%23";else url.query+=percentEncode(chr,C0ControlPercentEncodeSet);}break;case FRAGMENT:if(chr!==EOF)url.fragment+=percentEncode(chr,fragmentPercentEncodeSet);break;}pointer++;}},// https://url.spec.whatwg.org/#host-parsing
parseHost:function(input){var result,codePoints,index;if(charAt(input,0)==="["){if(charAt(input,input.length-1)!=="]")return INVALID_HOST;result=parseIPv6(stringSlice(input,1,-1));if(!result)return INVALID_HOST;this.host=result;}else if(!this.isSpecial()){if(exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT,input))return INVALID_HOST;result="";codePoints=arrayFrom(input);for(index=0;index<codePoints.length;index++){result+=percentEncode(codePoints[index],C0ControlPercentEncodeSet);}this.host=result;}else{input=toASCII(input);if(exec(FORBIDDEN_HOST_CODE_POINT,input))return INVALID_HOST;result=parseIPv4(input);if(result===null)return INVALID_HOST;this.host=result;}},// https://url.spec.whatwg.org/#cannot-have-a-username-password-port
cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||this.scheme==="file";},// https://url.spec.whatwg.org/#include-credentials
includesCredentials:function(){return this.username!==""||this.password!=="";},// https://url.spec.whatwg.org/#is-special
isSpecial:function(){return hasOwn(specialSchemes,this.scheme);},// https://url.spec.whatwg.org/#shorten-a-urls-path
shortenPath:function(){var path=this.path;var pathSize=path.length;if(pathSize&&(this.scheme!=="file"||pathSize!==1||!isWindowsDriveLetter(path[0],true))){path.length--;}},// https://url.spec.whatwg.org/#concept-url-serializer
serialize:function(){var url=this;var scheme=url.scheme;var username=url.username;var password=url.password;var host=url.host;var port=url.port;var path=url.path;var query=url.query;var fragment=url.fragment;var output=scheme+":";if(host!==null){output+="//";if(url.includesCredentials()){output+=username+(password?":"+password:"")+"@";}output+=serializeHost(host);if(port!==null)output+=":"+port;}else if(scheme==="file")output+="//";output+=url.cannotBeABaseURL?path[0]:path.length?"/"+join(path,"/"):"";if(query!==null)output+="?"+query;if(fragment!==null)output+="#"+fragment;return output;},// https://url.spec.whatwg.org/#dom-url-href
setHref:function(href){var failure=this.parse(href);if(failure)throw new TypeError2(failure);this.searchParams.update();},// https://url.spec.whatwg.org/#dom-url-origin
getOrigin:function(){var scheme=this.scheme;var port=this.port;if(scheme==="blob")try{return new URLConstructor(scheme.path[0]).origin;}catch(error){return"null";}if(scheme==="file"||!this.isSpecial())return"null";return scheme+"://"+serializeHost(this.host)+(port!==null?":"+port:"");},// https://url.spec.whatwg.org/#dom-url-protocol
getProtocol:function(){return this.scheme+":";},setProtocol:function(protocol){this.parse($toString(protocol)+":",SCHEME_START);},// https://url.spec.whatwg.org/#dom-url-username
getUsername:function(){return this.username;},setUsername:function(username){var codePoints=arrayFrom($toString(username));if(this.cannotHaveUsernamePasswordPort())return;this.username="";for(var i=0;i<codePoints.length;i++){this.username+=percentEncode(codePoints[i],userinfoPercentEncodeSet);}},// https://url.spec.whatwg.org/#dom-url-password
getPassword:function(){return this.password;},setPassword:function(password){var codePoints=arrayFrom($toString(password));if(this.cannotHaveUsernamePasswordPort())return;this.password="";for(var i=0;i<codePoints.length;i++){this.password+=percentEncode(codePoints[i],userinfoPercentEncodeSet);}},// https://url.spec.whatwg.org/#dom-url-host
getHost:function(){var host=this.host;var port=this.port;return host===null?"":port===null?serializeHost(host):serializeHost(host)+":"+port;},setHost:function(host){if(this.cannotBeABaseURL)return;this.parse(host,HOST);},// https://url.spec.whatwg.org/#dom-url-hostname
getHostname:function(){var host=this.host;return host===null?"":serializeHost(host);},setHostname:function(hostname){if(this.cannotBeABaseURL)return;this.parse(hostname,HOSTNAME);},// https://url.spec.whatwg.org/#dom-url-port
getPort:function(){var port=this.port;return port===null?"":$toString(port);},setPort:function(port){if(this.cannotHaveUsernamePasswordPort())return;port=$toString(port);if(port==="")this.port=null;else this.parse(port,PORT);},// https://url.spec.whatwg.org/#dom-url-pathname
getPathname:function(){var path=this.path;return this.cannotBeABaseURL?path[0]:path.length?"/"+join(path,"/"):"";},setPathname:function(pathname){if(this.cannotBeABaseURL)return;this.path=[];this.parse(pathname,PATH_START);},// https://url.spec.whatwg.org/#dom-url-search
getSearch:function(){var query=this.query;return query?"?"+query:"";},setSearch:function(search){search=$toString(search);if(search===""){this.query=null;}else{if(charAt(search,0)==="?")search=stringSlice(search,1);this.query="";this.parse(search,QUERY);}this.searchParams.update();},// https://url.spec.whatwg.org/#dom-url-searchparams
getSearchParams:function(){return this.searchParams.facade;},// https://url.spec.whatwg.org/#dom-url-hash
getHash:function(){var fragment=this.fragment;return fragment?"#"+fragment:"";},setHash:function(hash){hash=$toString(hash);if(hash===""){this.fragment=null;return;}if(charAt(hash,0)==="#")hash=stringSlice(hash,1);this.fragment="";this.parse(hash,FRAGMENT);},update:function(){this.query=this.searchParams.serialize()||null;}};var URLConstructor=function URL2(url){var that=anInstance(this,URLPrototype);var base=validateArgumentsLength(arguments.length,1)>1?arguments[1]:void 0;var state=setInternalState(that,new URLState(url,false,base));if(!DESCRIPTORS){that.href=state.serialize();that.origin=state.getOrigin();that.protocol=state.getProtocol();that.username=state.getUsername();that.password=state.getPassword();that.host=state.getHost();that.hostname=state.getHostname();that.port=state.getPort();that.pathname=state.getPathname();that.search=state.getSearch();that.searchParams=state.getSearchParams();that.hash=state.getHash();}};var URLPrototype=URLConstructor.prototype;var accessorDescriptor=function(getter,setter){return{get:function(){return getInternalURLState(this)[getter]();},set:setter&&function(value){return getInternalURLState(this)[setter](value);},configurable:true,enumerable:true};};if(DESCRIPTORS){defineBuiltInAccessor(URLPrototype,"href",accessorDescriptor("serialize","setHref"));defineBuiltInAccessor(URLPrototype,"origin",accessorDescriptor("getOrigin"));defineBuiltInAccessor(URLPrototype,"protocol",accessorDescriptor("getProtocol","setProtocol"));defineBuiltInAccessor(URLPrototype,"username",accessorDescriptor("getUsername","setUsername"));defineBuiltInAccessor(URLPrototype,"password",accessorDescriptor("getPassword","setPassword"));defineBuiltInAccessor(URLPrototype,"host",accessorDescriptor("getHost","setHost"));defineBuiltInAccessor(URLPrototype,"hostname",accessorDescriptor("getHostname","setHostname"));defineBuiltInAccessor(URLPrototype,"port",accessorDescriptor("getPort","setPort"));defineBuiltInAccessor(URLPrototype,"pathname",accessorDescriptor("getPathname","setPathname"));defineBuiltInAccessor(URLPrototype,"search",accessorDescriptor("getSearch","setSearch"));defineBuiltInAccessor(URLPrototype,"searchParams",accessorDescriptor("getSearchParams"));defineBuiltInAccessor(URLPrototype,"hash",accessorDescriptor("getHash","setHash"));}defineBuiltIn(URLPrototype,"toJSON",function toJSON(){return getInternalURLState(this).serialize();},{enumerable:true});defineBuiltIn(URLPrototype,"toString",function toString(){return getInternalURLState(this).serialize();},{enumerable:true});if(NativeURL){nativeCreateObjectURL=NativeURL.createObjectURL;nativeRevokeObjectURL=NativeURL.revokeObjectURL;if(nativeCreateObjectURL)defineBuiltIn(URLConstructor,"createObjectURL",bind(nativeCreateObjectURL,NativeURL));if(nativeRevokeObjectURL)defineBuiltIn(URLConstructor,"revokeObjectURL",bind(nativeRevokeObjectURL,NativeURL));}var nativeCreateObjectURL;var nativeRevokeObjectURL;setToStringTag(URLConstructor,"URL");$({global:true,constructor:true,forced:!USE_NATIVE_URL,sham:!DESCRIPTORS},{URL:URLConstructor});}});// node_modules/core-js/modules/web.url.js
var require_web_url=__commonJS({"node_modules/core-js/modules/web.url.js"(){"use strict";require_web_url_constructor();}});// node_modules/core-js/modules/web.url.can-parse.js
var require_web_url_can_parse=__commonJS({"node_modules/core-js/modules/web.url.can-parse.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var fails=require_fails();var validateArgumentsLength=require_validate_arguments_length();var toString=require_to_string();var USE_NATIVE_URL=require_url_constructor_detection();var URL2=getBuiltIn("URL");var THROWS_WITHOUT_ARGUMENTS=USE_NATIVE_URL&&fails(function(){URL2.canParse();});var WRONG_ARITY=fails(function(){return URL2.canParse.length!==1;});$({target:"URL",stat:true,forced:!THROWS_WITHOUT_ARGUMENTS||WRONG_ARITY},{canParse:function canParse(url){var length=validateArgumentsLength(arguments.length,1);var urlString=toString(url);var base=length<2||arguments[1]===void 0?void 0:toString(arguments[1]);try{return!!new URL2(urlString,base);}catch(error){return false;}}});}});// node_modules/core-js/modules/web.url.parse.js
var require_web_url_parse=__commonJS({"node_modules/core-js/modules/web.url.parse.js"(){"use strict";var $=require_export();var getBuiltIn=require_get_built_in();var validateArgumentsLength=require_validate_arguments_length();var toString=require_to_string();var USE_NATIVE_URL=require_url_constructor_detection();var URL2=getBuiltIn("URL");$({target:"URL",stat:true,forced:!USE_NATIVE_URL},{parse:function parse(url){var length=validateArgumentsLength(arguments.length,1);var urlString=toString(url);var base=length<2||arguments[1]===void 0?void 0:toString(arguments[1]);try{return new URL2(urlString,base);}catch(error){return null;}}});}});// node_modules/core-js/modules/web.url.to-json.js
var require_web_url_to_json=__commonJS({"node_modules/core-js/modules/web.url.to-json.js"(){"use strict";var $=require_export();var call=require_function_call();$({target:"URL",proto:true,enumerable:true},{toJSON:function toJSON(){return call(URL.prototype.toString,this);}});}});// node_modules/core-js/modules/web.url-search-params.js
var require_web_url_search_params=__commonJS({"node_modules/core-js/modules/web.url-search-params.js"(){"use strict";require_web_url_search_params_constructor();}});// node_modules/core-js/modules/web.url-search-params.delete.js
var require_web_url_search_params_delete=__commonJS({"node_modules/core-js/modules/web.url-search-params.delete.js"(){"use strict";var defineBuiltIn=require_define_built_in();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var validateArgumentsLength=require_validate_arguments_length();var $URLSearchParams=URLSearchParams;var URLSearchParamsPrototype=$URLSearchParams.prototype;var append=uncurryThis(URLSearchParamsPrototype.append);var $delete=uncurryThis(URLSearchParamsPrototype["delete"]);var forEach=uncurryThis(URLSearchParamsPrototype.forEach);var push=uncurryThis([].push);var params=new $URLSearchParams("a=1&a=2&b=3");params["delete"]("a",1);params["delete"]("b",void 0);if(params+""!=="a=2"){defineBuiltIn(URLSearchParamsPrototype,"delete",function(name){var length=arguments.length;var $value=length<2?void 0:arguments[1];if(length&&$value===void 0)return $delete(this,name);var entries=[];forEach(this,function(v,k){push(entries,{key:k,value:v});});validateArgumentsLength(length,1);var key=toString(name);var value=toString($value);var index=0;var dindex=0;var found=false;var entriesLength=entries.length;var entry;while(index<entriesLength){entry=entries[index++];if(found||entry.key===key){found=true;$delete(this,entry.key);}else dindex++;}while(dindex<entriesLength){entry=entries[dindex++];if(!(entry.key===key&&entry.value===value))append(this,entry.key,entry.value);}},{enumerable:true,unsafe:true});}}});// node_modules/core-js/modules/web.url-search-params.has.js
var require_web_url_search_params_has=__commonJS({"node_modules/core-js/modules/web.url-search-params.has.js"(){"use strict";var defineBuiltIn=require_define_built_in();var uncurryThis=require_function_uncurry_this();var toString=require_to_string();var validateArgumentsLength=require_validate_arguments_length();var $URLSearchParams=URLSearchParams;var URLSearchParamsPrototype=$URLSearchParams.prototype;var getAll=uncurryThis(URLSearchParamsPrototype.getAll);var $has=uncurryThis(URLSearchParamsPrototype.has);var params=new $URLSearchParams("a=1");if(params.has("a",2)||!params.has("a",void 0)){defineBuiltIn(URLSearchParamsPrototype,"has",function has(name){var length=arguments.length;var $value=length<2?void 0:arguments[1];if(length&&$value===void 0)return $has(this,name);var values=getAll(this,name);validateArgumentsLength(length,1);var value=toString($value);var index=0;while(index<values.length){if(values[index++]===value)return true;}return false;},{enumerable:true,unsafe:true});}}});// node_modules/core-js/modules/web.url-search-params.size.js
var require_web_url_search_params_size=__commonJS({"node_modules/core-js/modules/web.url-search-params.size.js"(){"use strict";var DESCRIPTORS=require_descriptors();var uncurryThis=require_function_uncurry_this();var defineBuiltInAccessor=require_define_built_in_accessor();var URLSearchParamsPrototype=URLSearchParams.prototype;var forEach=uncurryThis(URLSearchParamsPrototype.forEach);if(DESCRIPTORS&&!("size"in URLSearchParamsPrototype)){defineBuiltInAccessor(URLSearchParamsPrototype,"size",{get:function size(){var count=0;forEach(this,function(){count++;});return count;},configurable:true,enumerable:true});}}});// node_modules/core-js/stable/index.js
var require_stable=__commonJS({"node_modules/core-js/stable/index.js"(exports,module2){"use strict";require_es_symbol();require_es_symbol_description();require_es_symbol_async_dispose();require_es_symbol_async_iterator();require_es_symbol_dispose();require_es_symbol_has_instance();require_es_symbol_is_concat_spreadable();require_es_symbol_iterator();require_es_symbol_match();require_es_symbol_match_all();require_es_symbol_replace();require_es_symbol_search();require_es_symbol_species();require_es_symbol_split();require_es_symbol_to_primitive();require_es_symbol_to_string_tag();require_es_symbol_unscopables();require_es_error_cause();require_es_error_is_error();require_es_error_to_string();require_es_aggregate_error();require_es_aggregate_error_cause();require_es_suppressed_error_constructor();require_es_array_at();require_es_array_concat();require_es_array_copy_within();require_es_array_every();require_es_array_fill();require_es_array_filter();require_es_array_find();require_es_array_find_index();require_es_array_find_last();require_es_array_find_last_index();require_es_array_flat();require_es_array_flat_map();require_es_array_for_each();require_es_array_from();require_es_array_includes();require_es_array_index_of();require_es_array_is_array();require_es_array_iterator();require_es_array_join();require_es_array_last_index_of();require_es_array_map();require_es_array_of();require_es_array_push();require_es_array_reduce();require_es_array_reduce_right();require_es_array_reverse();require_es_array_slice();require_es_array_some();require_es_array_sort();require_es_array_species();require_es_array_splice();require_es_array_to_reversed();require_es_array_to_sorted();require_es_array_to_spliced();require_es_array_unscopables_flat();require_es_array_unscopables_flat_map();require_es_array_unshift();require_es_array_with();require_es_array_buffer_constructor();require_es_array_buffer_is_view();require_es_array_buffer_slice();require_es_data_view();require_es_data_view_get_float16();require_es_data_view_set_float16();require_es_array_buffer_detached();require_es_array_buffer_transfer();require_es_array_buffer_transfer_to_fixed_length();require_es_date_get_year();require_es_date_now();require_es_date_set_year();require_es_date_to_gmt_string();require_es_date_to_iso_string();require_es_date_to_json();require_es_date_to_primitive();require_es_date_to_string();require_es_disposable_stack_constructor();require_es_escape();require_es_function_bind();require_es_function_has_instance();require_es_function_name();require_es_global_this();require_es_iterator_constructor();require_es_iterator_dispose();require_es_iterator_drop();require_es_iterator_every();require_es_iterator_filter();require_es_iterator_find();require_es_iterator_flat_map();require_es_iterator_for_each();require_es_iterator_from();require_es_iterator_map();require_es_iterator_reduce();require_es_iterator_some();require_es_iterator_take();require_es_iterator_to_array();require_es_json_stringify();require_es_json_to_string_tag();require_es_map();require_es_map_group_by();require_es_math_acosh();require_es_math_asinh();require_es_math_atanh();require_es_math_cbrt();require_es_math_clz32();require_es_math_cosh();require_es_math_expm1();require_es_math_fround();require_es_math_f16round();require_es_math_hypot();require_es_math_imul();require_es_math_log10();require_es_math_log1p();require_es_math_log2();require_es_math_sign();require_es_math_sinh();require_es_math_sum_precise();require_es_math_tanh();require_es_math_to_string_tag();require_es_math_trunc();require_es_number_constructor();require_es_number_epsilon();require_es_number_is_finite();require_es_number_is_integer();require_es_number_is_nan();require_es_number_is_safe_integer();require_es_number_max_safe_integer();require_es_number_min_safe_integer();require_es_number_parse_float();require_es_number_parse_int();require_es_number_to_exponential();require_es_number_to_fixed();require_es_number_to_precision();require_es_object_assign();require_es_object_create();require_es_object_define_getter();require_es_object_define_properties();require_es_object_define_property();require_es_object_define_setter();require_es_object_entries();require_es_object_freeze();require_es_object_from_entries();require_es_object_get_own_property_descriptor();require_es_object_get_own_property_descriptors();require_es_object_get_own_property_names();require_es_object_get_prototype_of();require_es_object_group_by();require_es_object_has_own();require_es_object_is();require_es_object_is_extensible();require_es_object_is_frozen();require_es_object_is_sealed();require_es_object_keys();require_es_object_lookup_getter();require_es_object_lookup_setter();require_es_object_prevent_extensions();require_es_object_proto();require_es_object_seal();require_es_object_set_prototype_of();require_es_object_to_string();require_es_object_values();require_es_parse_float();require_es_parse_int();require_es_promise();require_es_promise_all_settled();require_es_promise_any();require_es_promise_finally();require_es_promise_try();require_es_promise_with_resolvers();require_es_array_from_async();require_es_async_disposable_stack_constructor();require_es_async_iterator_async_dispose();require_es_reflect_apply();require_es_reflect_construct();require_es_reflect_define_property();require_es_reflect_delete_property();require_es_reflect_get();require_es_reflect_get_own_property_descriptor();require_es_reflect_get_prototype_of();require_es_reflect_has();require_es_reflect_is_extensible();require_es_reflect_own_keys();require_es_reflect_prevent_extensions();require_es_reflect_set();require_es_reflect_set_prototype_of();require_es_reflect_to_string_tag();require_es_regexp_constructor();require_es_regexp_escape();require_es_regexp_dot_all();require_es_regexp_exec();require_es_regexp_flags();require_es_regexp_sticky();require_es_regexp_test();require_es_regexp_to_string();require_es_set();require_es_set_difference_v2();require_es_set_intersection_v2();require_es_set_is_disjoint_from_v2();require_es_set_is_subset_of_v2();require_es_set_is_superset_of_v2();require_es_set_symmetric_difference_v2();require_es_set_union_v2();require_es_string_at_alternative();require_es_string_code_point_at();require_es_string_ends_with();require_es_string_from_code_point();require_es_string_includes();require_es_string_is_well_formed();require_es_string_iterator();require_es_string_match();require_es_string_match_all();require_es_string_pad_end();require_es_string_pad_start();require_es_string_raw();require_es_string_repeat();require_es_string_replace();require_es_string_replace_all();require_es_string_search();require_es_string_split();require_es_string_starts_with();require_es_string_substr();require_es_string_to_well_formed();require_es_string_trim();require_es_string_trim_end();require_es_string_trim_start();require_es_string_anchor();require_es_string_big();require_es_string_blink();require_es_string_bold();require_es_string_fixed();require_es_string_fontcolor();require_es_string_fontsize();require_es_string_italics();require_es_string_link();require_es_string_small();require_es_string_strike();require_es_string_sub();require_es_string_sup();require_es_typed_array_float32_array();require_es_typed_array_float64_array();require_es_typed_array_int8_array();require_es_typed_array_int16_array();require_es_typed_array_int32_array();require_es_typed_array_uint8_array();require_es_typed_array_uint8_clamped_array();require_es_typed_array_uint16_array();require_es_typed_array_uint32_array();require_es_typed_array_at();require_es_typed_array_copy_within();require_es_typed_array_every();require_es_typed_array_fill();require_es_typed_array_filter();require_es_typed_array_find();require_es_typed_array_find_index();require_es_typed_array_find_last();require_es_typed_array_find_last_index();require_es_typed_array_for_each();require_es_typed_array_from();require_es_typed_array_includes();require_es_typed_array_index_of();require_es_typed_array_iterator();require_es_typed_array_join();require_es_typed_array_last_index_of();require_es_typed_array_map();require_es_typed_array_of();require_es_typed_array_reduce();require_es_typed_array_reduce_right();require_es_typed_array_reverse();require_es_typed_array_set();require_es_typed_array_slice();require_es_typed_array_some();require_es_typed_array_sort();require_es_typed_array_subarray();require_es_typed_array_to_locale_string();require_es_typed_array_to_reversed();require_es_typed_array_to_sorted();require_es_typed_array_to_string();require_es_typed_array_with();require_es_uint8_array_from_base64();require_es_uint8_array_from_hex();require_es_uint8_array_set_from_base64();require_es_uint8_array_set_from_hex();require_es_uint8_array_to_base64();require_es_uint8_array_to_hex();require_es_unescape();require_es_weak_map();require_es_weak_set();require_web_atob();require_web_btoa();require_web_dom_collections_for_each();require_web_dom_collections_iterator();require_web_dom_exception_constructor();require_web_dom_exception_stack();require_web_dom_exception_to_string_tag();require_web_immediate();require_web_queue_microtask();require_web_self();require_web_structured_clone();require_web_timers();require_web_url();require_web_url_can_parse();require_web_url_parse();require_web_url_to_json();require_web_url_search_params();require_web_url_search_params_delete();require_web_url_search_params_has();require_web_url_search_params_size();module2.exports=require_path();}});// node_modules/regenerator-runtime/runtime.js
var require_runtime=__commonJS({"node_modules/regenerator-runtime/runtime.js"(exports,module2){var runtime=function(exports2){"use strict";var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;var defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value;};var undefined2;var $Symbol=typeof Symbol==="function"?Symbol:{};var iteratorSymbol=$Symbol.iterator||"@@iterator";var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){Object.defineProperty(obj,key,{value,enumerable:true,configurable:true,writable:true});return obj[key];}try{define({},"");}catch(err){define=function(obj,key,value){return obj[key]=value;};}function wrap(innerFn,outerFn,self2,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator2?outerFn:Generator2;var generator=Object.create(protoGenerator.prototype);var context=new Context(tryLocsList||[]);defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self2,context)});return generator;}exports2.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)};}catch(err){return{type:"throw",arg:err};}}var GenStateSuspendedStart="suspendedStart";var GenStateSuspendedYield="suspendedYield";var GenStateExecuting="executing";var GenStateCompleted="completed";var ContinueSentinel={};function Generator2(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this;});var getProto=Object.getPrototypeOf;var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));if(NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){IteratorPrototype=NativeIteratorPrototype;}var Gp=GeneratorFunctionPrototype.prototype=Generator2.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=GeneratorFunctionPrototype;defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:true});defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:true});GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction");function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg);});});}exports2.isGeneratorFunction=function(genFun){var ctor=typeof genFun==="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||// For the native GeneratorFunction constructor, the best we can
// do is to check its .name property.
(ctor.displayName||ctor.name)==="GeneratorFunction":false;};exports2.mark=function(genFun){if(Object.setPrototypeOf){Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else{genFun.__proto__=GeneratorFunctionPrototype;define(genFun,toStringTagSymbol,"GeneratorFunction");}genFun.prototype=Object.create(Gp);return genFun;};exports2.awrap=function(arg){return{__await:arg};};function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw"){reject(record.arg);}else{var result=record.arg;var value=result.value;if(value&&typeof value==="object"&&hasOwn.call(value,"__await")){return PromiseImpl.resolve(value.__await).then(function(value2){invoke("next",value2,resolve,reject);},function(err){invoke("throw",err,resolve,reject);});}return PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped;resolve(result);},function(error){return invoke("throw",error,resolve,reject);});}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject);});}return previousPromise=// If enqueue has been called before, then we want to wait until
// all previous Promises have been resolved before calling invoke,
// so that results are always delivered in the correct order. If
// enqueue has not been called before, then it is important to
// call invoke immediately, without waiting on a callback to fire,
// so that the async generator function has the opportunity to do
// any necessary setup in a predictable way. This predictability
// is why the Promise constructor synchronously invokes its
// executor callback, and why async functions synchronously
// execute code before the first await. Since we implement simple
// async functions in terms of async generators, it is especially
// important to get this right, even though it requires care.
previousPromise?previousPromise.then(callInvokeWithMethodAndArg,// Avoid propagating failures to Promises returned by later
// invocations of the iterator.
callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();}defineProperty(this,"_invoke",{value:enqueue});}defineIteratorMethods(AsyncIterator.prototype);define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this;});exports2.AsyncIterator=AsyncIterator;exports2.async=function(innerFn,outerFn,self2,tryLocsList,PromiseImpl){if(PromiseImpl===void 0)PromiseImpl=Promise;var iter=new AsyncIterator(wrap(innerFn,outerFn,self2,tryLocsList),PromiseImpl);return exports2.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next();});};function makeInvokeMethod(innerFn,self2,context){var state=GenStateSuspendedStart;return function invoke(method,arg){if(state===GenStateExecuting){throw new Error("Generator is already running");}if(state===GenStateCompleted){if(method==="throw"){throw arg;}return doneResult();}context.method=method;context.arg=arg;while(true){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult;}}if(context.method==="next"){context.sent=context._sent=context.arg;}else if(context.method==="throw"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw context.arg;}context.dispatchException(context.arg);}else if(context.method==="return"){context.abrupt("return",context.arg);}state=GenStateExecuting;var record=tryCatch(innerFn,self2,context);if(record.type==="normal"){state=context.done?GenStateCompleted:GenStateSuspendedYield;if(record.arg===ContinueSentinel){continue;}return{value:record.arg,done:context.done};}else if(record.type==="throw"){state=GenStateCompleted;context.method="throw";context.arg=record.arg;}}};}function maybeInvokeDelegate(delegate,context){var methodName=context.method;var method=delegate.iterator[methodName];if(method===undefined2){context.delegate=null;if(methodName==="throw"&&delegate.iterator["return"]){context.method="return";context.arg=undefined2;maybeInvokeDelegate(delegate,context);if(context.method==="throw"){return ContinueSentinel;}}if(methodName!=="return"){context.method="throw";context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method");}return ContinueSentinel;}var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw"){context.method="throw";context.arg=record.arg;context.delegate=null;return ContinueSentinel;}var info=record.arg;if(!info){context.method="throw";context.arg=new TypeError("iterator result is not an object");context.delegate=null;return ContinueSentinel;}if(info.done){context[delegate.resultName]=info.value;context.next=delegate.nextLoc;if(context.method!=="return"){context.method="next";context.arg=undefined2;}}else{return info;}context.delegate=null;return ContinueSentinel;}defineIteratorMethods(Gp);define(Gp,toStringTagSymbol,"Generator");define(Gp,iteratorSymbol,function(){return this;});define(Gp,"toString",function(){return"[object Generator]";});function pushTryEntry(locs){var entry={tryLoc:locs[0]};if(1 in locs){entry.catchLoc=locs[1];}if(2 in locs){entry.finallyLoc=locs[2];entry.afterLoc=locs[3];}this.tryEntries.push(entry);}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal";delete record.arg;entry.completion=record;}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}];tryLocsList.forEach(pushTryEntry,this);this.reset(true);}exports2.keys=function(val){var object=Object(val);var keys=[];for(var key in object){keys.push(key);}keys.reverse();return function next(){while(keys.length){var key2=keys.pop();if(key2 in object){next.value=key2;next.done=false;return next;}}next.done=true;return next;};};function values(iterable){if(iterable!=null){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable);}if(typeof iterable.next==="function"){return iterable;}if(!isNaN(iterable.length)){var i=-1,next=function next2(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next2.value=iterable[i];next2.done=false;return next2;}}next2.value=undefined2;next2.done=true;return next2;};return next.next=next;}}throw new TypeError(typeof iterable+" is not iterable");}exports2.values=values;function doneResult(){return{value:undefined2,done:true};}Context.prototype={constructor:Context,reset:function(skipTempReset){this.prev=0;this.next=0;this.sent=this._sent=undefined2;this.done=false;this.delegate=null;this.method="next";this.arg=undefined2;this.tryEntries.forEach(resetTryEntry);if(!skipTempReset){for(var name in this){if(name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))){this[name]=undefined2;}}}},stop:function(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type==="throw"){throw rootRecord.arg;}return this.rval;},dispatchException:function(exception){if(this.done){throw exception;}var context=this;function handle(loc,caught){record.type="throw";record.arg=exception;context.next=loc;if(caught){context.method="next";context.arg=undefined2;}return!!caught;}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc==="root"){return handle("end");}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc");var hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else{throw new Error("try statement without catch or finally");}}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break;}}if(finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc){finallyEntry=null;}var record=finallyEntry?finallyEntry.completion:{};record.type=type;record.arg=arg;if(finallyEntry){this.method="next";this.next=finallyEntry.finallyLoc;return ContinueSentinel;}return this.complete(record);},complete:function(record,afterLoc){if(record.type==="throw"){throw record.arg;}if(record.type==="break"||record.type==="continue"){this.next=record.arg;}else if(record.type==="return"){this.rval=this.arg=record.arg;this.method="return";this.next="end";}else if(record.type==="normal"&&afterLoc){this.next=afterLoc;}return ContinueSentinel;},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc){this.complete(entry.completion,entry.afterLoc);resetTryEntry(entry);return ContinueSentinel;}}},"catch":function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry);}return thrown;}}throw new Error("illegal catch attempt");},delegateYield:function(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName,nextLoc};if(this.method==="next"){this.arg=undefined2;}return ContinueSentinel;}};return exports2;}(// If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
typeof module2==="object"?module2.exports:{});try{regeneratorRuntime=runtime;}catch(accidentalStrictMode){if(typeof globalThis==="object"){globalThis.regeneratorRuntime=runtime;}else{Function("r","regeneratorRuntime = r")(runtime);}}}});// src/index.ts
var index_exports={};__export(index_exports,{ChorusProcessor:()=>ChorusProcessor,DEFAULT_SYNTH_CONFIG:()=>DEFAULT_SYNTH_CONFIG,MIDIDeviceHandler:()=>MIDIDeviceHandler,ReverbProcessor:()=>ReverbProcessor,Sequencer:()=>Sequencer,WebMIDILinkHandler:()=>WebMIDILinkHandler,WorkerSynthesizer:()=>WorkerSynthesizer,WorkerSynthesizerCore:()=>WorkerSynthesizerCore,WorkletSynthesizer:()=>WorkletSynthesizer,audioBufferToWav:()=>audioBufferToWav});var import_stable=__toESM(require_stable(),1);var import_runtime2=__toESM(require_runtime(),1);// node_modules/spessasynth_core/dist/index.js
var __require2=/* @__PURE__ */(x=>typeof __require!=="undefined"?__require:typeof Proxy!=="undefined"?new Proxy(x,{get:(a,b)=>(typeof __require!=="undefined"?__require:a)[b]}):x)(function(x){if(typeof __require!=="undefined")return __require.apply(this,arguments);throw Error('Dynamic require of "'+x+'" is not supported');});var IndexedByteArray=class extends Uint8Array{/**
     * The current index of the array.
     */currentIndex=0;/**
     * Returns a section of an array.
     * @param start The beginning of the specified portion of the array.
     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.
     */slice(start,end){const a=super.slice(start,end);a.currentIndex=0;return a;}};function readBinaryString(dataArray,bytes=dataArray.length,offset=0){let string="";for(let i=0;i<bytes;i++){const byte=dataArray[offset+i];if(byte===0){return string;}string+=String.fromCharCode(byte);}return string;}function readBinaryStringIndexed(dataArray,bytes){const startIndex=dataArray.currentIndex;dataArray.currentIndex+=bytes;return readBinaryString(dataArray,bytes,startIndex);}function getStringBytes(string,addZero=false,ensureEven=false){let len=string.length;if(addZero){len++;}if(ensureEven&&len%2!==0){len++;}const arr=new IndexedByteArray(len);writeBinaryStringIndexed(arr,string);return arr;}function writeBinaryStringIndexed(outArray,string,padLength=0){if(padLength>0){if(string.length>padLength){string=string.slice(0,padLength);}}for(let i=0;i<string.length;i++){outArray[outArray.currentIndex++]=string.charCodeAt(i);}if(padLength>string.length){for(let i=0;i<padLength-string.length;i++){outArray[outArray.currentIndex++]=0;}}return outArray;}function readLittleEndianIndexed(dataArray,bytesAmount){const res=readLittleEndian(dataArray,bytesAmount,dataArray.currentIndex);dataArray.currentIndex+=bytesAmount;return res;}function readLittleEndian(dataArray,bytesAmount,offset=0){let out=0;for(let i=0;i<bytesAmount;i++){out|=dataArray[offset+i]<<i*8;}return out>>>0;}function writeLittleEndianIndexed(dataArray,number,byteTarget){for(let i=0;i<byteTarget;i++){dataArray[dataArray.currentIndex++]=number>>i*8&255;}}function writeWord(dataArray,word){dataArray[dataArray.currentIndex++]=word&255;dataArray[dataArray.currentIndex++]=word>>8;}function writeDword(dataArray,dword){writeLittleEndianIndexed(dataArray,dword,4);}function signedInt16(byte1,byte2){const val=byte2<<8|byte1;if(val>32767){return val-65536;}return val;}function signedInt8(byte){if(byte>127){return byte-256;}return byte;}var RIFFChunk=class{/**
     * The chunks FourCC code.
     */header;/**
     * Chunk's size, in bytes.
     */size;/**
     * Chunk's binary data. Note that this will have a length of 0 if "readData" was set to false.
     */data;/**
     * Creates a new RIFF chunk.
     */constructor(header,size,data){this.header=header;this.size=size;this.data=data;}};function readRIFFChunk(dataArray,readData=true,forceShift=false){const header=readBinaryStringIndexed(dataArray,4);let size=readLittleEndianIndexed(dataArray,4);if(header===""){size=0;}let chunkData;if(readData){chunkData=dataArray.slice(dataArray.currentIndex,dataArray.currentIndex+size);}else{chunkData=new IndexedByteArray(0);}if(readData||forceShift){dataArray.currentIndex+=size;if(size%2!==0){dataArray.currentIndex++;}}return new RIFFChunk(header,size,chunkData);}function writeRIFFChunkRaw(header,data,addZeroByte=false,isList=false){if(header.length!==4){throw new Error(`Invalid header length: ${header}`);}let dataStartOffset=8;let headerWritten=header;let dataLength=data.length;if(addZeroByte){dataLength++;}let writtenSize=dataLength;if(isList){dataStartOffset+=4;writtenSize+=4;headerWritten="LIST";}let finalSize=dataStartOffset+dataLength;if(finalSize%2!==0){finalSize++;}const outArray=new IndexedByteArray(finalSize);writeBinaryStringIndexed(outArray,headerWritten);writeDword(outArray,writtenSize);if(isList){writeBinaryStringIndexed(outArray,header);}outArray.set(data,dataStartOffset);return outArray;}function writeRIFFChunkParts(header,chunks,isList=false){let dataOffset=8;let headerWritten=header;const dataLength=chunks.reduce((len,c)=>c.length+len,0);let writtenSize=dataLength;if(isList){dataOffset+=4;writtenSize+=4;headerWritten="LIST";}let finalSize=dataOffset+dataLength;if(finalSize%2!==0){finalSize++;}const outArray=new IndexedByteArray(finalSize);writeBinaryStringIndexed(outArray,headerWritten);writeDword(outArray,writtenSize);if(isList){writeBinaryStringIndexed(outArray,header);}chunks.forEach(c=>{outArray.set(c,dataOffset);dataOffset+=c.length;});return outArray;}function findRIFFListType(collection,type){return collection.find(c=>{if(c.header!=="LIST"){return false;}c.data.currentIndex=4;return readBinaryString(c.data,4)===type;});}function fillWithDefaults(obj,defObj){return{...defObj,...(obj??{})};}function audioToWav(audioData,sampleRate,options=DEFAULT_WAV_WRITE_OPTIONS){const length=audioData[0].length;const numChannels=audioData.length;const bytesPerSample=2;const fullOptions=fillWithDefaults(options,DEFAULT_WAV_WRITE_OPTIONS);const loop=fullOptions.loop;const metadata=fullOptions.metadata;let infoChunk=new IndexedByteArray(0);const infoOn=Object.keys(metadata).length>0;if(infoOn){const encoder=new TextEncoder();const infoChunks=[writeRIFFChunkRaw("ICMT",encoder.encode("Created with SpessaSynth"),true)];if(metadata.artist){infoChunks.push(writeRIFFChunkRaw("IART",encoder.encode(metadata.artist),true));}if(metadata.album){infoChunks.push(writeRIFFChunkRaw("IPRD",encoder.encode(metadata.album),true));}if(metadata.genre){infoChunks.push(writeRIFFChunkRaw("IGNR",encoder.encode(metadata.genre),true));}if(metadata.title){infoChunks.push(writeRIFFChunkRaw("INAM",encoder.encode(metadata.title),true));}infoChunk=writeRIFFChunkParts("INFO",infoChunks,true);}let cueChunk=new IndexedByteArray(0);const cueOn=(loop===null||loop===void 0?void 0:loop.end)!==void 0&&(loop===null||loop===void 0?void 0:loop.start)!==void 0;if(cueOn){const loopStartSamples=Math.floor(loop.start*sampleRate);const loopEndSamples=Math.floor(loop.end*sampleRate);const cueStart=new IndexedByteArray(24);writeLittleEndianIndexed(cueStart,0,4);writeLittleEndianIndexed(cueStart,0,4);writeBinaryStringIndexed(cueStart,"data");writeLittleEndianIndexed(cueStart,0,4);writeLittleEndianIndexed(cueStart,0,4);writeLittleEndianIndexed(cueStart,loopStartSamples,4);const cueEnd=new IndexedByteArray(24);writeLittleEndianIndexed(cueEnd,1,4);writeLittleEndianIndexed(cueEnd,0,4);writeBinaryStringIndexed(cueEnd,"data");writeLittleEndianIndexed(cueEnd,0,4);writeLittleEndianIndexed(cueEnd,0,4);writeLittleEndianIndexed(cueEnd,loopEndSamples,4);cueChunk=writeRIFFChunkParts("cue ",[new IndexedByteArray([2,0,0,0]),// Cue points count
cueStart,cueEnd]);}const headerSize=44;const dataSize=length*numChannels*bytesPerSample;const fileSize=headerSize+dataSize+infoChunk.length+cueChunk.length-8;const header=new Uint8Array(headerSize);header.set([82,73,70,70],0);header.set(new Uint8Array([fileSize&255,fileSize>>8&255,fileSize>>16&255,fileSize>>24&255]),4);header.set([87,65,86,69],8);header.set([102,109,116,32],12);header.set([16,0,0,0],16);header.set([1,0],20);header.set([numChannels&255,numChannels>>8],22);header.set(new Uint8Array([sampleRate&255,sampleRate>>8&255,sampleRate>>16&255,sampleRate>>24&255]),24);const byteRate=sampleRate*numChannels*bytesPerSample;header.set(new Uint8Array([byteRate&255,byteRate>>8&255,byteRate>>16&255,byteRate>>24&255]),28);header.set([numChannels*bytesPerSample,0],32);header.set([16,0],34);header.set([100,97,116,97],36);header.set(new Uint8Array([dataSize&255,dataSize>>8&255,dataSize>>16&255,dataSize>>24&255]),40);const wavData=new Uint8Array(fileSize+8);let offset=headerSize;wavData.set(header,0);let multiplier=32767;if(fullOptions.normalizeAudio){const numSamples=audioData[0].length;let maxAbsValue=0;for(let ch=0;ch<numChannels;ch++){const data=audioData[ch];for(let i=0;i<numSamples;i++){const sample=Math.abs(data[i]);if(sample>maxAbsValue){maxAbsValue=sample;}}}multiplier=maxAbsValue>0?32767/maxAbsValue:1;}for(let i=0;i<length;i++){audioData.forEach(d=>{const sample=Math.min(32767,Math.max(-32768,d[i]*multiplier));wavData[offset++]=sample&255;wavData[offset++]=sample>>8&255;});}if(infoOn){wavData.set(infoChunk,offset);offset+=infoChunk.length;}if(cueOn){wavData.set(cueChunk,offset);}return wavData.buffer;}function readBigEndian(dataArray,bytesAmount,offset=0){let out=0;for(let i=0;i<bytesAmount;i++){out=out<<8|dataArray[offset+i];}return out>>>0;}function readBigEndianIndexed(dataArray,bytesAmount){const res=readBigEndian(dataArray,bytesAmount,dataArray.currentIndex);dataArray.currentIndex+=bytesAmount;return res;}function writeBigEndian(number,bytesAmount){const bytes=new Array(bytesAmount).fill(0);for(let i=bytesAmount-1;i>=0;i--){bytes[i]=number&255;number>>=8;}return bytes;}function readVariableLengthQuantity(MIDIbyteArray){let out=0;while(MIDIbyteArray){const byte=MIDIbyteArray[MIDIbyteArray.currentIndex++];out=out<<7|byte&127;if(byte>>7!==1){break;}}return out;}function writeVariableLengthQuantity(number){const bytes=[number&127];number>>=7;while(number>0){bytes.unshift(number&127|128);number>>=7;}return bytes;}function formatTime(totalSeconds){totalSeconds=Math.floor(totalSeconds);const minutes=Math.floor(totalSeconds/60);const seconds=Math.round(totalSeconds-minutes*60);return{minutes,seconds,time:`${minutes.toString().padStart(2,"0")}:${seconds.toString().padStart(2,"0")}`};}function arrayToHexString(arr){let hexString="";for(const i of arr){const hex=i.toString(16).padStart(2,"0").toUpperCase();hexString+=hex;hexString+=" ";}return hexString;}var consoleColors={warn:"color: orange;",unrecognized:"color: red;",info:"color: aqua;",recognized:"color: lime",value:"color: yellow; background-color: black;"};var tr;(()=>{var l=Uint8Array,T=Uint16Array,ur=Int32Array,W=new l([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),X=new l([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),wr=new l([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Y=function(r,a){for(var e=new T(31),f=0;f<31;++f)e[f]=a+=1<<r[f-1];for(var v=new ur(e[30]),f=1;f<30;++f)for(var g=e[f];g<e[f+1];++g)v[g]=g-e[f]<<5|f;return{b:e,r:v};},Z=Y(W,2),$=Z.b,cr=Z.r;$[28]=258,cr[258]=28;var j=Y(X,0),hr=j.b,Fr=j.r,_=new T(32768);for(i=0;i<32768;++i)c=(i&43690)>>1|(i&21845)<<1,c=(c&52428)>>2|(c&13107)<<2,c=(c&61680)>>4|(c&3855)<<4,_[i]=((c&65280)>>8|(c&255)<<8)>>1;var c,i,A=function(r,a,e){for(var f=r.length,v=0,g=new T(a);v<f;++v)r[v]&&++g[r[v]-1];var k=new T(a);for(v=1;v<a;++v)k[v]=k[v-1]+g[v-1]<<1;var b;if(e){b=new T(1<<a);var m=15-a;for(v=0;v<f;++v)if(r[v])for(var U=v<<4|r[v],x=a-r[v],n=k[r[v]-1]++<<x,o=n|(1<<x)-1;n<=o;++n)b[_[n]>>m]=U;}else for(b=new T(f),v=0;v<f;++v)r[v]&&(b[v]=_[k[r[v]-1]++]>>15-r[v]);return b;},M=new l(288);for(i=0;i<144;++i)M[i]=8;var i;for(i=144;i<256;++i)M[i]=9;var i;for(i=256;i<280;++i)M[i]=7;var i;for(i=280;i<288;++i)M[i]=8;var i,L=new l(32);for(i=0;i<32;++i)L[i]=5;var i,gr=A(M,9,1),br=A(L,5,1),q=function(r){for(var a=r[0],e=1;e<r.length;++e)r[e]>a&&(a=r[e]);return a;},u=function(r,a,e){var f=a/8|0;return(r[f]|r[f+1]<<8)>>(a&7)&e;},C=function(r,a){var e=a/8|0;return(r[e]|r[e+1]<<8|r[e+2]<<16)>>(a&7);},kr=function(r){return(r+7)/8|0;},xr=function(r,a,e){return(a==null||a<0)&&(a=0),(e==null||e>r.length)&&(e=r.length),new l(r.subarray(a,e));},yr=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],h=function(r,a,e){var f=new Error(a||yr[r]);if(f.code=r,Error.captureStackTrace&&Error.captureStackTrace(f,h),!e)throw f;return f;},Sr=function(r,a,e,f){var v=r.length,g=f?f.length:0;if(!v||a.f&&!a.l)return e||new l(0);var k=!e,b=k||a.i!=2,m=a.i;k&&(e=new l(v*3));var U=function(fr){var or=e.length;if(fr>or){var lr=new l(Math.max(or*2,fr));lr.set(e),e=lr;}},x=a.f||0,n=a.p||0,o=a.b||0,S=a.l,I=a.d,z=a.m,D=a.n,G=v*8;do{if(!S){x=u(r,n,1);var H=u(r,n+1,3);if(n+=3,H){if(H==1)S=gr,I=br,z=9,D=5;else if(H==2){var N=u(r,n,31)+257,s=u(r,n+10,15)+4,d=N+u(r,n+5,31)+1;n+=14;for(var F=new l(d),P=new l(19),t=0;t<s;++t)P[wr[t]]=u(r,n+t*3,7);n+=s*3;for(var rr=q(P),Ar=(1<<rr)-1,Mr=A(P,rr,1),t=0;t<d;){var ar=Mr[u(r,n,Ar)];n+=ar&15;var w=ar>>4;if(w<16)F[t++]=w;else{var E=0,O=0;for(w==16?(O=3+u(r,n,3),n+=2,E=F[t-1]):w==17?(O=3+u(r,n,7),n+=3):w==18&&(O=11+u(r,n,127),n+=7);O--;)F[t++]=E;}}var er=F.subarray(0,N),y=F.subarray(N);z=q(er),D=q(y),S=A(er,z,1),I=A(y,D,1);}else h(1);}else{var w=kr(n)+4,J=r[w-4]|r[w-3]<<8,K=w+J;if(K>v){m&&h(0);break;}b&&U(o+J),e.set(r.subarray(w,K),o),a.b=o+=J,a.p=n=K*8,a.f=x;continue;}if(n>G){m&&h(0);break;}}b&&U(o+131072);for(var Ur=(1<<z)-1,zr=(1<<D)-1,Q=n;;Q=n){var E=S[C(r,n)&Ur],p=E>>4;if(n+=E&15,n>G){m&&h(0);break;}if(E||h(2),p<256)e[o++]=p;else if(p==256){Q=n,S=null;break;}else{var nr=p-254;if(p>264){var t=p-257,B=W[t];nr=u(r,n,(1<<B)-1)+$[t],n+=B;}var R=I[C(r,n)&zr],V=R>>4;R||h(3),n+=R&15;var y=hr[V];if(V>3){var B=X[V];y+=C(r,n)&(1<<B)-1,n+=B;}if(n>G){m&&h(0);break;}b&&U(o+131072);var vr=o+nr;if(o<y){var ir=g-y,Dr=Math.min(y,vr);for(ir+o<0&&h(3);o<Dr;++o)e[o]=f[ir+o];}for(;o<vr;++o)e[o]=e[o-y];}}a.l=S,a.p=Q,a.b=o,a.f=x,S&&(x=1,a.m=z,a.d=I,a.n=D);}while(!x);return o!=e.length&&k?xr(e,0,o):e.subarray(0,o);},Tr=new l(0);function mr(r,a){return Sr(r,{i:2},a&&a.out,a&&a.dictionary);}var Er=typeof TextDecoder<"u"&&new TextDecoder(),pr=0;try{Er.decode(Tr,{stream:true}),pr=1;}catch{}tr=mr;})();var inf=tr;var ENABLE_INFO=false;var ENABLE_WARN=true;var ENABLE_GROUP=false;function SpessaSynthLogging(enableInfo,enableWarn,enableGroup){ENABLE_INFO=enableInfo;ENABLE_WARN=enableWarn;ENABLE_GROUP=enableGroup;}function SpessaSynthInfo(...message){if(ENABLE_INFO){console.info(...message);}}function SpessaSynthWarn(...message){if(ENABLE_WARN){console.warn(...message);}}function SpessaSynthGroup(...message){if(ENABLE_GROUP){console.group(...message);}}function SpessaSynthGroupCollapsed(...message){if(ENABLE_GROUP){console.groupCollapsed(...message);}}function SpessaSynthGroupEnd(){if(ENABLE_GROUP){console.groupEnd();}}var SpessaSynthCoreUtils={consoleColors,SpessaSynthInfo,SpessaSynthWarn,SpessaSynthGroupCollapsed,// noinspection JSUnusedGlobalSymbols
SpessaSynthGroup,SpessaSynthGroupEnd,// noinspection JSUnusedGlobalSymbols
readBytesAsUintBigEndian:readBigEndian,readLittleEndian:readLittleEndianIndexed,readBytesAsString:readBinaryStringIndexed,// noinspection JSUnusedGlobalSymbols
readVariableLengthQuantity,inflateSync:inf};var DEFAULT_WAV_WRITE_OPTIONS={normalizeAudio:true,loop:void 0,metadata:{}};var MIDIMessage=class{/**
     * Absolute number of MIDI ticks from the start of the track.
     */ticks;/**
     * The MIDI message status byte. Note that for meta events, it is the second byte. (not 0xFF)
     */statusByte;/**
     * Message's binary data
     */data;/**
     * Creates a new MIDI message
     * @param ticks time of this message in absolute MIDI ticks
     * @param byte the message status byte
     * @param data the message's binary data
     */constructor(ticks,byte,data){this.ticks=ticks;this.statusByte=byte;this.data=data;}};function getChannel(statusByte){const eventType=statusByte&240;const channel=statusByte&15;let resultChannel=channel;switch(eventType){// Midi (and meta and sysex headers)
case 128:case 144:case 160:case 176:case 192:case 208:case 224:break;case 240:switch(channel){case 0:resultChannel=-3;break;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:resultChannel=-1;break;case 15:resultChannel=-2;break;}break;default:resultChannel=-1;}return resultChannel;}function getEvent(statusByte){const status=statusByte&240;const channel=statusByte&15;let eventChannel=-1;let eventStatus=statusByte;if(status>=128&&status<=224){eventChannel=channel;eventStatus=status;}return{status:eventStatus,channel:eventChannel};}var dataBytesAmount={8:2,// Note off
9:2,// Note on
10:2,// Note at
11:2,// Cc change
12:1,// Pg change
13:1,// Channel after touch
14:2// Pitch wheel
};var midiMessageTypes={noteOff:128,noteOn:144,polyPressure:160,controllerChange:176,programChange:192,channelPressure:208,pitchWheel:224,systemExclusive:240,timecode:241,songPosition:242,songSelect:243,tuneRequest:246,clock:248,start:250,continue:251,stop:252,activeSensing:254,reset:255,sequenceNumber:0,text:1,copyright:2,trackName:3,instrumentName:4,lyric:5,marker:6,cuePoint:7,programName:8,midiChannelPrefix:32,midiPort:33,endOfTrack:47,setTempo:81,smpteOffset:84,timeSignature:88,keySignature:89,sequenceSpecific:127};var midiControllers={bankSelect:0,modulationWheel:1,breathController:2,undefinedCC3:3,footController:4,portamentoTime:5,dataEntryMSB:6,mainVolume:7,balance:8,undefinedCC9:9,pan:10,expressionController:11,effectControl1:12,effectControl2:13,undefinedCC14:14,undefinedCC15:15,generalPurposeController1:16,generalPurposeController2:17,generalPurposeController3:18,generalPurposeController4:19,undefinedCC20:20,undefinedCC21:21,undefinedCC22:22,undefinedCC23:23,undefinedCC24:24,undefinedCC25:25,undefinedCC26:26,undefinedCC27:27,undefinedCC28:28,undefinedCC29:29,undefinedCC30:30,undefinedCC31:31,bankSelectLSB:32,modulationWheelLSB:33,breathControllerLSB:34,undefinedCC3LSB:35,footControllerLSB:36,portamentoTimeLSB:37,dataEntryLSB:38,mainVolumeLSB:39,balanceLSB:40,undefinedCC9LSB:41,panLSB:42,expressionControllerLSB:43,effectControl1LSB:44,effectControl2LSB:45,undefinedCC14LSB:46,undefinedCC15LSB:47,undefinedCC16LSB:48,undefinedCC17LSB:49,undefinedCC18LSB:50,undefinedCC19LSB:51,undefinedCC20LSB:52,undefinedCC21LSB:53,undefinedCC22LSB:54,undefinedCC23LSB:55,undefinedCC24LSB:56,undefinedCC25LSB:57,undefinedCC26LSB:58,undefinedCC27LSB:59,undefinedCC28LSB:60,undefinedCC29LSB:61,undefinedCC30LSB:62,undefinedCC31LSB:63,sustainPedal:64,portamentoOnOff:65,sostenutoPedal:66,softPedal:67,legatoFootswitch:68,hold2Pedal:69,soundVariation:70,filterResonance:71,releaseTime:72,attackTime:73,brightness:74,decayTime:75,vibratoRate:76,vibratoDepth:77,vibratoDelay:78,soundController10:79,generalPurposeController5:80,generalPurposeController6:81,generalPurposeController7:82,generalPurposeController8:83,portamentoControl:84,undefinedCC85:85,undefinedCC86:86,undefinedCC87:87,undefinedCC88:88,undefinedCC89:89,undefinedCC90:90,reverbDepth:91,tremoloDepth:92,chorusDepth:93,detuneDepth:94,phaserDepth:95,dataIncrement:96,dataDecrement:97,nonRegisteredParameterLSB:98,nonRegisteredParameterMSB:99,registeredParameterLSB:100,registeredParameterMSB:101,undefinedCC102LSB:102,undefinedCC103LSB:103,undefinedCC104LSB:104,undefinedCC105LSB:105,undefinedCC106LSB:106,undefinedCC107LSB:107,undefinedCC108LSB:108,undefinedCC109LSB:109,undefinedCC110LSB:110,undefinedCC111LSB:111,undefinedCC112LSB:112,undefinedCC113LSB:113,undefinedCC114LSB:114,undefinedCC115LSB:115,undefinedCC116LSB:116,undefinedCC117LSB:117,undefinedCC118LSB:118,undefinedCC119LSB:119,allSoundOff:120,resetAllControllers:121,localControlOnOff:122,allNotesOff:123,omniModeOff:124,omniModeOn:125,monoModeOn:126,polyModeOn:127};function writeMIDIInternal(midi){if(!midi.tracks){throw new Error("MIDI has no tracks!");}const binaryTrackData=[];for(const track of midi.tracks){const binaryTrack=[];let currentTick=0;let runningByte=void 0;for(const event of track.events){const deltaTicks=Math.max(0,event.ticks-currentTick);if(event.statusByte===midiMessageTypes.endOfTrack){currentTick+=deltaTicks;continue;}let messageData;if(event.statusByte<=midiMessageTypes.sequenceSpecific){messageData=[255,event.statusByte,...writeVariableLengthQuantity(event.data.length),...event.data];runningByte=void 0;}else if(event.statusByte===midiMessageTypes.systemExclusive){messageData=[240,...writeVariableLengthQuantity(event.data.length),...event.data];runningByte=void 0;}else{messageData=[];if(runningByte!==event.statusByte){runningByte=event.statusByte;messageData.push(event.statusByte);}messageData.push(...event.data);}binaryTrack.push(...writeVariableLengthQuantity(deltaTicks));binaryTrack.push(...messageData);currentTick+=deltaTicks;}binaryTrack.push(0);binaryTrack.push(255);binaryTrack.push(midiMessageTypes.endOfTrack);binaryTrack.push(0);binaryTrackData.push(new Uint8Array(binaryTrack));}const writeText=(text,arr)=>{for(let i=0;i<text.length;i++){arr.push(text.charCodeAt(i));}};const binaryData=[];writeText("MThd",binaryData);binaryData.push(...writeBigEndian(6,4));binaryData.push(0,midi.format);binaryData.push(...writeBigEndian(midi.tracks.length,2));binaryData.push(...writeBigEndian(midi.timeDivision,2));for(const track of binaryTrackData){writeText("MTrk",binaryData);binaryData.push(...writeBigEndian(track.length,4));binaryData.push(...track);}return new Uint8Array(binaryData).buffer;}var VOICE_CAP=350;var DEFAULT_PERCUSSION=9;var MIDI_CHANNEL_COUNT=16;var DEFAULT_SYNTH_MODE="gs";var ALL_CHANNELS_OR_DIFFERENT_ACTION=-1;var EMBEDDED_SOUND_BANK_ID=`SPESSASYNTH_EMBEDDED_BANK_${Math.random()}_DO_NOT_DELETE`;var GENERATOR_OVERRIDE_NO_CHANGE_VALUE=32767;var DEFAULT_SYNTH_METHOD_OPTIONS={time:0};var MIN_NOTE_LENGTH=0.03;var MIN_EXCLUSIVE_LENGTH=0.07;var SYNTHESIZER_GAIN=1;var XG_SFX_VOICE=64;var GM2_DEFAULT_BANK=121;var BankSelectHacks=class{/**
     * GM2 has a different default bank number
     */static getDefaultBank(sys){return sys==="gm2"?GM2_DEFAULT_BANK:0;}static getDrumBank(sys){switch(sys){default:throw new Error(`${sys} doesn't have a bank MSB for drums.`);case"gm2":return 120;case"xg":return 127;}}/**
     * Checks if this bank number is XG drums
     */static isXGDrums(bankMSB){return bankMSB===120||bankMSB===126||bankMSB===127;}/**
     * Checks if this MSB is a valid XG MSB
     */static isValidXGMSB(bankMSB){return this.isXGDrums(bankMSB)||bankMSB===XG_SFX_VOICE||bankMSB===GM2_DEFAULT_BANK;}static isSystemXG(system){return system==="gm2"||system==="xg";}static addBankOffset(bankMSB,bankOffset,xgDrums=true){if(this.isXGDrums(bankMSB)&&xgDrums){return bankMSB;}return Math.min(bankMSB+bankOffset,127);}static subtrackBankOffset(bankMSB,bankOffset,xgDrums=true){if(this.isXGDrums(bankMSB)&&xgDrums){return bankMSB;}return Math.max(0,bankMSB-bankOffset);}};function isXGOn(e){return e.data[0]===67&&// Yamaha
e.data[2]===76&&// XG ON
e.data[5]===126&&e.data[6]===0;}function isGSDrumsOn(e){return e.data[0]===65&&// Roland
e.data[2]===66&&// GS
e.data[3]===18&&// GS
e.data[4]===64&&// System parameter
(e.data[5]&16)!==0&&// Part parameter
e.data[6]===21;}function isGSOn(e){return e.data[0]===65&&// Roland
e.data[2]===66&&// GS
e.data[6]===127;}function isGMOn(e){return e.data[0]===126&&// Non realtime
e.data[2]===9&&// Gm system
e.data[3]===1;}function isGM2On(e){return e.data[0]===126&&// Non realtime
e.data[2]===9&&// Gm system
e.data[3]===3;}function getGsOn(ticks){return new MIDIMessage(ticks,midiMessageTypes.systemExclusive,new IndexedByteArray([65,// Roland
16,// Device ID (defaults to 16 on roland)
66,// GS
18,// Command ID (DT1) (whatever that means...)
64,// System parameter - Address
0,// Global parameter -  Address
127,// GS Change - Address
0,// Turn on - Data
65,// Checksum
247// End of exclusive
]));}var MIDIPatchTools=class _MIDIPatchTools{/**
     * Converts a MIDI patch to a string.
     */static toMIDIString(patch){if(patch.isGMGSDrum){return`DRUM:${patch.program}`;}return`${patch.bankLSB}:${patch.bankMSB}:${patch.program}`;}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a MIDI patch from a string.
     * @param string
     */static fromMIDIString(string){const parts=string.split(":");if(parts.length>3||parts.length<2){throw new Error("Invalid MIDI string:");}if(string.startsWith("DRUM")){return{bankMSB:0,bankLSB:0,program:parseInt(parts[1]),isGMGSDrum:true};}else{return{bankLSB:parseInt(parts[0]),bankMSB:parseInt(parts[1]),program:parseInt(parts[2]),isGMGSDrum:false};}}/**
     * Converts a named MIDI patch to string.
     * @param patch
     */static toNamedMIDIString(patch){return`${_MIDIPatchTools.toMIDIString(patch)} ${patch.name}`;}/**
     * Checks if two MIDI patches match.
     * @param patch1
     * @param patch2
     */static matches(patch1,patch2){if(patch1.isGMGSDrum||patch2.isGMGSDrum){return patch1.isGMGSDrum===patch2.isGMGSDrum&&patch1.program===patch2.program;}return patch1.program===patch2.program&&patch1.bankLSB===patch2.bankLSB&&patch1.bankMSB===patch2.bankMSB;}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a named MIDI patch from a string.
     * @param string
     */static fromNamedMIDIString(string){const firstSpace=string.indexOf(" ");if(firstSpace<0){throw new Error(`Invalid named MIDI string: ${string}`);}const patch=this.fromMIDIString(string.substring(0,firstSpace));const name=string.substring(firstSpace+1);return{...patch,name};}static sorter(a,b){if(a.program!==b.program){return a.program-b.program;}if(a.isGMGSDrum&&!b.isGMGSDrum)return 1;if(!a.isGMGSDrum&&b.isGMGSDrum)return-1;if(a.bankMSB!==b.bankMSB){return a.bankMSB-b.bankMSB;}return a.bankLSB-b.bankLSB;}};var DEFAULT_COPYRIGHT="Created using SpessaSynth";function correctBankOffsetInternal(mid,bankOffset,soundBank){let system="gm";const unwantedSystems=[];const ports=Array(mid.tracks.length).fill(0);const channelsAmount=16+Math.max(...mid.portChannelOffsetMap);const channelsInfo=[];for(let i=0;i<channelsAmount;i++){channelsInfo.push({program:0,drums:i%16===DEFAULT_PERCUSSION,// Drums appear on 9 every 16 channels,
lastBank:void 0,lastBankLSB:void 0,hasBankSelect:false});}mid.iterate((e,trackNum)=>{const portOffset=mid.portChannelOffsetMap[ports[trackNum]];if(e.statusByte===midiMessageTypes.midiPort){ports[trackNum]=e.data[0];return;}const status=e.statusByte&240;if(status!==midiMessageTypes.controllerChange&&status!==midiMessageTypes.programChange&&status!==midiMessageTypes.systemExclusive){return;}if(status===midiMessageTypes.systemExclusive){if(!isGSDrumsOn(e)){if(isXGOn(e)){system="xg";}else if(isGSOn(e)){system="gs";}else if(isGMOn(e)){system="gm";unwantedSystems.push({tNum:trackNum,e});}else if(isGM2On(e)){system="gm2";}return;}const sysexChannel=[9,0,1,2,3,4,5,6,7,8,10,11,12,13,14,15][e.data[5]&15]+portOffset;channelsInfo[sysexChannel].drums=!!(e.data[7]>0&&e.data[5]>>4);return;}const chNum=(e.statusByte&15)+portOffset;const channel=channelsInfo[chNum];if(status===midiMessageTypes.programChange){var _channel$lastBankLSB,_channel$lastBank;const sentProgram=e.data[0];const patch={program:sentProgram,bankLSB:((_channel$lastBankLSB=channel.lastBankLSB)===null||_channel$lastBankLSB===void 0||(_channel$lastBankLSB=_channel$lastBankLSB.data)===null||_channel$lastBankLSB===void 0?void 0:_channel$lastBankLSB[1])??0,// Make sure to take bank offset into account
bankMSB:BankSelectHacks.subtrackBankOffset(((_channel$lastBank=channel.lastBank)===null||_channel$lastBank===void 0||(_channel$lastBank=_channel$lastBank.data)===null||_channel$lastBank===void 0?void 0:_channel$lastBank[1])??0,mid.bankOffset),isGMGSDrum:channel.drums};const targetPreset=soundBank.getPreset(patch,system);SpessaSynthInfo(`%cInput patch: %c${MIDIPatchTools.toMIDIString(patch)}%c. Channel %c${chNum}%c. Changing patch to ${targetPreset.toString()}.`,consoleColors.info,consoleColors.unrecognized,consoleColors.info,consoleColors.recognized,consoleColors.info);e.data[0]=targetPreset.program;if(targetPreset.isGMGSDrum&&BankSelectHacks.isSystemXG(system)){return;}if(channel.lastBank===void 0){return;}channel.lastBank.data[1]=BankSelectHacks.addBankOffset(targetPreset.bankMSB,bankOffset,targetPreset.isXGDrums);if(channel.lastBankLSB===void 0){return;}channel.lastBankLSB.data[1]=targetPreset.bankLSB;return;}const isLSB=e.data[0]===midiControllers.bankSelectLSB;if(e.data[0]!==midiControllers.bankSelect&&!isLSB){return;}channel.hasBankSelect=true;if(isLSB){channel.lastBankLSB=e;}else{channel.lastBank=e;}});channelsInfo.forEach((has,ch)=>{if(has.hasBankSelect){return;}const midiChannel=ch%16;const status=midiMessageTypes.programChange|midiChannel;const portOffset=Math.floor(ch/16)*16;const port=mid.portChannelOffsetMap.indexOf(portOffset);const track=mid.tracks.find(t=>t.port===port&&t.channels.has(midiChannel));if(track===void 0){return;}let indexToAdd=track.events.findIndex(e=>e.statusByte===status);if(indexToAdd===-1){const programIndex=track.events.findIndex(e=>e.statusByte>128&&e.statusByte<240&&(e.statusByte&15)===midiChannel);if(programIndex===-1){return;}const programTicks=track.events[programIndex].ticks;const targetProgram=soundBank.getPreset({bankMSB:0,bankLSB:0,program:0,isGMGSDrum:false},system).program;track.addEvent(new MIDIMessage(programTicks,midiMessageTypes.programChange|midiChannel,new IndexedByteArray([targetProgram])),programIndex);indexToAdd=programIndex;}SpessaSynthInfo(`%cAdding bank select for %c${ch}`,consoleColors.info,consoleColors.recognized);const ticks=track.events[indexToAdd].ticks;const targetPreset=soundBank.getPreset({bankLSB:0,bankMSB:0,program:has.program,isGMGSDrum:has.drums},system);const targetBank=BankSelectHacks.addBankOffset(targetPreset.bankMSB,bankOffset,targetPreset.isXGDrums);track.addEvent(new MIDIMessage(ticks,midiMessageTypes.controllerChange|midiChannel,new IndexedByteArray([midiControllers.bankSelect,targetBank])),indexToAdd);});if(system==="gm"&&!BankSelectHacks.isSystemXG(system)){for(const m of unwantedSystems){const track=mid.tracks[m.tNum];track.deleteEvent(track.events.indexOf(m.e));}let index=0;if(mid.tracks[0].events[0].statusByte===midiMessageTypes.trackName){index++;}mid.tracks[0].addEvent(getGsOn(0),index);}}var DEFAULT_RMIDI_WRITE_OPTIONS={bankOffset:0,metadata:{},correctBankOffset:true,soundBank:void 0};function writeRMIDIInternal(mid,soundBankBinary,options){const metadata=options.metadata;SpessaSynthGroup("%cWriting the RMIDI File...",consoleColors.info);SpessaSynthInfo("metadata",metadata);SpessaSynthInfo("Initial bank offset",mid.bankOffset);if(options.correctBankOffset){if(!options.soundBank){throw new Error("Sound bank must be provided if correcting bank offset.");}correctBankOffsetInternal(mid,options.bankOffset,options.soundBank);}const newMid=new IndexedByteArray(mid.writeMIDI());metadata.name??=mid.getName();metadata.creationDate??=/* @__PURE__ */new Date();metadata.copyright??=DEFAULT_COPYRIGHT;metadata.software??="SpessaSynth";Object.entries(metadata).forEach(v=>{const val=v;if(val[1]){mid.setRMIDInfo(val[0],val[1]);}});const infoContent=[];Object.entries(mid.rmidiInfo).forEach(v=>{const type=v[0];const data=v[1];const writeInfo=type2=>{infoContent.push(writeRIFFChunkRaw(type2,data));};switch(type){case"album":writeInfo("IALB");writeInfo("IPRD");break;case"software":writeInfo("ISFT");break;case"infoEncoding":writeInfo("IENC");break;case"creationDate":writeInfo("ICRD");break;case"picture":writeInfo("IPIC");break;case"name":writeInfo("INAM");break;case"artist":writeInfo("IART");break;case"genre":writeInfo("IGNR");break;case"copyright":writeInfo("ICOP");break;case"comment":writeInfo("ICMT");break;case"engineer":writeInfo("IENG");break;case"subject":writeInfo("ISBJ");break;case"midiEncoding":writeInfo("MENC");break;}});const DBNK=new IndexedByteArray(2);writeLittleEndianIndexed(DBNK,options.bankOffset,2);infoContent.push(writeRIFFChunkRaw("DBNK",DBNK));SpessaSynthInfo("%cFinished!",consoleColors.info);SpessaSynthGroupEnd();return writeRIFFChunkParts("RIFF",[getStringBytes("RMID"),writeRIFFChunkRaw("data",newMid),writeRIFFChunkParts("INFO",infoContent,true),new IndexedByteArray(soundBankBinary)]).buffer;}function getUsedProgramsAndKeys(mid,soundBank){SpessaSynthGroupCollapsed("%cSearching for all used programs and keys...",consoleColors.info);const channelsAmount=16+Math.max(...mid.portChannelOffsetMap);const channelPresets=[];let system="gs";for(let i=0;i<channelsAmount;i++){const isDrum=i%16===DEFAULT_PERCUSSION;channelPresets.push({preset:soundBank.getPreset({bankLSB:0,bankMSB:0,isGMGSDrum:isDrum,program:0},system),bankMSB:0,bankLSB:0,isDrum});}const usedProgramsAndKeys=/* @__PURE__ */new Map();const ports=mid.tracks.map(t=>t.port);mid.iterate((event,trackNum)=>{if(event.statusByte===midiMessageTypes.midiPort){ports[trackNum]=event.data[0];return;}const status=event.statusByte&240;if(status!==midiMessageTypes.noteOn&&status!==midiMessageTypes.controllerChange&&status!==midiMessageTypes.programChange&&status!==midiMessageTypes.systemExclusive){return;}const channel=(event.statusByte&15)+mid.portChannelOffsetMap[ports[trackNum]]||0;let ch=channelPresets[channel];switch(status){case midiMessageTypes.programChange:ch.preset=soundBank.getPreset({bankMSB:ch.bankMSB,bankLSB:ch.bankLSB,program:event.data[0],isGMGSDrum:ch.isDrum},system);break;case midiMessageTypes.controllerChange:{switch(event.data[0]){default:return;case midiControllers.bankSelectLSB:ch.bankLSB=event.data[1];break;case midiControllers.bankSelect:ch.bankMSB=event.data[1];}}break;case midiMessageTypes.noteOn:if(event.data[1]===0){return;}let combos=usedProgramsAndKeys.get(ch.preset);if(!combos){combos=/* @__PURE__ */new Set();usedProgramsAndKeys.set(ch.preset,combos);}combos.add(`${event.data[0]}-${event.data[1]}`);break;case midiMessageTypes.systemExclusive:{if(!isGSDrumsOn(event)){if(isXGOn(event)){system="xg";SpessaSynthInfo("%cXG on detected!",consoleColors.recognized);}else if(isGM2On(event)){system="gm2";SpessaSynthInfo("%cGM2 on detected!",consoleColors.recognized);}else if(isGMOn(event)){system="gm";SpessaSynthInfo("%cGM on detected!",consoleColors.recognized);}else if(isGSOn(event)){system="gs";SpessaSynthInfo("%cGS on detected!",consoleColors.recognized);}return;}const sysexChannel=[9,0,1,2,3,4,5,6,7,8,10,11,12,13,14,15][event.data[5]&15]+mid.portChannelOffsetMap[ports[trackNum]];const isDrum=!!(event.data[7]>0&&event.data[5]>>4);ch=channelPresets[sysexChannel];ch.isDrum=isDrum;}break;}});usedProgramsAndKeys.forEach((combos,preset)=>{if(combos.size===0){SpessaSynthInfo(`%cDetected change but no keys for %c${preset.name}`,consoleColors.info,consoleColors.value);usedProgramsAndKeys.delete(preset);}});SpessaSynthGroupEnd();return usedProgramsAndKeys;}function getNoteTimesInternal(midi,minDrumLength=0){const getTempo=event=>{event.data=new IndexedByteArray(event.data.buffer);return 6e7/readBigEndian(event.data,3);};const noteTimes=[];const trackData=midi.tracks.map(t=>t.events);const events=trackData.flat();events.sort((e1,e2)=>e1.ticks-e2.ticks);for(let i=0;i<16;i++){noteTimes.push([]);}let elapsedTime=0;let oneTickToSeconds=60/(120*midi.timeDivision);let eventIndex=0;let unfinished=0;const unfinishedNotes=[];for(let i=0;i<16;i++){unfinishedNotes.push([]);}const noteOff2=(midiNote,channel)=>{const noteIndex=unfinishedNotes[channel].findIndex(n=>n.midiNote===midiNote);const note=unfinishedNotes[channel][noteIndex];if(note){const time=elapsedTime-note.start;note.length=time;if(channel===DEFAULT_PERCUSSION){note.length=time<minDrumLength?minDrumLength:time;}unfinishedNotes[channel].splice(noteIndex,1);}unfinished--;};while(eventIndex<events.length){const event=events[eventIndex];const status=event.statusByte>>4;const channel=event.statusByte&15;if(status===8){noteOff2(event.data[0],channel);}else if(status===9){if(event.data[1]===0){noteOff2(event.data[0],channel);}else{noteOff2(event.data[0],channel);const noteTime={midiNote:event.data[0],start:elapsedTime,length:-1,velocity:event.data[1]/127};noteTimes[channel].push(noteTime);unfinishedNotes[channel].push(noteTime);unfinished++;}}else if(event.statusByte===81){oneTickToSeconds=60/(getTempo(event)*midi.timeDivision);}if(++eventIndex>=events.length){break;}elapsedTime+=oneTickToSeconds*(events[eventIndex].ticks-event.ticks);}if(unfinished>0){unfinishedNotes.forEach((channelNotes,channel)=>{channelNotes.forEach(note=>{const time=elapsedTime-note.start;note.length=time;if(channel===DEFAULT_PERCUSSION){note.length=time<minDrumLength?minDrumLength:time;}});});}return noteTimes;}var interpolationTypes={linear:0,nearestNeighbor:1,hermite:2};var dataEntryStates={Idle:0,RPCoarse:1,RPFine:2,NRPCoarse:3,NRPFine:4,DataCoarse:5,DataFine:6};var customControllers={channelTuning:0,// Cents, RPN for fine tuning
channelTransposeFine:1,// Cents, only the decimal tuning, (e.g., transpose is 4.5,
// Then shift by 4 keys + tune by 50 cents)
modulationMultiplier:2,// Cents, set by modulation depth RPN
masterTuning:3,// Cents, set by system exclusive
channelTuningSemitones:4,// Semitones, for RPN coarse tuning
channelKeyShift:5,// Key shift: for system exclusive
sf2NPRNGeneratorLSB:6// Sf2 NPRN LSB for selecting a generator value
};function getControllerChange(channel,cc,value,ticks){return new MIDIMessage(ticks,midiMessageTypes.controllerChange|channel%16,new IndexedByteArray([cc,value]));}function getDrumChange(channel,ticks){const chanAddress=16|[1,2,3,4,5,6,7,8,0,9,10,11,12,13,14,15][channel%16];const sysexData=[65,// Roland
16,// Device ID (defaults to 16 on roland)
66,// GS
18,// Command ID (DT1) (whatever that means...)
64,// System parameter           }
chanAddress,// Channel parameter   } Address
21,// Drum change                }
1// Is Drums                    } Data
];const sum=64+chanAddress+21+1;const checksum=128-sum%128;return new MIDIMessage(ticks,midiMessageTypes.systemExclusive,new IndexedByteArray([...sysexData,checksum,247]));}function modifyMIDIInternal(midi,desiredProgramChanges=[],desiredControllerChanges=[],desiredChannelsToClear=[],desiredChannelsToTranspose=[]){SpessaSynthGroupCollapsed("%cApplying changes to the MIDI file...",consoleColors.info);SpessaSynthInfo("Desired program changes:",desiredProgramChanges);SpessaSynthInfo("Desired CC changes:",desiredControllerChanges);SpessaSynthInfo("Desired channels to clear:",desiredChannelsToClear);SpessaSynthInfo("Desired channels to transpose:",desiredChannelsToTranspose);const channelsToChangeProgram=/* @__PURE__ */new Set();desiredProgramChanges.forEach(c=>{channelsToChangeProgram.add(c.channel);});let system="gs";let addedGs=false;const midiPorts=midi.tracks.map(t=>t.port);const midiPortChannelOffsets={};let midiPortChannelOffset=0;const assignMIDIPort=(trackNum,port)=>{if(midi.tracks[trackNum].channels.size===0){return;}if(midiPortChannelOffset===0){midiPortChannelOffset+=16;midiPortChannelOffsets[port]=0;}if(midiPortChannelOffsets[port]===void 0){midiPortChannelOffsets[port]=midiPortChannelOffset;midiPortChannelOffset+=16;}midiPorts[trackNum]=port;};midi.tracks.forEach((track,i)=>{assignMIDIPort(i,track.port);});const channelsAmount=midiPortChannelOffset;const isFirstNoteOn=Array(channelsAmount).fill(true);const coarseTranspose=Array(channelsAmount).fill(0);const fineTranspose=Array(channelsAmount).fill(0);desiredChannelsToTranspose.forEach(transpose=>{const coarse=Math.trunc(transpose.keyShift);const fine=transpose.keyShift-coarse;coarseTranspose[transpose.channel]=coarse;fineTranspose[transpose.channel]=fine;});midi.iterate((e,trackNum,eventIndexes)=>{const track=midi.tracks[trackNum];const index=eventIndexes[trackNum];const deleteThisEvent=()=>{track.deleteEvent(index);eventIndexes[trackNum]--;};const addEventBefore=(e2,offset=0)=>{track.addEvent(e2,index+offset);eventIndexes[trackNum]++;};const portOffset=midiPortChannelOffsets[midiPorts[trackNum]]||0;if(e.statusByte===midiMessageTypes.midiPort){assignMIDIPort(trackNum,e.data[0]);return;}if(e.statusByte<=midiMessageTypes.sequenceSpecific&&e.statusByte>=midiMessageTypes.sequenceNumber){return;}const status=e.statusByte&240;const midiChannel=e.statusByte&15;const channel=midiChannel+portOffset;if(desiredChannelsToClear.includes(channel)){deleteThisEvent();return;}switch(status){case midiMessageTypes.noteOn:if(isFirstNoteOn[channel]){isFirstNoteOn[channel]=false;desiredControllerChanges.filter(c=>c.channel===channel).forEach(change=>{const ccChange=getControllerChange(midiChannel,change.controllerNumber,change.controllerValue,e.ticks);addEventBefore(ccChange);});const fineTune=fineTranspose[channel];if(fineTune!==0){const centsCoarse=fineTune*64+64;const rpnCoarse=getControllerChange(midiChannel,midiControllers.registeredParameterMSB,0,e.ticks);const rpnFine=getControllerChange(midiChannel,midiControllers.registeredParameterLSB,1,e.ticks);const dataEntryCoarse2=getControllerChange(channel,midiControllers.dataEntryMSB,centsCoarse,e.ticks);const dataEntryFine2=getControllerChange(midiChannel,midiControllers.dataEntryLSB,0,e.ticks);addEventBefore(dataEntryFine2);addEventBefore(dataEntryCoarse2);addEventBefore(rpnFine);addEventBefore(rpnCoarse);}if(channelsToChangeProgram.has(channel)){const change=desiredProgramChanges.find(c=>c.channel===channel);if(!change){return;}SpessaSynthInfo(`%cSetting %c${change.channel}%c to %c${MIDIPatchTools.toMIDIString(change)}%c. Track num: %c${trackNum}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);let desiredBankMSB=change.bankMSB;let desiredBankLSB=change.bankLSB;const desiredProgram=change.program;const programChange2=new MIDIMessage(e.ticks,midiMessageTypes.programChange|midiChannel,new IndexedByteArray([desiredProgram]));addEventBefore(programChange2);const addBank=(isLSB,v)=>{const bankChange=getControllerChange(midiChannel,isLSB?midiControllers.bankSelectLSB:midiControllers.bankSelect,v,e.ticks);addEventBefore(bankChange);};if(BankSelectHacks.isSystemXG(system)&&change.isGMGSDrum){SpessaSynthInfo(`%cAdding XG Drum change on track %c${trackNum}`,consoleColors.recognized,consoleColors.value);desiredBankMSB=BankSelectHacks.getDrumBank(system);desiredBankLSB=0;}addBank(false,desiredBankMSB);addBank(true,desiredBankLSB);if(change.isGMGSDrum&&!BankSelectHacks.isSystemXG(system)&&midiChannel!==DEFAULT_PERCUSSION){SpessaSynthInfo(`%cAdding GS Drum change on track %c${trackNum}`,consoleColors.recognized,consoleColors.value);addEventBefore(getDrumChange(midiChannel,e.ticks));}}}e.data[0]+=coarseTranspose[channel];break;case midiMessageTypes.noteOff:e.data[0]+=coarseTranspose[channel];break;case midiMessageTypes.programChange:if(channelsToChangeProgram.has(channel)){deleteThisEvent();return;}break;case midiMessageTypes.controllerChange:{const ccNum=e.data[0];const changes=desiredControllerChanges.find(c=>c.channel===channel&&ccNum===c.controllerNumber);if(changes!==void 0){deleteThisEvent();return;}if(ccNum===midiControllers.bankSelect||ccNum===midiControllers.bankSelectLSB){if(channelsToChangeProgram.has(channel)){deleteThisEvent();}}}break;case midiMessageTypes.systemExclusive:if(isXGOn(e)){SpessaSynthInfo("%cXG system on detected",consoleColors.info);system="xg";addedGs=true;}else if(e.data[0]===67&&// Yamaha
e.data[2]===76&&// XG
e.data[3]===8&&// Part parameter
e.data[5]===3){if(channelsToChangeProgram.has(e.data[4]+portOffset)){deleteThisEvent();}}else if(isGM2On(e)){SpessaSynthInfo("%cGM2 system on detected",consoleColors.info);system="gm2";addedGs=true;}else if(isGSOn(e)){addedGs=true;SpessaSynthInfo("%cGS on detected!",consoleColors.recognized);break;}else if(isGMOn(e)){SpessaSynthInfo("%cGM on detected, removing!",consoleColors.info);deleteThisEvent();addedGs=false;}}});if(!addedGs&&desiredProgramChanges.length>0){let index=0;if(midi.tracks[0].events[0].statusByte===midiMessageTypes.trackName){index++;}midi.tracks[0].addEvent(getGsOn(0),index);SpessaSynthInfo("%cGS on not detected. Adding it.",consoleColors.info);}midi.flush();SpessaSynthGroupEnd();}function applySnapshotInternal(midi,snapshot){const channelsToTranspose=[];const channelsToClear=[];const programChanges=[];const controllerChanges=[];snapshot.channelSnapshots.forEach((channel,channelNumber)=>{if(channel.isMuted){channelsToClear.push(channelNumber);return;}const transposeFloat=channel.channelTransposeKeyShift+channel.customControllers[customControllers.channelTransposeFine]/100;if(transposeFloat!==0){channelsToTranspose.push({channel:channelNumber,keyShift:transposeFloat});}if(channel.lockPreset){programChanges.push({channel:channelNumber,...channel.patch});}channel.lockedControllers.forEach((l,ccNumber)=>{if(!l||ccNumber>127||ccNumber===midiControllers.bankSelect){return;}const targetValue=channel.midiControllers[ccNumber]>>7;controllerChanges.push({channel:channelNumber,controllerNumber:ccNumber,controllerValue:targetValue});});});midi.modify(programChanges,controllerChanges,channelsToClear,channelsToTranspose);}var metadataTypes={XMFFileType:0,nodeName:1,nodeIDNumber:2,resourceFormat:3,filenameOnDisk:4,filenameExtensionOnDisk:5,macOSFileTypeAndCreator:6,mimeType:7,title:8,copyrightNotice:9,comment:10,autoStart:11,// Node Name of the FileNode containing the SMF image to autostart when the XMF file loads
preload:12,// Used to preload specific SMF and DLS file images.
contentDescription:13,// RP-42a (https://amei.or.jp/midistandardcommittee/Recommended_Practice/e/rp42.pdf)
ID3Metadata:14// RP-47 (https://amei.or.jp/midistandardcommittee/Recommended_Practice/e/rp47.pdf)
};var referenceTypeIds={inLineResource:1,inFileResource:2,inFileNode:3,externalFile:4,externalXMF:5,XMFFileURIandNodeID:6};var resourceFormatIDs={StandardMIDIFile:0,StandardMIDIFileType1:1,DLS1:2,DLS2:3,DLS22:4,mobileDLS:5,unknown:-1,folder:-2};var formatTypeIDs={standard:0,MMA:1,registered:2,nonRegistered:3};var unpackerIDs={none:0,MMAUnpacker:1,registered:2,nonRegistered:3};var XMFNode=class _XMFNode{length;/**
     * 0 means it's a file node
     */itemCount;metadataLength;metadata={};nodeData;innerNodes=[];packedContent=false;nodeUnpackers=[];resourceFormat="unknown";referenceTypeID;constructor(binaryData){const nodeStartIndex=binaryData.currentIndex;this.length=readVariableLengthQuantity(binaryData);this.itemCount=readVariableLengthQuantity(binaryData);const headerLength=readVariableLengthQuantity(binaryData);const readBytes=binaryData.currentIndex-nodeStartIndex;const remainingHeader=headerLength-readBytes;const headerData=binaryData.slice(binaryData.currentIndex,binaryData.currentIndex+remainingHeader);binaryData.currentIndex+=remainingHeader;this.metadataLength=readVariableLengthQuantity(headerData);const metadataChunk=headerData.slice(headerData.currentIndex,headerData.currentIndex+this.metadataLength);headerData.currentIndex+=this.metadataLength;let fieldSpecifier;let key;while(metadataChunk.currentIndex<metadataChunk.length){const firstSpecifierByte=metadataChunk[metadataChunk.currentIndex];if(firstSpecifierByte===0){metadataChunk.currentIndex++;fieldSpecifier=readVariableLengthQuantity(metadataChunk);if(!Object.values(metadataTypes).includes(fieldSpecifier)){SpessaSynthInfo(`Unknown field specifier: ${fieldSpecifier}`);key=`unknown_${fieldSpecifier}`;}else{key=Object.keys(metadataTypes).find(k=>metadataTypes[k]===fieldSpecifier)??"";}}else{const stringLength=readVariableLengthQuantity(metadataChunk);fieldSpecifier=readBinaryStringIndexed(metadataChunk,stringLength);key=fieldSpecifier;}const numberOfVersions=readVariableLengthQuantity(metadataChunk);if(numberOfVersions===0){const dataLength=readVariableLengthQuantity(metadataChunk);const contentsChunk=metadataChunk.slice(metadataChunk.currentIndex,metadataChunk.currentIndex+dataLength);metadataChunk.currentIndex+=dataLength;const formatID=readVariableLengthQuantity(contentsChunk);if(formatID<4){this.metadata[key]=readBinaryStringIndexed(contentsChunk,dataLength-1);}else{this.metadata[key]=contentsChunk.slice(contentsChunk.currentIndex);}}else{SpessaSynthInfo(`International content: ${numberOfVersions}`);metadataChunk.currentIndex+=readVariableLengthQuantity(metadataChunk);}}const unpackersStart=headerData.currentIndex;const unpackersLength=readVariableLengthQuantity(headerData);const unpackersData=headerData.slice(headerData.currentIndex,unpackersStart+unpackersLength);headerData.currentIndex=unpackersStart+unpackersLength;if(unpackersLength>0){this.packedContent=true;while(unpackersData.currentIndex<unpackersLength){const unpacker={};unpacker.id=readVariableLengthQuantity(unpackersData);switch(unpacker.id){case unpackerIDs.nonRegistered:case unpackerIDs.registered:SpessaSynthGroupEnd();throw new Error(`Unsupported unpacker ID: ${unpacker.id}`);default:SpessaSynthGroupEnd();throw new Error(`Unknown unpacker ID: ${unpacker.id}`);case unpackerIDs.none:unpacker.standardID=readVariableLengthQuantity(unpackersData);break;case unpackerIDs.MMAUnpacker:{let manufacturerID=unpackersData[unpackersData.currentIndex++];if(manufacturerID===0){manufacturerID<<=8;manufacturerID|=unpackersData[unpackersData.currentIndex++];manufacturerID<<=8;manufacturerID|=unpackersData[unpackersData.currentIndex++];}const manufacturerInternalID=readVariableLengthQuantity(unpackersData);unpacker.manufacturerID=manufacturerID;unpacker.manufacturerInternalID=manufacturerInternalID;}break;}unpacker.decodedSize=readVariableLengthQuantity(unpackersData);this.nodeUnpackers.push(unpacker);}}binaryData.currentIndex=nodeStartIndex+headerLength;this.referenceTypeID=readVariableLengthQuantity(binaryData);this.nodeData=binaryData.slice(binaryData.currentIndex,nodeStartIndex+this.length);binaryData.currentIndex=nodeStartIndex+this.length;switch(this.referenceTypeID){case referenceTypeIds.inLineResource:break;case referenceTypeIds.externalXMF:case referenceTypeIds.inFileNode:case referenceTypeIds.XMFFileURIandNodeID:case referenceTypeIds.externalFile:case referenceTypeIds.inFileResource:SpessaSynthGroupEnd();throw new Error(`Unsupported reference type: ${this.referenceTypeID}`);default:SpessaSynthGroupEnd();throw new Error(`Unknown reference type: ${this.referenceTypeID}`);}if(this.isFile){if(this.packedContent){const compressed=this.nodeData.slice(2,this.nodeData.length);SpessaSynthInfo(`%cPacked content. Attempting to deflate. Target size: %c${this.nodeUnpackers[0].decodedSize}`,consoleColors.warn,consoleColors.value);try{this.nodeData=new IndexedByteArray(inf(compressed).buffer);}catch(e){SpessaSynthGroupEnd();if(e instanceof Error){throw new Error(`Error unpacking XMF file contents: ${e.message}.`);}}}const resourceFormat=this.metadata.resourceFormat;if(resourceFormat===void 0){SpessaSynthWarn("No resource format for this file node!");}else{const formatTypeID=resourceFormat[0];if(formatTypeID!==formatTypeIDs.standard){SpessaSynthInfo(`Non-standard formatTypeID: ${resourceFormat.toString()}`);this.resourceFormat=resourceFormat.toString();}const resourceFormatID=resourceFormat[1];if(!Object.values(resourceFormatIDs).includes(resourceFormatID)){SpessaSynthInfo(`Unrecognized resource format: ${resourceFormatID}`);}else{this.resourceFormat=Object.keys(resourceFormatIDs).find(k=>resourceFormatIDs[k]===resourceFormatID);}}}else{this.resourceFormat="folder";while(this.nodeData.currentIndex<this.nodeData.length){const nodeStartIndex2=this.nodeData.currentIndex;const nodeLength=readVariableLengthQuantity(this.nodeData);const nodeData=this.nodeData.slice(nodeStartIndex2,nodeStartIndex2+nodeLength);this.nodeData.currentIndex=nodeStartIndex2+nodeLength;this.innerNodes.push(new _XMFNode(nodeData));}}}get isFile(){return this.itemCount===0;}};function loadXMF(midi,binaryData){midi.bankOffset=0;const sanityCheck=readBinaryStringIndexed(binaryData,4);if(sanityCheck!=="XMF_"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid XMF Header! Expected "_XMF", got "${sanityCheck}"`);}SpessaSynthGroup("%cParsing XMF file...",consoleColors.info);const version=readBinaryStringIndexed(binaryData,4);SpessaSynthInfo(`%cXMF version: %c${version}`,consoleColors.info,consoleColors.recognized);if(version==="2.00"){const fileTypeId=readBigEndianIndexed(binaryData,4);const fileTypeRevisionId=readBigEndianIndexed(binaryData,4);SpessaSynthInfo(`%cFile Type ID: %c${fileTypeId}%c, File Type Revision ID: %c${fileTypeRevisionId}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);}readVariableLengthQuantity(binaryData);const metadataTableLength=readVariableLengthQuantity(binaryData);binaryData.currentIndex+=metadataTableLength;binaryData.currentIndex=readVariableLengthQuantity(binaryData);const rootNode=new XMFNode(binaryData);let midiArray=void 0;const searchNode=node=>{const checkMeta=(xmf,rmid)=>{if(node.metadata[xmf]!==void 0&&typeof node.metadata[xmf]==="string"){midi.rmidiInfo[rmid]=getStringBytes(node.metadata[xmf]);}};checkMeta("nodeName","name");checkMeta("title","name");checkMeta("copyrightNotice","copyright");checkMeta("comment","comment");if(node.isFile){switch(node.resourceFormat){default:return;case"DLS1":case"DLS2":case"DLS22":case"mobileDLS":SpessaSynthInfo("%cFound embedded DLS!",consoleColors.recognized);midi.embeddedSoundBank=node.nodeData.buffer;break;case"StandardMIDIFile":case"StandardMIDIFileType1":SpessaSynthInfo("%cFound embedded MIDI!",consoleColors.recognized);midiArray=node.nodeData;break;}}else{for(const n of node.innerNodes){searchNode(n);}}};searchNode(rootNode);SpessaSynthGroupEnd();if(!midiArray){throw new Error("No MIDI data in the XMF file!");}return midiArray;}var MIDITrack=class _MIDITrack{/**
     * The name of this track.
     */name="";/**
     * The MIDI port number used by the track.
     */port=0;/**
     * A set that contains the MIDI channels used by the track in the sequence.
     */channels=/* @__PURE__ */new Set();/**
     * All the MIDI messages of this track.
     */events=[];static copyFrom(track){const t=new _MIDITrack();t.copyFrom(track);return t;}copyFrom(track){this.name=track.name;this.port=track.port;this.channels=new Set(track.channels);this.events=track.events.map(e=>new MIDIMessage(e.ticks,e.statusByte,new IndexedByteArray(e.data)));}/**
     * Adds an event to the track.
     * @param event The event to add.
     * @param index The index at which to add this event.
     */addEvent(event,index){this.events.splice(index,0,event);}/**
     * Removes an event from the track.
     * @param index The index of the event to remove.
     */deleteEvent(index){this.events.splice(index,1);}/**
     * Appends an event to the end of the track.
     * @param event The event to add.
     */pushEvent(event){this.events.push(event);}};function loadMIDIFromArrayBufferInternal(outputMIDI,arrayBuffer,fileName){SpessaSynthGroupCollapsed(`%cParsing MIDI File...`,consoleColors.info);outputMIDI.fileName=fileName;const binaryData=new IndexedByteArray(arrayBuffer);let smfFileBinary=binaryData;const readMIDIChunk=fileByteArray=>{const type=readBinaryStringIndexed(fileByteArray,4);const size=readBigEndianIndexed(fileByteArray,4);const data=new IndexedByteArray(size);const chunk={type,size,data};const dataSlice=fileByteArray.slice(fileByteArray.currentIndex,fileByteArray.currentIndex+chunk.size);chunk.data.set(dataSlice,0);fileByteArray.currentIndex+=chunk.size;return chunk;};const initialString=readBinaryString(binaryData,4);if(initialString==="RIFF"){binaryData.currentIndex+=8;const rmid=readBinaryStringIndexed(binaryData,4);if(rmid!=="RMID"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid RMIDI Header! Expected "RMID", got "${rmid}"`);}const riff=readRIFFChunk(binaryData);if(riff.header!=="data"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid RMIDI Chunk header! Expected "data", got "${rmid}"`);}smfFileBinary=riff.data;let isSF2RMIDI=false;let foundDbnk=false;while(binaryData.currentIndex<=binaryData.length){const startIndex=binaryData.currentIndex;const currentChunk=readRIFFChunk(binaryData,true);if(currentChunk.header==="RIFF"){const type=readBinaryStringIndexed(currentChunk.data,4).toLowerCase();if(type==="sfbk"||type==="sfpk"||type==="dls "){SpessaSynthInfo("%cFound embedded soundbank!",consoleColors.recognized);outputMIDI.embeddedSoundBank=binaryData.slice(startIndex,startIndex+currentChunk.size).buffer;}else{SpessaSynthWarn(`Unknown RIFF chunk: "${type}"`);}if(type==="dls "){outputMIDI.isDLSRMIDI=true;}else{isSF2RMIDI=true;}}else if(currentChunk.header==="LIST"){const type=readBinaryStringIndexed(currentChunk.data,4);if(type==="INFO"){SpessaSynthInfo("%cFound RMIDI INFO chunk!",consoleColors.recognized);while(currentChunk.data.currentIndex<=currentChunk.size){const infoChunk=readRIFFChunk(currentChunk.data,true);const headerTyped=infoChunk.header;const infoData=infoChunk.data;switch(headerTyped){default:SpessaSynthWarn(`Unknown RMIDI Info: ${headerTyped}`);break;case"INAM":outputMIDI.rmidiInfo.name=infoData;break;case"IALB":case"IPRD":outputMIDI.rmidiInfo.album=infoData;break;case"ICRT":case"ICRD":outputMIDI.rmidiInfo.creationDate=infoData;break;case"IART":outputMIDI.rmidiInfo.artist=infoData;break;case"IGNR":outputMIDI.rmidiInfo.genre=infoData;break;case"IPIC":outputMIDI.rmidiInfo.picture=infoData;break;case"ICOP":outputMIDI.rmidiInfo.copyright=infoData;break;case"ICMT":outputMIDI.rmidiInfo.comment=infoData;break;case"IENG":outputMIDI.rmidiInfo.engineer=infoData;break;case"ISFT":outputMIDI.rmidiInfo.software=infoData;break;case"ISBJ":outputMIDI.rmidiInfo.subject=infoData;break;case"IENC":outputMIDI.rmidiInfo.infoEncoding=infoData;break;case"MENC":outputMIDI.rmidiInfo.midiEncoding=infoData;break;case"DBNK":outputMIDI.bankOffset=readLittleEndian(infoData,2);foundDbnk=true;break;}}}}}if(isSF2RMIDI&&!foundDbnk){outputMIDI.bankOffset=1;}if(outputMIDI.isDLSRMIDI){outputMIDI.bankOffset=0;}if(outputMIDI.embeddedSoundBank===void 0){outputMIDI.bankOffset=0;}}else if(initialString==="XMF_"){smfFileBinary=loadXMF(outputMIDI,binaryData);}else{smfFileBinary=binaryData;}const headerChunk=readMIDIChunk(smfFileBinary);if(headerChunk.type!=="MThd"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid MIDI Header! Expected "MThd", got "${headerChunk.type}"`);}if(headerChunk.size!==6){SpessaSynthGroupEnd();throw new RangeError(`Invalid MIDI header chunk size! Expected 6, got ${headerChunk.size}`);}outputMIDI.format=readBigEndianIndexed(headerChunk.data,2);const trackCount=readBigEndianIndexed(headerChunk.data,2);outputMIDI.timeDivision=readBigEndianIndexed(headerChunk.data,2);for(let i=0;i<trackCount;i++){const track=new MIDITrack();const trackChunk=readMIDIChunk(smfFileBinary);if(trackChunk.type!=="MTrk"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid track header! Expected "MTrk" got "${trackChunk.type}"`);}let runningByte=void 0;let totalTicks=0;if(outputMIDI.format===2&&i>0){totalTicks+=outputMIDI.tracks[i-1].events[outputMIDI.tracks[i-1].events.length-1].ticks;}while(trackChunk.data.currentIndex<trackChunk.size){totalTicks+=readVariableLengthQuantity(trackChunk.data);const statusByteCheck=trackChunk.data[trackChunk.data.currentIndex];let statusByte;if(runningByte!==void 0&&statusByteCheck<128){statusByte=runningByte;}else{if(statusByteCheck<128){SpessaSynthGroupEnd();throw new SyntaxError(`Unexpected byte with no running byte. (${statusByteCheck})`);}else{statusByte=trackChunk.data[trackChunk.data.currentIndex++];}}const statusByteChannel=getChannel(statusByte);let eventDataLength;switch(statusByteChannel){case-1:eventDataLength=0;break;case-2:statusByte=trackChunk.data[trackChunk.data.currentIndex++];eventDataLength=readVariableLengthQuantity(trackChunk.data);break;case-3:eventDataLength=readVariableLengthQuantity(trackChunk.data);break;default:eventDataLength=dataBytesAmount[statusByte>>4];runningByte=statusByte;break;}const eventData=new IndexedByteArray(eventDataLength);eventData.set(trackChunk.data.slice(trackChunk.data.currentIndex,trackChunk.data.currentIndex+eventDataLength),0);const event=new MIDIMessage(totalTicks,statusByte,eventData);track.pushEvent(event);trackChunk.data.currentIndex+=eventDataLength;}outputMIDI.tracks.push(track);SpessaSynthInfo(`%cParsed %c${outputMIDI.tracks.length}%c / %c${outputMIDI.tracks.length}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);}SpessaSynthInfo(`%cAll tracks parsed correctly!`,consoleColors.recognized);outputMIDI.flush(false);SpessaSynthGroupEnd();}var translationPortuguese=/* @__PURE__ */new Map([// Weekdays map (Portuguese to English)
["domingo","Sunday"],["segunda-feira","Monday"],["ter\xE7a-feira","Tuesday"],["quarta-feira","Wednesday"],["quinta-feira","Thursday"],["sexta-feira","Friday"],["s\xE1bado","Saturday"],// Months map (Portuguese to English)
["janeiro","January"],["fevereiro","February"],["mar\xE7o","March"],["abril","April"],["maio","May"],["junho","June"],["julho","July"],["agosto","August"],["setembro","September"],["outubro","October"],["novembro","November"],["dezembro","December"]]);var translations=[translationPortuguese];function tryTranslate(dateString){for(const translation of translations){let translated=dateString;translation.forEach((english,pt)=>{const regex=new RegExp(pt,"gi");translated=translated.replace(regex,english);});const date=new Date(translated);if(!isNaN(date.getTime())){return date;}}return void 0;}function tryDotted(dateString){const match=/^(\d{2})\.(\d{2})\.(\d{4})$/.exec(dateString);if(match){const day=parseInt(match[1]);const month=parseInt(match[2])-1;const year=parseInt(match[3]);const date=new Date(year,month,day);if(!isNaN(date.getTime())){return date;}}return void 0;}function tryAWE(dateString){const match=/^(\d{1,2})\s{1,2}(\d{1,2})\s{1,2}(\d{2})$/.exec(dateString);if(match){const day=match[1];const month=(parseInt(match[2])+1).toString();const year=match[3];const date=/* @__PURE__ */new Date(`${month}/${day}/${year}`);if(!isNaN(date.getTime())){return date;}}return void 0;}function tryYear(dateString){const regex=/\b\d{4}\b/;const match=regex.exec(dateString);return match?new Date(match[0]):void 0;}function parseDateString(dateString){dateString=dateString.trim();if(dateString.length<1){return/* @__PURE__ */new Date();}const filtered=dateString.replace(/\b(\d+)(st|nd|rd|th)\b/g,"$1");const date=new Date(filtered);if(isNaN(date.getTime())){const translated=tryTranslate(dateString);if(translated){return translated;}const dotted=tryDotted(dateString);if(dotted){return dotted;}const awe=tryAWE(dateString);if(awe){return awe;}const year=tryYear(dateString);if(year){return year;}SpessaSynthWarn(`Invalid date: "${dateString}". Replacing with the current date!`);return/* @__PURE__ */new Date();}return date;}var BasicMIDI2=class _BasicMIDI{/**
     * The tracks in the sequence.
     */tracks=[];/**
     * The time division of the sequence, representing the number of MIDI ticks per beat.
     */timeDivision=0;/**
     * The duration of the sequence, in seconds.
     */duration=0;/**
     * The tempo changes in the sequence, ordered from the last change to the first.
     * Each change is represented by an object with a MIDI tick position and a tempo value in beats per minute.
     */tempoChanges=[{ticks:0,tempo:120}];/**
     * Any extra metadata found in the file.
     * These messages were deemed "interesting" by the parsing algorithm
     */extraMetadata=[];/**
     * An array containing the lyrics of the sequence.
     */lyrics=[];/**
     * The tick position of the first note-on event in the MIDI sequence.
     */firstNoteOn=0;/**
     * The MIDI key range used in the sequence, represented by a minimum and maximum note value.
     */keyRange={min:0,max:127};/**
     * The tick position of the last voice event (such as note-on, note-off, or control change) in the sequence.
     */lastVoiceEventTick=0;/**
     * An array of channel offsets for each MIDI port, using the SpessaSynth method.
     * The index is the port number and the value is the channel offset.
     */portChannelOffsetMap=[0];/**
     * The loop points (in ticks) of the sequence, including both start and end points.
     */loop={start:0,end:0};/**
     * The file name of the MIDI sequence, if provided during parsing.
     */fileName;/**
     * The format of the MIDI file, which can be 0, 1, or 2, indicating the type of the MIDI file.
     */format=0;/**
     * The RMID (Resource-Interchangeable MIDI) info data, if the file is RMID formatted.
     * Otherwise, this object is empty.
     * Info type: Chunk data as a binary array.
     * Note that text chunks contain a terminal zero byte.
     */rmidiInfo={};/**
     * The bank offset used for RMID files.
     */bankOffset=0;/**
     * If the MIDI file is a Soft Karaoke file (.kar), this is set to true.
     * https://www.mixagesoftware.com/en/midikit/help/HTML/karaoke_formats.html
     */isKaraokeFile=false;/**
     * Indicates if this file is a Multi-Port MIDI file.
     */isMultiPort=false;/**
     * If the MIDI file is a DLS RMIDI file.
     */isDLSRMIDI=false;/**
     * The embedded sound bank in the MIDI file, represented as an ArrayBuffer, if available.
     */embeddedSoundBank;/**
     * The raw, encoded MIDI name, represented as a Uint8Array.
     * Useful when the MIDI file uses a different code page.
     * Undefined if no MIDI name could be found.
     */binaryName;/**
     * The encoding of the RMIDI info in file, if specified.
     */get infoEncoding(){const encodingInfo=this.rmidiInfo.infoEncoding;if(!encodingInfo){return void 0;}let lengthToRead=encodingInfo.byteLength;if(encodingInfo[encodingInfo.byteLength-1]===0){lengthToRead--;}return readBinaryString(encodingInfo,lengthToRead);}/**
     * Loads a MIDI file (SMF, RMIDI, XMF) from a given ArrayBuffer.
     * @param arrayBuffer The ArrayBuffer containing the binary file data.
     * @param fileName The optional name of the file, will be used if the MIDI file does not have a name.
     */static fromArrayBuffer(arrayBuffer,fileName=""){const mid=new _BasicMIDI();loadMIDIFromArrayBufferInternal(mid,arrayBuffer,fileName);return mid;}/**
     * Loads a MIDI file (SMF, RMIDI, XMF) from a given file.
     * @param file The file to load.
     */static async fromFile(file){const mid=new _BasicMIDI();loadMIDIFromArrayBufferInternal(mid,await file.arrayBuffer(),file.name);return mid;}/**
     * Copies a MIDI.
     * @param mid The MIDI to copy.
     * @returns The copied MIDI.
     */static copyFrom(mid){const m=new _BasicMIDI();m.copyFrom(mid);return m;}/**
     * Copies a MIDI.
     * @param mid The MIDI to copy.
     */copyFrom(mid){var _mid$embeddedSoundBan;this.copyMetadataFrom(mid);this.embeddedSoundBank=(mid===null||mid===void 0||(_mid$embeddedSoundBan=mid.embeddedSoundBank)===null||_mid$embeddedSoundBan===void 0?void 0:_mid$embeddedSoundBan.slice(0))??void 0;this.tracks=mid.tracks.map(track=>MIDITrack.copyFrom(track));}/**
     * Converts MIDI ticks to time in seconds.
     * @param ticks The time in MIDI ticks.
     * @returns The time in seconds.
     */midiTicksToSeconds(ticks){ticks=Math.max(ticks,0);if(this.tempoChanges.length<1){throw new Error("There are no tempo changes in the sequence. At least one is needed.");}if(this.tempoChanges[this.tempoChanges.length-1].ticks!==0){throw new Error(`The last tempo change is not at 0 ticks. Got ${this.tempoChanges[this.tempoChanges.length-1].ticks} ticks.`);}let tempoIndex=this.tempoChanges.findIndex(v=>v.ticks<=ticks);let totalSeconds=0;while(tempoIndex<this.tempoChanges.length){const tempo=this.tempoChanges[tempoIndex++];const ticksSinceLastTempo=ticks-tempo.ticks;totalSeconds+=ticksSinceLastTempo*60/(tempo.tempo*this.timeDivision);ticks=tempo.ticks;}return totalSeconds;}/**
     * Gets the used programs and keys for this MIDI file with a given sound bank.
     * @param soundbank the sound bank.
     * @returns The output data is a key-value pair: preset -> Set<"key-velocity">
     */getUsedProgramsAndKeys(soundbank){return getUsedProgramsAndKeys(this,soundbank);}/**
     * Updates all internal values of the MIDI.
     * @param sortEvents if the events should be sorted by ticks. Recommended to be true.
     */flush(sortEvents=true){if(sortEvents){for(const t of this.tracks){t.events.sort((e1,e2)=>e1.ticks-e2.ticks);}}this.parseInternal();}// noinspection JSUnusedGlobalSymbols
/**
     * Calculates all note times in seconds.
     * @param minDrumLength the shortest a drum note (channel 10) can be, in seconds.
     * @returns an array of 16 channels, each channel containing its notes,
     * with their key number, velocity, absolute start time and length in seconds.
     */getNoteTimes(minDrumLength=0){return getNoteTimesInternal(this,minDrumLength);}/**
     * Exports the midi as a standard MIDI file.
     * @returns the binary file data.
     */writeMIDI(){return writeMIDIInternal(this);}/**
     * Writes an RMIDI file. Note that this method modifies the MIDI file in-place.
     * @param soundBankBinary the binary sound bank to embed into the file.
     * @param configuration Extra options for writing the file.
     * @returns the binary file data.
     */writeRMIDI(soundBankBinary,configuration=DEFAULT_RMIDI_WRITE_OPTIONS){return writeRMIDIInternal(this,soundBankBinary,fillWithDefaults(configuration,DEFAULT_RMIDI_WRITE_OPTIONS));}/**
     * Allows easy editing of the file by removing channels, changing programs,
     * changing controllers and transposing channels. Note that this modifies the MIDI *in-place*.
     * @param desiredProgramChanges - The programs to set on given channels.
     * @param desiredControllerChanges - The controllers to set on given channels.
     * @param desiredChannelsToClear - The channels to remove from the sequence.
     * @param desiredChannelsToTranspose - The channels to transpose.
     */modify(desiredProgramChanges=[],desiredControllerChanges=[],desiredChannelsToClear=[],desiredChannelsToTranspose=[]){modifyMIDIInternal(this,desiredProgramChanges,desiredControllerChanges,desiredChannelsToClear,desiredChannelsToTranspose);}// noinspection JSUnusedGlobalSymbols
/**
     * Modifies the sequence *in-place* according to the locked presets and controllers in the given snapshot.
     * @param snapshot the snapshot to apply.
     */applySnapshot(snapshot){applySnapshotInternal(this,snapshot);}// noinspection JSUnusedGlobalSymbols
/**
     * Gets the MIDI's decoded name.
     * @param encoding The encoding to use if the MIDI uses an extended code page.
     * @remarks
     * Do not call in audioWorkletGlobalScope as it uses TextDecoder.
     * RMIDI encoding overrides the provided encoding.
     */getName(encoding="Shift_JIS"){let rawName="";const n=this.getRMIDInfo("name");if(n){return n.trim();}if(this.binaryName){encoding=this.getRMIDInfo("midiEncoding")??encoding;try{const decoder=new TextDecoder(encoding);rawName=decoder.decode(this.binaryName).trim();}catch(e){SpessaSynthWarn(`Failed to decode MIDI name: ${e}`);}}return rawName||this.fileName;}// noinspection JSUnusedGlobalSymbols
/**
     * Gets the decoded extra metadata as text and removes any unneeded characters (such as "@T" for karaoke files)
     * @param encoding The encoding to use if the MIDI uses an extended code page.
     * @remarks
     * Do not call in audioWorkletGlobalScope as it uses TextDecoder.
     * RMIDI encoding overrides the provided encoding.
     */getExtraMetadata(encoding="Shift_JIS"){encoding=this.infoEncoding??encoding;const decoder=new TextDecoder(encoding);return this.extraMetadata.map(d=>{const decoded=decoder.decode(d.data);return decoded.replace(/@T|@A/g,"").trim();});}/**
     * Sets a given RMIDI info value.
     * @param infoType The type to set.
     * @param infoData The value to set it to.
     * @remarks
     * This sets the Info encoding to utf-8.
     */setRMIDInfo(infoType,infoData){this.rmidiInfo.infoEncoding=getStringBytes("utf-8",true);if(infoType==="picture"){this.rmidiInfo.picture=new Uint8Array(infoData);}else if(infoType==="creationDate"){this.rmidiInfo.creationDate=getStringBytes(infoData.toISOString(),true);}else{const encoded=new TextEncoder().encode(infoData);this.rmidiInfo[infoType]=new Uint8Array([...encoded,0]);}}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a given chunk from the RMIDI information, undefined if it does not exist.
     * @param infoType The metadata type.
     * @returns String, Date, ArrayBuffer or undefined.
     */getRMIDInfo(infoType){if(!this.rmidiInfo[infoType]){return void 0;}const encoding=this.infoEncoding??"UTF-8";if(infoType==="picture"){return this.rmidiInfo[infoType].buffer;}else if(infoType==="creationDate"){return parseDateString(readBinaryString(this.rmidiInfo[infoType]));}try{const decoder=new TextDecoder(encoding);let infoBuffer=this.rmidiInfo[infoType];if(infoBuffer[infoBuffer.length-1]===0){var _infoBuffer;infoBuffer=(_infoBuffer=infoBuffer)===null||_infoBuffer===void 0?void 0:_infoBuffer.slice(0,infoBuffer.length-1);}return decoder.decode(infoBuffer.buffer).trim();}catch(e){SpessaSynthWarn(`Failed to decode ${infoType} name: ${e}`);return void 0;}}/**
     * Iterates over the MIDI file, ordered by the time the events happen.
     * @param callback The callback function to process each event.
     */iterate(callback){const eventIndexes=Array(this.tracks.length).fill(0);let remainingTracks=this.tracks.length;const findFirstEventIndex=()=>{let index=0;let ticks=Infinity;this.tracks.forEach(({events:track},i)=>{if(eventIndexes[i]>=track.length){return;}if(track[eventIndexes[i]].ticks<ticks){index=i;ticks=track[eventIndexes[i]].ticks;}});return index;};while(remainingTracks>0){const trackNum=findFirstEventIndex();const track=this.tracks[trackNum].events;if(eventIndexes[trackNum]>=track.length){remainingTracks--;continue;}const event=track[eventIndexes[trackNum]];callback(event,trackNum,eventIndexes);eventIndexes[trackNum]++;}}/**
     * INTERNAL USE ONLY!
     */copyMetadataFrom(mid){var _mid$binaryName;this.fileName=mid.fileName;this.timeDivision=mid.timeDivision;this.duration=mid.duration;this.firstNoteOn=mid.firstNoteOn;this.lastVoiceEventTick=mid.lastVoiceEventTick;this.format=mid.format;this.bankOffset=mid.bankOffset;this.isKaraokeFile=mid.isKaraokeFile;this.isMultiPort=mid.isMultiPort;this.isDLSRMIDI=mid.isDLSRMIDI;this.isDLSRMIDI=mid.isDLSRMIDI;this.tempoChanges=[...mid.tempoChanges];this.extraMetadata=mid.extraMetadata.map(m=>new MIDIMessage(m.ticks,m.statusByte,new IndexedByteArray(m.data)));this.lyrics=mid.lyrics.map(arr=>new MIDIMessage(arr.ticks,arr.statusByte,new IndexedByteArray(arr.data)));this.portChannelOffsetMap=[...mid.portChannelOffsetMap];this.binaryName=mid===null||mid===void 0||(_mid$binaryName=mid.binaryName)===null||_mid$binaryName===void 0?void 0:_mid$binaryName.slice();this.loop={...mid.loop};this.keyRange={...mid.keyRange};this.rmidiInfo={};Object.entries(mid.rmidiInfo).forEach(v=>{const key=v[0];const value=v[1];this.rmidiInfo[key]=value.slice();});}/**
     * Parses internal MIDI values
     */parseInternal(){SpessaSynthGroup("%cInterpreting MIDI events...",consoleColors.info);let karaokeHasTitle=false;this.tempoChanges=[{ticks:0,tempo:120}];this.extraMetadata=[];this.lyrics=[];this.firstNoteOn=0;this.keyRange={max:0,min:127};this.lastVoiceEventTick=0;this.portChannelOffsetMap=[0];this.loop={start:0,end:0};this.isKaraokeFile=false;this.isMultiPort=false;let nameDetected=false;if(typeof this.rmidiInfo.name!=="undefined"){nameDetected=true;}let loopStart=null;let loopEnd=null;for(const track of this.tracks){const usedChannels=/* @__PURE__ */new Set();let trackHasVoiceMessages=false;for(let i=0;i<track.events.length;i++){const e=track.events[i];if(e.statusByte>=128&&e.statusByte<240){trackHasVoiceMessages=true;if(e.ticks>this.lastVoiceEventTick){this.lastVoiceEventTick=e.ticks;}switch(e.statusByte&240){// Cc change: loop points
case midiMessageTypes.controllerChange:switch(e.data[0]){// Touhou
case 2:// RPG Maker
case 111:// EMIDI/XMI
case 116:loopStart=e.ticks;break;// Touhou
case 4:// EMIDI/XMI
case 117:if(loopEnd===null){loopEnd=e.ticks;}else{loopEnd=0;}break;case 0:if(this.isDLSRMIDI&&e.data[1]!==0&&e.data[1]!==127){SpessaSynthInfo("%cDLS RMIDI with offset 1 detected!",consoleColors.recognized);this.bankOffset=1;}}break;// Note on: used notes tracking and key range
case midiMessageTypes.noteOn:{usedChannels.add(e.statusByte&15);const note=e.data[0];this.keyRange.min=Math.min(this.keyRange.min,note);this.keyRange.max=Math.max(this.keyRange.max,note);break;}}}const eventText=readBinaryString(e.data);switch(e.statusByte){case midiMessageTypes.endOfTrack:if(i!==track.events.length-1){track.deleteEvent(i);i--;SpessaSynthWarn("Unexpected EndOfTrack. Removing!");}break;case midiMessageTypes.setTempo:this.tempoChanges.push({ticks:e.ticks,tempo:6e7/readBigEndian(e.data,3)});break;case midiMessageTypes.marker:{const text=eventText.trim().toLowerCase();switch(text){default:break;case"start":case"loopstart":loopStart=e.ticks;break;case"loopend":loopEnd=e.ticks;}}break;case midiMessageTypes.copyright:this.extraMetadata.push(e);break;// Fallthrough
case midiMessageTypes.lyric:if(eventText.trim().startsWith("@KMIDI KARAOKE FILE")){this.isKaraokeFile=true;SpessaSynthInfo("%cKaraoke MIDI detected!",consoleColors.recognized);}if(this.isKaraokeFile){e.statusByte=midiMessageTypes.text;}else{this.lyrics.push(e);}// Kar: treat the same as text
// Fallthrough
case midiMessageTypes.text:{const checkedText=eventText.trim();if(checkedText.startsWith("@KMIDI KARAOKE FILE")){this.isKaraokeFile=true;SpessaSynthInfo("%cKaraoke MIDI detected!",consoleColors.recognized);}else if(this.isKaraokeFile){if(checkedText.startsWith("@T")||checkedText.startsWith("@A")){if(!karaokeHasTitle){this.binaryName=e.data.slice(2);karaokeHasTitle=true;nameDetected=true;}else{this.extraMetadata.push(e);}}else if(!checkedText.startsWith("@")){this.lyrics.push(e);}}break;}}}track.channels=usedChannels;track.name="";const trackName=track.events.find(e=>e.statusByte===midiMessageTypes.trackName);if(trackName&&this.tracks.indexOf(track)>0){track.name=readBinaryString(trackName.data);if(!trackHasVoiceMessages&&!track.name.toLowerCase().includes("setup")){this.extraMetadata.push(trackName);}}}this.tempoChanges.reverse();SpessaSynthInfo(`%cCorrecting loops, ports and detecting notes...`,consoleColors.info);const firstNoteOns=[];for(const t of this.tracks){const firstNoteOn=t.events.find(e=>(e.statusByte&240)===midiMessageTypes.noteOn);if(firstNoteOn){firstNoteOns.push(firstNoteOn.ticks);}}this.firstNoteOn=Math.min(...firstNoteOns);SpessaSynthInfo(`%cFirst note-on detected at: %c${this.firstNoteOn}%c ticks!`,consoleColors.info,consoleColors.recognized,consoleColors.info);loopStart??=this.firstNoteOn;if(loopEnd===null||loopEnd===0){loopEnd=this.lastVoiceEventTick;}this.loop={start:loopStart,end:loopEnd};SpessaSynthInfo(`%cLoop points: start: %c${this.loop.start}%c end: %c${this.loop.end}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);let portOffset=0;this.portChannelOffsetMap=[];for(const track of this.tracks){track.port=-1;if(track.channels.size===0){continue;}for(const e of track.events){if(e.statusByte!==midiMessageTypes.midiPort){continue;}const port=e.data[0];track.port=port;if(this.portChannelOffsetMap[port]===void 0){this.portChannelOffsetMap[port]=portOffset;portOffset+=16;}}}this.portChannelOffsetMap=[...this.portChannelOffsetMap].map(o=>o??0);let defaultPort=Infinity;for(const track of this.tracks){if(track.port!==-1){if(defaultPort>track.port){defaultPort=track.port;}}}if(defaultPort===Infinity){defaultPort=0;}for(const track of this.tracks){if(track.port===-1||track.port===void 0){track.port=defaultPort;}}if(this.portChannelOffsetMap.length===0){this.portChannelOffsetMap=[0];}if(this.portChannelOffsetMap.length<2){SpessaSynthInfo(`%cNo additional MIDI Ports detected.`,consoleColors.info);}else{this.isMultiPort=true;SpessaSynthInfo(`%cMIDI Ports detected!`,consoleColors.recognized);}if(!nameDetected){if(this.tracks.length>1){if(this.tracks[0].events.find(message=>message.statusByte>=midiMessageTypes.noteOn&&message.statusByte<midiMessageTypes.polyPressure)===void 0){const name=this.tracks[0].events.find(message=>message.statusByte===midiMessageTypes.trackName);if(name){this.binaryName=name.data;}}}else{const name=this.tracks[0].events.find(message=>message.statusByte===midiMessageTypes.trackName);if(name){this.binaryName=name.data;}}}this.extraMetadata=this.extraMetadata.filter(c=>c.data.length>0);this.lyrics.sort((a,b)=>a.ticks-b.ticks);if(!this.tracks.some(t=>t.events[0].ticks===0)){var _this$binaryName;const track=this.tracks[0];let b=this===null||this===void 0||(_this$binaryName=this.binaryName)===null||_this$binaryName===void 0?void 0:_this$binaryName.buffer;if(!b){b=new Uint8Array(0).buffer;}track.events.unshift(new MIDIMessage(0,midiMessageTypes.trackName,new IndexedByteArray(b)));}this.duration=this.midiTicksToSeconds(this.lastVoiceEventTick);if(this.binaryName&&this.binaryName.length<1){this.binaryName=void 0;}SpessaSynthInfo(`%cMIDI file parsed. Total tick time: %c${this.lastVoiceEventTick}%c, total seconds time: %c${formatTime(Math.ceil(this.duration)).time}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);SpessaSynthGroupEnd();}};function processEventInternal(event,trackIndex){if(this.externalMIDIPlayback){if(event.statusByte>=128){this.sendMIDIMessage([event.statusByte,...event.data]);return;}}const track=this._midiData.tracks[trackIndex];const statusByteData=getEvent(event.statusByte);const offset=this.midiPortChannelOffsets[this.currentMIDIPorts[trackIndex]]||0;statusByteData.channel+=offset;switch(statusByteData.status){case midiMessageTypes.noteOn:{const velocity=event.data[1];if(velocity>0){this.synth.noteOn(statusByteData.channel,event.data[0],velocity);this.playingNotes.push({midiNote:event.data[0],channel:statusByteData.channel,velocity});}else{this.synth.noteOff(statusByteData.channel,event.data[0]);const toDelete=this.playingNotes.findIndex(n=>n.midiNote===event.data[0]&&n.channel===statusByteData.channel);if(toDelete!==-1){this.playingNotes.splice(toDelete,1);}}break;}case midiMessageTypes.noteOff:{this.synth.noteOff(statusByteData.channel,event.data[0]);const toDelete=this.playingNotes.findIndex(n=>n.midiNote===event.data[0]&&n.channel===statusByteData.channel);if(toDelete!==-1){this.playingNotes.splice(toDelete,1);}break;}case midiMessageTypes.pitchWheel:this.synth.pitchWheel(statusByteData.channel,event.data[1]<<7|event.data[0]);break;case midiMessageTypes.controllerChange:if(this._midiData.isMultiPort&&track.channels.size===0){return;}this.synth.controllerChange(statusByteData.channel,event.data[0],event.data[1]);break;case midiMessageTypes.programChange:if(this._midiData.isMultiPort&&track.channels.size===0){return;}this.synth.programChange(statusByteData.channel,event.data[0]);break;case midiMessageTypes.polyPressure:this.synth.polyPressure(statusByteData.channel,event.data[0],event.data[1]);break;case midiMessageTypes.channelPressure:this.synth.channelPressure(statusByteData.channel,event.data[0]);break;case midiMessageTypes.systemExclusive:this.synth.systemExclusive(event.data,offset);break;case midiMessageTypes.setTempo:{let tempoBPM=6e7/readBigEndian(event.data,3);this.oneTickToSeconds=60/(tempoBPM*this._midiData.timeDivision);if(this.oneTickToSeconds===0){this.oneTickToSeconds=60/(120*this._midiData.timeDivision);SpessaSynthInfo("invalid tempo! falling back to 120 BPM");tempoBPM=120;}break;}// Recognized but ignored
case midiMessageTypes.timeSignature:case midiMessageTypes.endOfTrack:case midiMessageTypes.midiChannelPrefix:case midiMessageTypes.songPosition:case midiMessageTypes.activeSensing:case midiMessageTypes.keySignature:case midiMessageTypes.sequenceNumber:case midiMessageTypes.sequenceSpecific:case midiMessageTypes.text:case midiMessageTypes.lyric:case midiMessageTypes.copyright:case midiMessageTypes.trackName:case midiMessageTypes.marker:case midiMessageTypes.cuePoint:case midiMessageTypes.instrumentName:case midiMessageTypes.programName:break;case midiMessageTypes.midiPort:this.assignMIDIPort(trackIndex,event.data[0]);break;case midiMessageTypes.reset:this.synth.stopAllChannels();this.synth.resetAllControllers();break;default:SpessaSynthInfo(`%cUnrecognized Event: %c${event.statusByte}%c status byte: %c${Object.keys(midiMessageTypes).find(k=>midiMessageTypes[k]===statusByteData.status)}`,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);break;}if(statusByteData.status>=0&&statusByteData.status<128){this.callEvent("metaEvent",{event,trackIndex});}}function processTick(){if(this.paused||!this._midiData){return;}const currentTime=this.currentTime;while(this.playedTime<currentTime){const trackIndex=this.findFirstEventIndex();const track=this._midiData.tracks[trackIndex];const event=track.events[this.eventIndexes[trackIndex]++];this.processEvent(event,trackIndex);const nextTrackIndex=this.findFirstEventIndex();const nextTrack=this._midiData.tracks[nextTrackIndex];if(this.loopCount>0&&this._midiData.loop.end<=event.ticks){if(this.loopCount!==Infinity){this.loopCount--;this.callEvent("loopCountChange",{newCount:this.loopCount});}this.setTimeTicks(this._midiData.loop.start);return;}if(nextTrack.events.length<=this.eventIndexes[nextTrackIndex]||// https://github.com/spessasus/spessasynth_core/issues/21
event.ticks>=this._midiData.lastVoiceEventTick){this.songIsFinished();return;}const eventNext=nextTrack.events[this.eventIndexes[nextTrackIndex]];this.playedTime+=this.oneTickToSeconds*(eventNext.ticks-event.ticks);}}function assignMIDIPortInternal(trackNum,port){if(this._midiData.tracks[trackNum].channels.size===0){return;}if(this.midiPortChannelOffset===0){this.midiPortChannelOffset+=16;this.midiPortChannelOffsets[port]=0;}if(this.midiPortChannelOffsets[port]===void 0){if(this.synth.midiChannels.length<this.midiPortChannelOffset+15){this.addNewMIDIPort();}this.midiPortChannelOffsets[port]=this.midiPortChannelOffset;this.midiPortChannelOffset+=16;}this.currentMIDIPorts[trackNum]=port;}function loadNewSequenceInternal(parsedMidi){if(!parsedMidi.tracks){throw new Error("This MIDI has no tracks!");}if(parsedMidi.duration===0){SpessaSynthWarn("This MIDI file has a duration of exactly 0 seconds.");this.pausedTime=0;return;}this.oneTickToSeconds=60/(120*parsedMidi.timeDivision);this._midiData=parsedMidi;this.synth.clearEmbeddedBank();if(this._midiData.embeddedSoundBank!==void 0){SpessaSynthInfo("%cEmbedded soundbank detected! Using it.",consoleColors.recognized);this.synth.setEmbeddedSoundBank(this._midiData.embeddedSoundBank,this._midiData.bankOffset);}SpessaSynthGroupCollapsed("%cPreloading samples...",consoleColors.info);const used=this._midiData.getUsedProgramsAndKeys(this.synth.soundBankManager);used.forEach((combos,preset)=>{SpessaSynthInfo(`%cPreloading used samples on %c${preset.name}%c...`,consoleColors.info,consoleColors.recognized,consoleColors.info);for(const combo of combos){const[midiNote,velocity]=combo.split("-").map(Number);this.synth.getVoicesForPreset(preset,midiNote,velocity,midiNote);}});SpessaSynthGroupEnd();this.currentMIDIPorts=this._midiData.tracks.map(t=>t.port);this.midiPortChannelOffset=0;this.midiPortChannelOffsets={};this._midiData.tracks.forEach((track,trackIndex)=>{this.assignMIDIPort(trackIndex,track.port);});this.firstNoteTime=this._midiData.midiTicksToSeconds(this._midiData.firstNoteOn);SpessaSynthInfo(`%cTotal song time: ${formatTime(Math.ceil(this._midiData.duration)).time}`,consoleColors.recognized);this.callEvent("songChange",{songIndex:this._songIndex});if(this._midiData.duration<=0.2){SpessaSynthWarn(`%cVery short song: (${formatTime(Math.round(this._midiData.duration)).time}). Disabling loop!`,consoleColors.warn);this.loopCount=0;}this.currentTime=0;}var generatorTypes={INVALID:-1,// Invalid generator
startAddrsOffset:0,// Sample control - moves sample start point
endAddrOffset:1,// Sample control - moves sample end point
startloopAddrsOffset:2,// Loop control - moves loop start point
endloopAddrsOffset:3,// Loop control - moves loop end point
startAddrsCoarseOffset:4,// Sample control - moves sample start point in 32,768 increments
modLfoToPitch:5,// Pitch modulation - modulation lfo pitch modulation in cents
vibLfoToPitch:6,// Pitch modulation - vibrato lfo pitch modulation in cents
modEnvToPitch:7,// Pitch modulation - modulation envelope pitch modulation in cents
initialFilterFc:8,// Filter - lowpass filter cutoff in cents
initialFilterQ:9,// Filter - lowpass filter resonance
modLfoToFilterFc:10,// Filter modulation - modulation lfo lowpass filter cutoff in cents
modEnvToFilterFc:11,// Filter modulation - modulation envelope lowpass filter cutoff in cents
endAddrsCoarseOffset:12,// Ample control - move sample end point in 32,768 increments
modLfoToVolume:13,// Modulation lfo - volume (tremolo), where 100 = 10dB
unused1:14,// Unused
chorusEffectsSend:15,// Effect send - how much is sent to chorus 0 - 1000
reverbEffectsSend:16,// Effect send - how much is sent to reverb 0 - 1000
pan:17,// Panning - where -500 = left, 0 = center, 500 = right
unused2:18,// Unused
unused3:19,// Unused
unused4:20,// Unused
delayModLFO:21,// Mod lfo - delay for mod lfo to start from zero
freqModLFO:22,// Mod lfo - frequency of mod lfo, 0 = 8.176 Hz, units: f => 1200log2(f/8.176)
delayVibLFO:23,// Vib lfo - delay for vibrato lfo to start from zero
freqVibLFO:24,// Vib lfo - frequency of vibrato lfo, 0 = 8.176Hz, unit: f => 1200log2(f/8.176)
delayModEnv:25,// Mod env - 0 = 1 s decay till mod env starts
attackModEnv:26,// Mod env - attack of mod env
holdModEnv:27,// Mod env - hold of mod env
decayModEnv:28,// Mod env - decay of mod env
sustainModEnv:29,// Mod env - sustain of mod env
releaseModEnv:30,// Mod env - release of mod env
keyNumToModEnvHold:31,// Mod env - also modulating mod envelope hold with key number
keyNumToModEnvDecay:32,// Mod env - also modulating mod envelope decay with key number
delayVolEnv:33,// Vol env - delay of envelope from zero (weird scale)
attackVolEnv:34,// Vol env - attack of envelope
holdVolEnv:35,// Vol env - hold of envelope
decayVolEnv:36,// Vol env - decay of envelope
sustainVolEnv:37,// Vol env - sustain of envelope
releaseVolEnv:38,// Vol env - release of envelope
keyNumToVolEnvHold:39,// Vol env - key number to volume envelope hold
keyNumToVolEnvDecay:40,// Vol env - key number to volume envelope decay
instrument:41,// Zone - instrument index to use for preset zone
reserved1:42,// Reserved
keyRange:43,// Zone - key range for which preset / instrument zone is active
velRange:44,// Zone - velocity range for which preset / instrument zone is active
startloopAddrsCoarseOffset:45,// Sample control - moves sample loop start point in 32,768 increments
keyNum:46,// Zone - instrument only: always use this midi number (ignore what's pressed)
velocity:47,// Zone - instrument only: always use this velocity (ignore what's pressed)
initialAttenuation:48,// Zone - allows turning down the volume, 10 = -1dB
reserved2:49,// Reserved
endloopAddrsCoarseOffset:50,// Sample control - moves sample loop end point in 32,768 increments
coarseTune:51,// Tune - pitch offset in semitones
fineTune:52,// Tune - pitch offset in cents
sampleID:53,// Sample - instrument zone only: which sample to use
sampleModes:54,// Sample - 0 = no loop, 1 = loop, 2 = start on release, 3 = loop and play till the end in release phase
reserved3:55,// Reserved
scaleTuning:56,// Sample - the degree to which MIDI key number influences pitch, 100 = default
exclusiveClass:57,// Sample - = cut = choke group
overridingRootKey:58,// Sample - can override the sample's original pitch
unused5:59,// Unused
endOper:60,// End marker
// Additional generators that are used in system exclusives and will not be saved
vibLfoToVolume:61,vibLfoToFilterFc:62};var GENERATORS_AMOUNT=Object.keys(generatorTypes).length;var MAX_GENERATOR=Math.max(...Object.values(generatorTypes));var generatorLimits=[];generatorLimits[generatorTypes.startAddrsOffset]={min:0,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.endAddrOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.startloopAddrsOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.endloopAddrsOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.startAddrsCoarseOffset]={min:0,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.modLfoToPitch]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.vibLfoToPitch]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.modEnvToPitch]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.initialFilterFc]={min:1500,max:13500,def:13500,nrpn:2};generatorLimits[generatorTypes.initialFilterQ]={min:0,max:960,def:0,nrpn:1};generatorLimits[generatorTypes.modLfoToFilterFc]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.vibLfoToFilterFc]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.modEnvToFilterFc]={min:-12e3,max:12e3,def:0,nrpn:2};generatorLimits[generatorTypes.endAddrsCoarseOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.modLfoToVolume]={min:-960,max:960,def:0,nrpn:1};generatorLimits[generatorTypes.vibLfoToVolume]={min:-960,max:960,def:0,nrpn:1};generatorLimits[generatorTypes.chorusEffectsSend]={min:0,max:1e3,def:0,nrpn:1};generatorLimits[generatorTypes.reverbEffectsSend]={min:0,max:1e3,def:0,nrpn:1};generatorLimits[generatorTypes.pan]={min:-500,max:500,def:0,nrpn:1};generatorLimits[generatorTypes.delayModLFO]={min:-12e3,max:5e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.freqModLFO]={min:-16e3,max:4500,def:0,nrpn:4};generatorLimits[generatorTypes.delayVibLFO]={min:-12e3,max:5e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.freqVibLFO]={min:-16e3,max:4500,def:0,nrpn:4};generatorLimits[generatorTypes.delayModEnv]={min:-32768,max:5e3,def:-32768,nrpn:2};generatorLimits[generatorTypes.attackModEnv]={min:-32768,max:8e3,def:-32768,nrpn:2};generatorLimits[generatorTypes.holdModEnv]={min:-12e3,max:5e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.decayModEnv]={min:-12e3,max:8e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.sustainModEnv]={min:0,max:1e3,def:0,nrpn:1};generatorLimits[generatorTypes.releaseModEnv]={min:-12e3,max:8e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.keyNumToModEnvHold]={min:-1200,max:1200,def:0,nrpn:1};generatorLimits[generatorTypes.keyNumToModEnvDecay]={min:-1200,max:1200,def:0,nrpn:1};generatorLimits[generatorTypes.delayVolEnv]={min:-12e3,max:5e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.attackVolEnv]={min:-12e3,max:8e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.holdVolEnv]={min:-12e3,max:5e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.decayVolEnv]={min:-12e3,max:8e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.sustainVolEnv]={min:0,max:1440,def:0,nrpn:1};generatorLimits[generatorTypes.releaseVolEnv]={min:-12e3,max:8e3,def:-12e3,nrpn:2};generatorLimits[generatorTypes.keyNumToVolEnvHold]={min:-1200,max:1200,def:0,nrpn:1};generatorLimits[generatorTypes.keyNumToVolEnvDecay]={min:-1200,max:1200,def:0,nrpn:1};generatorLimits[generatorTypes.startloopAddrsCoarseOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.keyNum]={min:-1,max:127,def:-1,nrpn:1};generatorLimits[generatorTypes.velocity]={min:-1,max:127,def:-1,nrpn:1};generatorLimits[generatorTypes.initialAttenuation]={min:0,max:1440,def:0,nrpn:1};generatorLimits[generatorTypes.endloopAddrsCoarseOffset]={min:-32768,max:32768,def:0,nrpn:1};generatorLimits[generatorTypes.coarseTune]={min:-120,max:120,def:0,nrpn:1};generatorLimits[generatorTypes.fineTune]={min:-12700,max:12700,def:0,nrpn:1};generatorLimits[generatorTypes.scaleTuning]={min:0,max:1200,def:100,nrpn:1};generatorLimits[generatorTypes.exclusiveClass]={min:0,max:99999,def:0,nrpn:0};generatorLimits[generatorTypes.overridingRootKey]={min:0-1,max:127,def:-1,nrpn:0};generatorLimits[generatorTypes.sampleModes]={min:0,max:3,def:0,nrpn:0};var sampleTypes={monoSample:1,rightSample:2,leftSample:4,linkedSample:8,romMonoSample:32769,romRightSample:32770,romLeftSample:32772,romLinkedSample:32776};var modulatorSources={noController:0,noteOnVelocity:2,noteOnKeyNum:3,polyPressure:10,channelPressure:13,pitchWheel:14,pitchWheelRange:16,link:127};var modulatorCurveTypes={linear:0,concave:1,convex:2,switch:3};var dlsSources={none:0,modLfo:1,velocity:2,keyNum:3,volEnv:4,modEnv:5,pitchWheel:6,polyPressure:7,channelPressure:8,vibratoLfo:9,modulationWheel:129,volume:135,pan:138,expression:139,// Note: these are flipped unintentionally in DLS2 table 9. Argh!
chorus:221,reverb:219,pitchWheelRange:256,fineTune:257,coarseTune:258};var dlsDestinations={none:0,// No destination
gain:1,// Linear gain
reserved:2,// Reserved
pitch:3,// Pitch in cents
pan:4,// Pan 10ths of a percent
keyNum:5,// MIDI key number
// Nuh uh, the channel controllers are not supported!
chorusSend:128,// Chorus send level 10ths of a percent
reverbSend:129,// Reverb send level 10ths of a percent
modLfoFreq:260,// Modulation LFO frequency
modLfoDelay:261,// Modulation LFO delay
vibLfoFreq:276,// Vibrato LFO frequency
vibLfoDelay:277,// Vibrato LFO delay
volEnvAttack:518,// Volume envelope attack
volEnvDecay:519,// Volume envelope decay
reservedEG1:520,// Reserved
volEnvRelease:521,// Volume envelope release
volEnvSustain:522,// Volume envelope sustain
volEnvDelay:523,// Volume envelope delay
volEnvHold:524,// Volume envelope hold
modEnvAttack:778,// Modulation envelope attack
modEnvDecay:779,// Modulation envelope decay
reservedEG2:780,// Reserved
modEnvRelease:781,// Modulation envelope release
modEnvSustain:782,// Modulation envelope sustain
modEnvDelay:783,// Modulation envelope delay
modEnvHold:784,// Modulation envelope hold
filterCutoff:1280,// Low pass filter cutoff frequency
filterQ:1281// Low pass filter resonance
};var DLSLoopTypes={forward:0,loopAndRelease:1};var NON_CC_INDEX_OFFSET=128;var CONTROLLER_TABLE_SIZE=147;var defaultMIDIControllerValues=new Int16Array(CONTROLLER_TABLE_SIZE).fill(0);var setResetValue=(i,v)=>defaultMIDIControllerValues[i]=v<<7;setResetValue(midiControllers.mainVolume,100);setResetValue(midiControllers.balance,64);setResetValue(midiControllers.expressionController,127);setResetValue(midiControllers.pan,64);setResetValue(midiControllers.portamentoOnOff,127);setResetValue(midiControllers.filterResonance,64);setResetValue(midiControllers.releaseTime,64);setResetValue(midiControllers.attackTime,64);setResetValue(midiControllers.brightness,64);setResetValue(midiControllers.decayTime,64);setResetValue(midiControllers.vibratoRate,64);setResetValue(midiControllers.vibratoDepth,64);setResetValue(midiControllers.vibratoDelay,64);setResetValue(midiControllers.generalPurposeController6,64);setResetValue(midiControllers.generalPurposeController8,64);setResetValue(midiControllers.registeredParameterLSB,127);setResetValue(midiControllers.registeredParameterMSB,127);setResetValue(midiControllers.nonRegisteredParameterLSB,127);setResetValue(midiControllers.nonRegisteredParameterMSB,127);var PORTAMENTO_CONTROL_UNSET=1;defaultMIDIControllerValues[midiControllers.portamentoControl]=PORTAMENTO_CONTROL_UNSET;setResetValue(NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel,64);setResetValue(NON_CC_INDEX_OFFSET+modulatorSources.pitchWheelRange,2);var CUSTOM_CONTROLLER_TABLE_SIZE=Object.keys(customControllers).length;var customResetArray=new Float32Array(CUSTOM_CONTROLLER_TABLE_SIZE);customResetArray[customControllers.modulationMultiplier]=1;function resetAllControllersInternal(log=true){if(log){SpessaSynthInfo("%cResetting all controllers!",consoleColors.info);}this.privateProps.callEvent("allControllerReset",void 0);this.setMasterParameter("midiSystem",DEFAULT_SYNTH_MODE);if(!this.privateProps.drumPreset||!this.privateProps.defaultPreset){return;}for(let channelNumber=0;channelNumber<this.midiChannels.length;channelNumber++){const ch=this.midiChannels[channelNumber];ch.resetControllers(false);ch.resetPreset();for(let ccNum=0;ccNum<128;ccNum++){if(this.midiChannels[channelNumber].lockedControllers[ccNum]){this.privateProps.callEvent("controllerChange",{channel:channelNumber,controllerNumber:ccNum,controllerValue:this.midiChannels[channelNumber].midiControllers[ccNum]>>7});}}if(!this.midiChannels[channelNumber].lockedControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel]){const val=this.midiChannels[channelNumber].midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel];this.privateProps.callEvent("pitchWheel",{channel:channelNumber,pitch:val});}if(!this.midiChannels[channelNumber].lockedControllers[NON_CC_INDEX_OFFSET+modulatorSources.channelPressure]){const val=this.midiChannels[channelNumber].midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.channelPressure]>>7;this.privateProps.callEvent("channelPressure",{channel:channelNumber,pressure:val});}}this.privateProps.tunings.length=0;this.privateProps.tunings.length=0;for(let i=0;i<128;i++){this.privateProps.tunings.push([]);}this.setMIDIVolume(1);}function resetControllers(sendCCEvents=true){this.channelOctaveTuning.fill(0);for(let i=0;i<defaultMIDIControllerValues.length;i++){if(this.lockedControllers[i]){continue;}const resetValue=defaultMIDIControllerValues[i];if(this.midiControllers[i]!==resetValue&&i<127){if(i===midiControllers.portamentoControl){this.midiControllers[i]=PORTAMENTO_CONTROL_UNSET;}else if(i!==midiControllers.portamentoControl&&i!==midiControllers.dataEntryMSB&&i!==midiControllers.registeredParameterMSB&&i!==midiControllers.registeredParameterLSB&&i!==midiControllers.nonRegisteredParameterMSB&&i!==midiControllers.nonRegisteredParameterLSB){this.controllerChange(i,resetValue>>7,sendCCEvents);}}else{this.midiControllers[i]=resetValue;}}this.channelVibrato={rate:0,depth:0,delay:0};this.randomPan=false;this.sysExModulators.resetModulators();const transpose=this.customControllers[customControllers.channelTransposeFine];this.customControllers.set(customResetArray);this.setCustomController(customControllers.channelTransposeFine,transpose);this.resetParameters();}function resetPreset(){this.setBankMSB(BankSelectHacks.getDefaultBank(this.channelSystem));this.setBankLSB(0);this.setGSDrums(false);this.setDrums(this.channelNumber%16===DEFAULT_PERCUSSION);this.programChange(0);}var nonResettableCCs=/* @__PURE__ */new Set([midiControllers.bankSelect,midiControllers.bankSelectLSB,midiControllers.mainVolume,midiControllers.mainVolumeLSB,midiControllers.pan,midiControllers.panLSB,midiControllers.reverbDepth,midiControllers.tremoloDepth,midiControllers.chorusDepth,midiControllers.detuneDepth,midiControllers.phaserDepth,midiControllers.soundVariation,midiControllers.filterResonance,midiControllers.releaseTime,midiControllers.attackTime,midiControllers.brightness,midiControllers.decayTime,midiControllers.vibratoRate,midiControllers.vibratoDepth,midiControllers.vibratoDelay,midiControllers.soundController10]);function resetControllersRP15Compliant(){this.channelOctaveTuning.fill(0);this.pitchWheel(8192);this.channelVibrato={rate:0,depth:0,delay:0};for(let i=0;i<128;i++){const resetValue=defaultMIDIControllerValues[i];if(!nonResettableCCs.has(i)&&resetValue!==this.midiControllers[i]){if(i===midiControllers.portamentoControl){this.midiControllers[i]=PORTAMENTO_CONTROL_UNSET;}else{this.controllerChange(i,resetValue>>7);}}}this.resetGeneratorOverrides();this.resetGeneratorOffsets();}function resetParameters(){this.dataEntryState=dataEntryStates.Idle;this.midiControllers[midiControllers.nonRegisteredParameterLSB]=127<<7;this.midiControllers[midiControllers.nonRegisteredParameterMSB]=127<<7;this.midiControllers[midiControllers.registeredParameterLSB]=127<<7;this.midiControllers[midiControllers.registeredParameterMSB]=127<<7;this.resetGeneratorOverrides();this.resetGeneratorOffsets();}var defaultControllerArray=defaultMIDIControllerValues.slice(0,128);function setTimeToInternal(time,ticks=void 0){if(!this._midiData){return false;}this.oneTickToSeconds=60/(120*this._midiData.timeDivision);if(this.externalMIDIPlayback){this.sendMIDIReset();}else{this.synth.resetAllControllers();this.synth.stopAllChannels(false);}this.playedTime=0;this.eventIndexes=Array(this._midiData.tracks.length).fill(0);const channelsToSave=this.synth.midiChannels.length;const pitchWheels=Array(channelsToSave).fill(8192);const programs=[];for(let i=0;i<channelsToSave;i++){programs.push({program:-1,bank:0,actualBank:0});}const isCCNonSkippable=cc=>cc===midiControllers.dataDecrement||cc===midiControllers.dataIncrement||cc===midiControllers.dataEntryMSB||cc===midiControllers.dataEntryLSB||cc===midiControllers.registeredParameterLSB||cc===midiControllers.registeredParameterMSB||cc===midiControllers.nonRegisteredParameterLSB||cc===midiControllers.nonRegisteredParameterMSB||cc===midiControllers.bankSelect||cc===midiControllers.bankSelectLSB||cc===midiControllers.resetAllControllers;const savedControllers=[];for(let i=0;i<channelsToSave;i++){savedControllers.push(Array.from(defaultControllerArray));}let savedTempo=void 0;let savedTempoTrack=0;function resetAllControllers(chan){pitchWheels[chan]=8192;if((savedControllers===null||savedControllers===void 0?void 0:savedControllers[chan])===void 0){return;}for(let i=0;i<defaultControllerArray.length;i++){if(!nonResettableCCs.has(i)){savedControllers[chan][i]=defaultControllerArray[i];}}}while(true){let trackIndex=this.findFirstEventIndex();const track=this._midiData.tracks[trackIndex];const event=track.events[this.eventIndexes[trackIndex]];if(ticks!==void 0){if(event.ticks>=ticks){break;}}else{if(this.playedTime>=time){break;}}const info=getEvent(event.statusByte);const channel=info.channel+(this.midiPortChannelOffsets[track.port]||0);switch(info.status){// Skip note messages
case midiMessageTypes.noteOn:savedControllers[channel]??=Array.from(defaultControllerArray);savedControllers[channel][midiControllers.portamentoControl]=event.data[0];break;case midiMessageTypes.noteOff:break;// Skip pitch bend
case midiMessageTypes.pitchWheel:pitchWheels[channel]=event.data[1]<<7|event.data[0];break;case midiMessageTypes.programChange:{if(this._midiData.isMultiPort&&track.channels.size===0){break;}const p=programs[channel];p.program=event.data[0];p.actualBank=p.bank;break;}case midiMessageTypes.controllerChange:{if(this._midiData.isMultiPort&&track.channels.size===0){break;}const controllerNumber=event.data[0];if(isCCNonSkippable(controllerNumber)){const ccV=event.data[1];if(controllerNumber===midiControllers.bankSelect){programs[channel].bank=ccV;break;}else if(controllerNumber===midiControllers.resetAllControllers){resetAllControllers(channel);}if(this.externalMIDIPlayback){this.sendMIDICC(channel,controllerNumber,ccV);}else{this.synth.controllerChange(channel,controllerNumber,ccV);}}else{savedControllers[channel]??=Array.from(defaultControllerArray);savedControllers[channel][controllerNumber]=event.data[1];}break;}case midiMessageTypes.setTempo:const tempoBPM=6e7/readBigEndian(event.data,3);this.oneTickToSeconds=60/(tempoBPM*this._midiData.timeDivision);savedTempo=event;savedTempoTrack=trackIndex;break;default:this.processEvent(event,trackIndex);break;}this.eventIndexes[trackIndex]++;trackIndex=this.findFirstEventIndex();const nextEvent=this._midiData.tracks[trackIndex].events[this.eventIndexes[trackIndex]];if(nextEvent===void 0){this.stop();return false;}this.playedTime+=this.oneTickToSeconds*(nextEvent.ticks-event.ticks);}if(this.externalMIDIPlayback){for(let channelNumber=0;channelNumber<channelsToSave;channelNumber++){if(pitchWheels[channelNumber]!==void 0){this.sendMIDIPitchWheel(channelNumber,pitchWheels[channelNumber]>>7,pitchWheels[channelNumber]&127);}if(savedControllers[channelNumber]!==void 0){savedControllers[channelNumber].forEach((value,index)=>{if(value!==defaultControllerArray[index]&&!isCCNonSkippable(index)){this.sendMIDICC(channelNumber,index,value);}});}if(programs[channelNumber].program>=0&&programs[channelNumber].actualBank>=0){const bank=programs[channelNumber].actualBank;this.sendMIDICC(channelNumber,midiControllers.bankSelect,bank);this.sendMIDIProgramChange(channelNumber,programs[channelNumber].program);}}}else{for(let channelNumber=0;channelNumber<channelsToSave;channelNumber++){if(pitchWheels[channelNumber]!==void 0){this.synth.pitchWheel(channelNumber,pitchWheels[channelNumber]);}if(savedControllers[channelNumber]!==void 0){savedControllers[channelNumber].forEach((value,index)=>{if(value!==defaultControllerArray[index]&&!isCCNonSkippable(index)){this.synth.controllerChange(channelNumber,index,value);}});}if(programs[channelNumber].actualBank>=0){const p=programs[channelNumber];if(p.program!==-1){this.synth.controllerChange(channelNumber,midiControllers.bankSelect,p.actualBank);this.synth.programChange(channelNumber,p.program);}else{this.synth.controllerChange(channelNumber,midiControllers.bankSelect,p.bank);}}}}if(savedTempo){this.callEvent("metaEvent",{event:savedTempo,trackIndex:savedTempoTrack});}if(this.paused){this.pausedTime=this.playedTime;}return true;}var SpessaSynthSequencer=class{/**
     * Sequencer's song list.
     */songs=[];/**
     * The shuffled song indexes.
     * This is used when shuffleMode is enabled.
     */shuffledSongIndexes=[];/**
     * The synthesizer connected to the sequencer.
     */synth;/**
     * If the MIDI messages should be sent to an event instead of the synth.
     * This is used by spessasynth_lib to pass them over to Web MIDI API.
     */externalMIDIPlayback=false;/**
     * The loop count of the sequencer.
     * If infinite, it will loop forever.
     * If zero, the loop is disabled.
     */loopCount=0;/**
     * Indicates if the sequencer should skip to the first note on event.
     * Defaults to true.
     */skipToFirstNoteOn=true;/**
     * Called when the sequencer calls an event.
     * @param event The event
     */onEventCall;/**
     * Processes a single MIDI tick.
     * You should call this every rendering quantum to process the sequencer events in real-time.
     */processTick=processTick.bind(this);/**
     * The time of the first note in seconds.
     */firstNoteTime=0;/**
     * How long a single MIDI tick currently lasts in seconds.
     */oneTickToSeconds=0;/**
     * The current event index for each track.
     * This is used to track which event is currently being processed for each track.
     */eventIndexes=[];/**
     * The time that has already been played in the current song.
     */playedTime=0;/**
     * The paused time of the sequencer.
     * If the sequencer is not paused, this is undefined.
     */pausedTime=-1;/**
     * Absolute time of the sequencer when it started playing.
     * It is based on the synth's current time.
     */absoluteStartTime=0;/**
     * Currently playing notes (for pausing and resuming)
     */playingNotes=[];/**
     * MIDI Port number for each of the MIDI tracks in the current sequence.
     */currentMIDIPorts=[];/**
     * This is used to assign new MIDI port offsets to new ports.
     */midiPortChannelOffset=0;/**
     * Channel offsets for each MIDI port.
     * Stored as:
     * Record<midi port, channel offset>
     */midiPortChannelOffsets={};assignMIDIPort=assignMIDIPortInternal.bind(this);loadNewSequence=loadNewSequenceInternal.bind(this);processEvent=processEventInternal.bind(this);setTimeTo=setTimeToInternal.bind(this);/**
     * Initializes a new Sequencer without any songs loaded.
     * @param spessasynthProcessor the synthesizer processor to use with this sequencer.
     */constructor(spessasynthProcessor){this.synth=spessasynthProcessor;this.absoluteStartTime=this.synth.currentSynthTime;}_midiData;// noinspection JSUnusedGlobalSymbols
/**
     * The currently loaded MIDI data.
     */get midiData(){return this._midiData;}// noinspection JSUnusedGlobalSymbols
/**
     * The length of the current sequence in seconds.
     */get duration(){var _this$_midiData;return((_this$_midiData=this._midiData)===null||_this$_midiData===void 0?void 0:_this$_midiData.duration)??0;}_songIndex=0;// noinspection JSUnusedGlobalSymbols
/**
     * The current song index in the song list.
     * If shuffleMode is enabled, this is the index of the shuffled song list.
     */get songIndex(){return this._songIndex;}// noinspection JSUnusedGlobalSymbols
/**
     * The current song index in the song list.
     * If shuffleMode is enabled, this is the index of the shuffled song list.
     */set songIndex(value){this._songIndex=value;this._songIndex=Math.max(0,value%this.songs.length);this.loadCurrentSong();}_shuffleMode=false;// noinspection JSUnusedGlobalSymbols
/**
     * Controls if the sequencer should shuffle the songs in the song list.
     * If true, the sequencer will play the songs in a random order.
     */get shuffleMode(){return this._shuffleMode;}// noinspection JSUnusedGlobalSymbols
/**
     * Controls if the sequencer should shuffle the songs in the song list.
     * If true, the sequencer will play the songs in a random order.
     */set shuffleMode(on){this._shuffleMode=on;if(on){this.shuffleSongIndexes();this._songIndex=0;this.loadCurrentSong();}else{this._songIndex=this.shuffledSongIndexes[this._songIndex];}}/**
     * Internal playback rate.
     */_playbackRate=1;// noinspection JSUnusedGlobalSymbols
/**
     * The sequencer's playback rate.
     * This is the rate at which the sequencer plays back the MIDI data.
     */get playbackRate(){return this._playbackRate;}// noinspection JSUnusedGlobalSymbols
/**
     * The sequencer's playback rate.
     * This is the rate at which the sequencer plays back the MIDI data.
     * @param value the playback rate to set.
     */set playbackRate(value){const t=this.currentTime;this._playbackRate=value;this.recalculateStartTime(t);}/**
     * The current time of the sequencer.
     * This is the time in seconds since the sequencer started playing.
     */get currentTime(){if(this.pausedTime!==void 0){return this.pausedTime;}return(this.synth.currentSynthTime-this.absoluteStartTime)*this._playbackRate;}/**
     * The current time of the sequencer.
     * This is the time in seconds since the sequencer started playing.
     * @param time the time to set in seconds.
     */set currentTime(time){if(!this._midiData){return;}if(this.paused){this.pausedTime=time;}if(time>this._midiData.duration||time<0){if(this.skipToFirstNoteOn){this.setTimeTicks(this._midiData.firstNoteOn-1);}else{this.setTimeTicks(0);}}else if(this.skipToFirstNoteOn&&time<this.firstNoteTime){this.setTimeTicks(this._midiData.firstNoteOn-1);return;}else{this.playingNotes=[];this.callEvent("timeChange",{newTime:time});this.setTimeTo(time);this.recalculateStartTime(time);}}/**
     * True if paused, false if playing or stopped
     */get paused(){return this.pausedTime!==void 0;}/**
     * Starts or resumes the playback of the sequencer.
     * If the sequencer is paused, it will resume from the paused time.
     */play(){if(!this._midiData){SpessaSynthWarn("No songs loaded in the sequencer. Ignoring the play call.");return;}if(this.currentTime>=this._midiData.duration){this.currentTime=0;}if(this.paused){this.recalculateStartTime(this.pausedTime??0);}if(!this.externalMIDIPlayback){this.playingNotes.forEach(n=>{this.synth.noteOn(n.channel,n.midiNote,n.velocity);});}this.pausedTime=void 0;}// noinspection JSUnusedGlobalSymbols
/**
     * Pauses the playback.
     */pause(){this.pauseInternal(false);}/**
     * Loads a new song list into the sequencer.
     * @param midiBuffers the list of songs to load.
     */loadNewSongList(midiBuffers){this.songs=midiBuffers;if(this.songs.length<1){return;}this._songIndex=0;this.shuffleSongIndexes();this.callEvent("songListChange",{newSongList:[...this.songs]});this.loadCurrentSong();}callEvent(type,data){var _this$onEventCall;this===null||this===void 0||(_this$onEventCall=this.onEventCall)===null||_this$onEventCall===void 0||_this$onEventCall.call(this,{type,data});}pauseInternal(isFinished){if(this.paused){return;}this.stop();this.callEvent("pause",{isFinished});}songIsFinished(){if(this.songs.length===1){this.pauseInternal(true);return;}this._songIndex++;this._songIndex%=this.songs.length;this.loadCurrentSong();}/**
     * Stops the playback
     */stop(){this.pausedTime=this.currentTime;for(let i=0;i<16;i++){this.synth.controllerChange(i,midiControllers.sustainPedal,0);}this.synth.stopAllChannels();if(this.externalMIDIPlayback){for(const note of this.playingNotes){this.sendMIDIMessage([midiMessageTypes.noteOff|note.channel%16,note.midiNote]);}for(let c=0;c<MIDI_CHANNEL_COUNT;c++){this.sendMIDICC(c,midiControllers.allNotesOff,0);}}}/**
     * @returns the index of the first to the current played time
     */findFirstEventIndex(){let index=0;let ticks=Infinity;this._midiData.tracks.forEach((track,i)=>{if(this.eventIndexes[i]>=track.events.length){return;}const event=track.events[this.eventIndexes[i]];if(event.ticks<ticks){index=i;ticks=event.ticks;}});return index;}/**
     * Adds a new port (16 channels) to the synth.
     */addNewMIDIPort(){for(let i=0;i<16;i++){this.synth.createMIDIChannel();}}sendMIDIMessage(message){if(!this.externalMIDIPlayback){return;}this.callEvent("midiMessage",{message});}sendMIDIReset(){this.sendMIDIMessage([midiMessageTypes.reset]);for(let ch=0;ch<MIDI_CHANNEL_COUNT;ch++){this.sendMIDIMessage([midiMessageTypes.controllerChange|ch,midiControllers.allSoundOff,0]);this.sendMIDIMessage([midiMessageTypes.controllerChange|ch,midiControllers.resetAllControllers,0]);}}loadCurrentSong(){let index=this._songIndex;if(this._shuffleMode){index=this.shuffledSongIndexes[this._songIndex];}this.loadNewSequence(this.songs[index]);}shuffleSongIndexes(){const indexes=this.songs.map((_,i)=>i);this.shuffledSongIndexes=[];while(indexes.length>0){const index=indexes[Math.floor(Math.random()*indexes.length)];this.shuffledSongIndexes.push(index);indexes.splice(indexes.indexOf(index),1);}}sendMIDICC(channel,type,value){channel%=16;if(!this.externalMIDIPlayback){return;}this.sendMIDIMessage([midiMessageTypes.controllerChange|channel,type,value]);}sendMIDIProgramChange(channel,program){channel%=16;if(!this.externalMIDIPlayback){return;}this.sendMIDIMessage([midiMessageTypes.programChange|channel,program]);}/**
     * Sets the pitch of the given channel
     * @param channel usually 0-15: the channel to change pitch
     * @param MSB SECOND byte of the MIDI pitchWheel message
     * @param LSB FIRST byte of the MIDI pitchWheel message
     */sendMIDIPitchWheel(channel,MSB,LSB){channel%=16;if(!this.externalMIDIPlayback){return;}this.sendMIDIMessage([midiMessageTypes.pitchWheel|channel,LSB,MSB]);}/**
     * Sets the time in MIDI ticks.
     * @param ticks the MIDI ticks to set the time to.
     */setTimeTicks(ticks){if(!this._midiData){return;}this.playingNotes=[];const seconds=this._midiData.midiTicksToSeconds(ticks);this.callEvent("timeChange",{newTime:seconds});const isNotFinished=this.setTimeTo(0,ticks);this.recalculateStartTime(this.playedTime);if(!isNotFinished){return;}}/**
     * Recalculates the absolute start time of the sequencer.
     * @param time the time in seconds to recalculate the start time for.
     */recalculateStartTime(time){this.absoluteStartTime=this.synth.currentSynthTime-time/this._playbackRate;}};var stbvorbis=void 0!==stbvorbis?stbvorbis:{};var isReady=false;var readySolver;stbvorbis.isInitialized=new Promise(A=>readySolver=A);var atob2=function(A){var I,g,B,E,Q,C,i,h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",G=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do E=h.indexOf(A.charAt(G++)),Q=h.indexOf(A.charAt(G++)),C=h.indexOf(A.charAt(G++)),i=h.indexOf(A.charAt(G++)),I=E<<2|Q>>4,g=(15&Q)<<4|C>>2,B=(3&C)<<6|i,o+=String.fromCharCode(I),64!==C&&(o+=String.fromCharCode(g)),64!==i&&(o+=String.fromCharCode(B));while(G<A.length);return o;};!function(){var A,I,g,B,E,Q,C,i,h,o,G,D,a,S,F,R,s,w,y,c,n,U,$=void 0!==$?$:{};$.wasmBinary=Uint8Array.from(atob2(""),function(A10){return A10.charCodeAt(0);});var $=void 0!==$?$:{},e={};for(A in $)$.hasOwnProperty(A)&&(e[A]=$[A]);$.arguments=[],$.thisProgram="./this.program",$.quit=function(A10,I2){throw I2;},$.preRun=[],$.postRun=[];var t=false,k=false,N=false,r=false;t="object"==typeof window,k="function"==typeof importScripts,N="object"==typeof process&&"function"==typeof __require2&&!t&&!k,r=!t&&!N&&!k;var Y="";function J(A10){return $.locateFile?$.locateFile(A10,Y):Y+A10;}N?(Y="/",$.read=function A10(B2,E2){var Q2;return I||(I=void 0),g||(g=void 0),B2=g.normalize(B2),Q2=I.readFileSync(B2),E2?Q2:Q2.toString();},$.readBinary=function A10(I2){var g2=$.read(I2,true);return g2.buffer||(g2=new Uint8Array(g2)),_(g2.buffer),g2;},process.argv.length>1&&($.thisProgram=process.argv[1].replace(/\\/g,"/")),$.arguments=process.argv.slice(2),"undefined"!=typeof module&&/undefined!=$/,process.on("uncaughtException",function(A10){if(!(A10 instanceof II))throw A10;}),process.on("unhandledRejection",function(A10,I2){process.exit(1);}),$.quit=function(A10){process.exit(A10);},$.inspect=function(){return"[Emscripten Module object]";}):r?("undefined"!=typeof read&&($.read=function A10(I2){return read(I2);}),$.readBinary=function A10(I2){var g2;return"function"==typeof readbuffer?new Uint8Array(readbuffer(I2)):(_("object"==typeof(g2=read(I2,"binary"))),g2);},"undefined"!=typeof scriptArgs?$.arguments=scriptArgs:"undefined"!=typeof arguments&&($.arguments=arguments),"function"==typeof quit&&($.quit=function(A10){quit(A10);})):(t||k)&&(t?document.currentScript&&(Y=document.currentScript.src):Y=self.location.href,Y=0!==Y.indexOf("blob:")?Y.split("/").slice(0,-1).join("/")+"/":"",$.read=function A10(I2){var g2=new XMLHttpRequest();return g2.open("GET",I2,false),g2.send(null),g2.responseText;},k&&($.readBinary=function A10(I2){var g2=new XMLHttpRequest();return g2.open("GET",I2,false),g2.responseType="arraybuffer",g2.send(null),new Uint8Array(g2.response);}),$.readAsync=function A10(I2,g2,B2){var E2=new XMLHttpRequest();E2.open("GET",I2,true),E2.responseType="arraybuffer",E2.onload=function A11(){if(200==E2.status||0==E2.status&&E2.response){g2(E2.response);return;}B2();},E2.onerror=B2,E2.send(null);},$.setWindowTitle=function(A10){document.title=A10;});var f=$.print||("undefined"!=typeof console?console.log.bind(console):"undefined"!=typeof print?print:null),H=$.printErr||("undefined"!=typeof printErr?printErr:"undefined"!=typeof console&&console.warn.bind(console)||f);for(A in e)e.hasOwnProperty(A)&&($[A]=e[A]);function L(A10){var I2=S;return S=S+A10+15&-16,I2;}function M(A10){var I2=h[c>>2],g2=I2+A10+15&-16;return(h[c>>2]=g2,g2>=AN&&!Ae())?(h[c>>2]=I2,0):I2;}function d(A10,I2){return I2||(I2=16),A10=Math.ceil(A10/I2)*I2;}function q(A10){switch(A10){case"i1":case"i8":return 1;case"i16":return 2;case"i32":case"float":return 4;case"i64":case"double":return 8;default:if("*"===A10[A10.length-1])return 4;if("i"!==A10[0])return 0;var I2=parseInt(A10.substr(1));return _(I2%8==0),I2/8;}}function K(A10){K.shown||(K.shown={}),K.shown[A10]||(K.shown[A10]=1,H(A10));}e=void 0;var l={"f64-rem":function(A10,I2){return A10%I2;},debugger:function(){}},u=[];function b(A10,I2){for(var g2=0,B2=g2;B2<g2+0;B2++)if(!u[B2])return u[B2]=A10,1+B2;throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";}function X(A10){u[A10-1]=null;}var m={};function Z(A10,I2){if(A10){_(I2),m[I2]||(m[I2]={});var g2=m[I2];return g2[A10]||(1===I2.length?g2[A10]=function g3(){return V(I2,A10);}:2===I2.length?g2[A10]=function g3(B2){return V(I2,A10,[B2]);}:g2[A10]=function g3(){return V(I2,A10,Array.prototype.slice.call(arguments));}),g2[A10];}}function x(A10,I2,g2){return g2?+(A10>>>0)+4294967296*+(I2>>>0):+(A10>>>0)+4294967296*+(0|I2);}function V(A10,I2,g2){return g2&&g2.length?$["dynCall_"+A10].apply(null,[I2].concat(g2)):$["dynCall_"+A10].call(null,I2);}var p=0,W=0;function _(A10,I2){A10||IE("Assertion failed: "+I2);}function T(A10){var I2=$["_"+A10];return _(I2,"Cannot call unknown function "+A10+", make sure it is exported"),I2;}var v={stackSave:function(){IA();},stackRestore:function(){A9();},arrayToC:function(A10){var I2,g2,B2=A5(A10.length);return I2=A10,g2=B2,E.set(I2,g2),B2;},stringToC:function(A10){var I2=0;if(null!=A10&&0!==A10){var g2=(A10.length<<2)+1;I2=A5(g2),Ai(A10,I2,g2);}return I2;}},O={string:v.stringToC,array:v.arrayToC};function j(A10,I2,g2,B2,E2){var Q2=T(A10),C2=[],i2=0;if(B2)for(var h2=0;h2<B2.length;h2++){var o2=O[g2[h2]];o2?(0===i2&&(i2=IA()),C2[h2]=o2(B2[h2])):C2[h2]=B2[h2];}var G2,D2=Q2.apply(null,C2);return D2=(G2=D2,"string"===I2?Ag(G2):"boolean"===I2?Boolean(G2):G2),0!==i2&&A9(i2),D2;}function P(A10,I2,g2,B2){switch("*"===(g2=g2||"i8").charAt(g2.length-1)&&(g2="i32"),g2){case"i1":case"i8":E[A10>>0]=I2;break;case"i16":C[A10>>1]=I2;break;case"i32":h[A10>>2]=I2;break;case"i64":tempI64=[I2>>>0,+Ax(tempDouble=I2)>=1?tempDouble>0?(0|Ap(+A6(tempDouble/4294967296),4294967295))>>>0:~~+AV((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0],h[A10>>2]=tempI64[0],h[A10+4>>2]=tempI64[1];break;case"float":G[A10>>2]=I2;break;case"double":D[A10>>3]=I2;break;default:IE("invalid type for setValue: "+g2);}}function z(A10,I2,g2){switch("*"===(I2=I2||"i8").charAt(I2.length-1)&&(I2="i32"),I2){case"i1":case"i8":return E[A10>>0];case"i16":return C[A10>>1];case"i32":case"i64":return h[A10>>2];case"float":return G[A10>>2];case"double":return D[A10>>3];default:IE("invalid type for getValue: "+I2);}return null;}function AA(A10,I2,g2,B2){"number"==typeof A10?(i2=true,o2=A10):(i2=false,o2=A10.length);var C2="string"==typeof I2?I2:null;if(G2=4==g2?B2:["function"==typeof A8?A8:L,A5,L,M][void 0===g2?2:g2](Math.max(o2,C2?1:I2.length)),i2){for(B2=G2,_((3&G2)==0),D2=G2+(-4&o2);B2<D2;B2+=4)h[B2>>2]=0;for(D2=G2+o2;B2<D2;)E[B2++>>0]=0;return G2;}if("i8"===C2)return A10.subarray||A10.slice?Q.set(A10,G2):Q.set(new Uint8Array(A10),G2),G2;for(var i2,o2,G2,D2,a2,S2,F2,R2=0;R2<o2;){var s2=A10[R2];if(0===(a2=C2||I2[R2])){R2++;continue;}"i64"==a2&&(a2="i32"),P(G2+R2,s2,a2),F2!==a2&&(S2=q(a2),F2=a2),R2+=S2;}return G2;}function AI(A10){return F?A0?A8(A10):M(A10):L(A10);}function Ag(A10,I2){if(0===I2||!A10)return"";for(var g2,B2,E2,C2=0,i2=0;C2|=B2=Q[A10+i2>>0],(0!=B2||I2)&&(i2++,!I2||i2!=I2););I2||(I2=i2);var h2="";if(C2<128){for(;I2>0;)E2=String.fromCharCode.apply(String,Q.subarray(A10,A10+Math.min(I2,1024))),h2=h2?h2+E2:E2,A10+=1024,I2-=1024;return h2;}return g2=A10,function A11(I3,g3){for(var B3=g3;I3[B3];)++B3;if(B3-g3>16&&I3.subarray&&AQ)return AQ.decode(I3.subarray(g3,B3));for(var E3,Q2,C3,i3,h3,o2,G2="";;){if(!(E3=I3[g3++]))return G2;if(!(128&E3)){G2+=String.fromCharCode(E3);continue;}if(Q2=63&I3[g3++],(224&E3)==192){G2+=String.fromCharCode((31&E3)<<6|Q2);continue;}if(C3=63&I3[g3++],(240&E3)==224?E3=(15&E3)<<12|Q2<<6|C3:(i3=63&I3[g3++],(248&E3)==240?E3=(7&E3)<<18|Q2<<12|C3<<6|i3:(h3=63&I3[g3++],E3=(252&E3)==248?(3&E3)<<24|Q2<<18|C3<<12|i3<<6|h3:(1&E3)<<30|Q2<<24|C3<<18|i3<<12|h3<<6|(o2=63&I3[g3++]))),E3<65536)G2+=String.fromCharCode(E3);else{var D2=E3-65536;G2+=String.fromCharCode(55296|D2>>10,56320|1023&D2);}}}(Q,g2);}function AB(A10){for(var I2="";;){var g2=E[A10++>>0];if(!g2)return I2;I2+=String.fromCharCode(g2);}}function AE(A10,I2){return function A11(I3,g2,B2){for(var Q2=0;Q2<I3.length;++Q2)E[g2++>>0]=I3.charCodeAt(Q2);B2||(E[g2>>0]=0);}(A10,I2,false);}var AQ="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function AC(A10,I2,g2,B2){if(!(B2>0))return 0;for(var E2=g2,Q2=g2+B2-1,C2=0;C2<A10.length;++C2){var i2=A10.charCodeAt(C2);if(i2>=55296&&i2<=57343&&(i2=65536+((1023&i2)<<10)|1023&A10.charCodeAt(++C2)),i2<=127){if(g2>=Q2)break;I2[g2++]=i2;}else if(i2<=2047){if(g2+1>=Q2)break;I2[g2++]=192|i2>>6,I2[g2++]=128|63&i2;}else if(i2<=65535){if(g2+2>=Q2)break;I2[g2++]=224|i2>>12,I2[g2++]=128|i2>>6&63,I2[g2++]=128|63&i2;}else if(i2<=2097151){if(g2+3>=Q2)break;I2[g2++]=240|i2>>18,I2[g2++]=128|i2>>12&63,I2[g2++]=128|i2>>6&63,I2[g2++]=128|63&i2;}else if(i2<=67108863){if(g2+4>=Q2)break;I2[g2++]=248|i2>>24,I2[g2++]=128|i2>>18&63,I2[g2++]=128|i2>>12&63,I2[g2++]=128|i2>>6&63,I2[g2++]=128|63&i2;}else{if(g2+5>=Q2)break;I2[g2++]=252|i2>>30,I2[g2++]=128|i2>>24&63,I2[g2++]=128|i2>>18&63,I2[g2++]=128|i2>>12&63,I2[g2++]=128|i2>>6&63,I2[g2++]=128|63&i2;}}return I2[g2]=0,g2-E2;}function Ai(A10,I2,g2){return AC(A10,Q,I2,g2);}function Ah(A10){for(var I2=0,g2=0;g2<A10.length;++g2){var B2=A10.charCodeAt(g2);B2>=55296&&B2<=57343&&(B2=65536+((1023&B2)<<10)|1023&A10.charCodeAt(++g2)),B2<=127?++I2:B2<=2047?I2+=2:B2<=65535?I2+=3:B2<=2097151?I2+=4:B2<=67108863?I2+=5:I2+=6;}return I2;}var Ao="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function AG(A10){for(var I2=A10,g2=I2>>1;C[g2];)++g2;if((I2=g2<<1)-A10>32&&Ao)return Ao.decode(Q.subarray(A10,I2));for(var B2=0,E2="";;){var i2=C[A10+2*B2>>1];if(0==i2)return E2;++B2,E2+=String.fromCharCode(i2);}}function AD(A10,I2,g2){if(void 0===g2&&(g2=2147483647),g2<2)return 0;for(var B2=I2,E2=(g2-=2)<2*A10.length?g2/2:A10.length,Q2=0;Q2<E2;++Q2){var i2=A10.charCodeAt(Q2);C[I2>>1]=i2,I2+=2;}return C[I2>>1]=0,I2-B2;}function Aa(A10){return 2*A10.length;}function AS(A10){for(var I2=0,g2="";;){var B2=h[A10+4*I2>>2];if(0==B2)return g2;if(++I2,B2>=65536){var E2=B2-65536;g2+=String.fromCharCode(55296|E2>>10,56320|1023&E2);}else g2+=String.fromCharCode(B2);}}function AF(A10,I2,g2){if(void 0===g2&&(g2=2147483647),g2<4)return 0;for(var B2=I2,E2=B2+g2-4,Q2=0;Q2<A10.length;++Q2){var C2=A10.charCodeAt(Q2);if(C2>=55296&&C2<=57343&&(C2=65536+((1023&C2)<<10)|1023&A10.charCodeAt(++Q2)),h[I2>>2]=C2,(I2+=4)+4>E2)break;}return h[I2>>2]=0,I2-B2;}function AR(A10){for(var I2=0,g2=0;g2<A10.length;++g2){var B2=A10.charCodeAt(g2);B2>=55296&&B2<=57343&&++g2,I2+=4;}return I2;}function As(A10){var I2=Ah(A10)+1,g2=A8(I2);return g2&&AC(A10,E,g2,I2),g2;}function Aw(A10){var I2=Ah(A10)+1,g2=A5(I2);return AC(A10,E,g2,I2),g2;}function Ay(A10){return A10;}function Ac(){var A10,I2=function A11(){var I3=Error();if(!I3.stack){try{throw Error(0);}catch(g2){I3=g2;}if(!I3.stack)return"(no stack trace available)";}return I3.stack.toString();}();return $.extraStackTrace&&(I2+="\n"+$.extraStackTrace()),(A10=I2).replace(/__Z[\w\d_]+/g,function(A11){var I3,g2=I3=A11;return A11===g2?A11:A11+" ["+g2+"]";});}function An(A10,I2){return A10%I2>0&&(A10+=I2-A10%I2),A10;}function AU(A10){$.buffer=B=A10;}function A$(){$.HEAP8=E=new Int8Array(B),$.HEAP16=C=new Int16Array(B),$.HEAP32=h=new Int32Array(B),$.HEAPU8=Q=new Uint8Array(B),$.HEAPU16=i=new Uint16Array(B),$.HEAPU32=o=new Uint32Array(B),$.HEAPF32=G=new Float32Array(B),$.HEAPF64=D=new Float64Array(B);}function Ae(){var A10=$.usingWasm?65536:16777216,I2=2147483648-A10;if(h[c>>2]>I2)return false;var g2=AN;for(AN=Math.max(AN,16777216);AN<h[c>>2];)AN=AN<=536870912?An(2*AN,A10):Math.min(An((3*AN+2147483648)/4,A10),I2);var B2=$.reallocBuffer(AN);return B2&&B2.byteLength==AN?(AU(B2),A$(),true):(AN=g2,false);}a=S=R=s=w=y=c=0,F=false,$.reallocBuffer||($.reallocBuffer=function(A10){try{if(ArrayBuffer.transfer)I2=ArrayBuffer.transfer(B,A10);else{var I2,g2=E;I2=new ArrayBuffer(A10),new Int8Array(I2).set(g2);}}catch(Q2){return false;}return!!Az(I2)&&I2;});try{(n=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get))(new ArrayBuffer(4));}catch(At){n=function(A10){return A10.byteLength;};}var Ak=$.TOTAL_STACK||5242880,AN=$.TOTAL_MEMORY||16777216;function Ar(){return AN;}function AY(A10){for(;A10.length>0;){var I2=A10.shift();if("function"==typeof I2){I2();continue;}var g2=I2.func;"number"==typeof g2?void 0===I2.arg?$.dynCall_v(g2):$.dynCall_vi(g2,I2.arg):g2(void 0===I2.arg?null:I2.arg);}}AN<Ak&&H("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+AN+"! (TOTAL_STACK="+Ak+")"),$.buffer?B=$.buffer:("object"==typeof WebAssembly&&"function"==typeof WebAssembly.Memory?($.wasmMemory=new WebAssembly.Memory({initial:AN/65536}),B=$.wasmMemory.buffer):B=new ArrayBuffer(AN),$.buffer=B),A$();var AJ=[],Af=[],AH=[],AL=[],AM=[],A0=false,Ad=false;function Aq(A10){AJ.unshift(A10);}function AK(A10){Af.unshift(A10);}function Al(A10){AH.unshift(A10);}function Au(A10){AL.unshift(A10);}function Ab(A10){AM.unshift(A10);}function AX(A10,I2,g2){var B2,Q2;K("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!"),g2&&(B2=E[Q2=I2+Ah(A10)]),Ai(A10,I2,1/0),g2&&(E[Q2]=B2);}function Am(A10,I2,g2){return A10>=0?A10:I2<=32?2*Math.abs(1<<I2-1)+A10:Math.pow(2,I2)+A10;}function AZ(A10,I2,g2){if(A10<=0)return A10;var B2=I2<=32?Math.abs(1<<I2-1):Math.pow(2,I2-1);return A10>=B2&&(I2<=32||A10>B2)&&(A10=-2*B2+A10),A10;}var Ax=Math.abs,AV=Math.ceil,A6=Math.floor,Ap=Math.min,A7=0,A1=null,AW=null;function A_(A10){return A10;}$.preloadedImages={},$.preloadedAudios={};var AT="data:application/octet-stream;base64,";function A2(A10){return String.prototype.startsWith?A10.startsWith(AT):0===A10.indexOf(AT);}!function A10(){var I2="main.wast",g2="main.wasm",B2="main.temp.asm";A2(I2)||(I2=J(I2)),A2(g2)||(g2=J(g2)),A2(B2)||(B2=J(B2));var E2={global:null,env:null,asm2wasm:l,parent:$},Q2=null;function C2(A11){return A11;}function i2(){try{if($.wasmBinary)return new Uint8Array($.wasmBinary);if($.readBinary)return $.readBinary(g2);throw"both async and sync fetching of the wasm failed";}catch(A11){IE(A11);}}$.asmPreload=$.asm;var h2=$.reallocBuffer,o2=function(A11){A11=An(A11,$.usingWasm?65536:16777216);var I3=$.buffer.byteLength;if($.usingWasm)try{var g3=$.wasmMemory.grow((A11-I3)/65536);if(-1!==g3)return $.buffer=$.wasmMemory.buffer;return null;}catch(B3){return null;}};$.reallocBuffer=function(A11){return"asmjs"===G2?h2(A11):o2(A11);};var G2="";$.asm=function(A11,I3,B3){var C3;if(!(I3=C3=I3).table){var h3,o3=$.wasmTableSize;void 0===o3&&(o3=1024);var G3=$.wasmMaxTableSize;"object"==typeof WebAssembly&&"function"==typeof WebAssembly.Table?void 0!==G3?I3.table=new WebAssembly.Table({initial:o3,maximum:G3,element:"anyfunc"}):I3.table=new WebAssembly.Table({initial:o3,element:"anyfunc"}):I3.table=Array(o3),$.wasmTable=I3.table;}return I3.memoryBase||(I3.memoryBase=$.STATIC_BASE),I3.tableBase||(I3.tableBase=0),h3=function A12(I4,B4,C4){if("object"!=typeof WebAssembly)return H("no native wasm support detected"),false;if(!($.wasmMemory instanceof WebAssembly.Memory))return H("no native wasm Memory in use"),false;function h4(A13,I5){if((Q2=A13.exports).memory){var g3,B5,E3;g3=Q2.memory,B5=$.buffer,g3.byteLength<B5.byteLength&&H("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here"),E3=new Int8Array(B5),new Int8Array(g3).set(E3),AU(g3),A$();}$.asm=Q2,$.usingWasm=true,function A14(I6){if(A7--,$.monitorRunDependencies&&$.monitorRunDependencies(A7),0==A7&&(null!==A1&&(clearInterval(A1),A1=null),AW)){var g4=AW;AW=null,g4();}}("wasm-instantiate");}B4.memory=$.wasmMemory,E2.global={NaN:NaN,Infinity:1/0},E2["global.Math"]=Math,E2.env=B4;if(A7++,$.monitorRunDependencies&&$.monitorRunDependencies(A7),$.instantiateWasm)try{return $.instantiateWasm(E2,h4);}catch(o4){return H("Module.instantiateWasm callback failed with error: "+o4),false;}function G4(A13){h4(A13.instance,A13.module);}function D2(A13){(!$.wasmBinary&&(t||k)&&"function"==typeof fetch?fetch(g2,{credentials:"same-origin"}).then(function(A14){if(!A14.ok)throw"failed to load wasm binary file at '"+g2+"'";return A14.arrayBuffer();}).catch(function(){return i2();}):new Promise(function(A14,I5){A14(i2());})).then(function(A14){return WebAssembly.instantiate(A14,E2);}).then(A13).catch(function(A14){H("failed to asynchronously prepare wasm: "+A14),IE(A14);});}return $.wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||A2(g2)||"function"!=typeof fetch?D2(G4):WebAssembly.instantiateStreaming(fetch(g2,{credentials:"same-origin"}),E2).then(G4).catch(function(A13){H("wasm streaming compile failed: "+A13),H("falling back to ArrayBuffer instantiation"),D2(G4);}),{};}(A11,I3,B3),_(h3,"no binaryen method succeeded."),h3;},$.asm;}(),S=(a=1024)+4816,Af.push(),$.STATIC_BASE=a,$.STATIC_BUMP=4816;var Av=S;function AO(A10){E[Av]=E[A10],E[Av+1]=E[A10+1],E[Av+2]=E[A10+2],E[Av+3]=E[A10+3];}function Aj(A10){E[Av]=E[A10],E[Av+1]=E[A10+1],E[Av+2]=E[A10+2],E[Av+3]=E[A10+3],E[Av+4]=E[A10+4],E[Av+5]=E[A10+5],E[Av+6]=E[A10+6],E[Av+7]=E[A10+7];}function AP(A10,I2,g2){var B2=g2>0?g2:Ah(A10)+1,E2=Array(B2),Q2=AC(A10,E2,0,E2.length);return I2&&(E2.length=Q2),E2;}function A4(A10){for(var I2=[],g2=0;g2<A10.length;g2++){var B2=A10[g2];B2>255&&(B2&=255),I2.push(String.fromCharCode(B2));}return I2.join("");}S+=16,c=L(4),w=(R=s=d(S))+Ak,y=d(w),h[c>>2]=y,F=true,$.wasmTableSize=4,$.wasmMaxTableSize=4,$.asmGlobalArg={},$.asmLibraryArg={abort:IE,assert:_,enlargeMemory:Ae,getTotalMemory:Ar,abortOnCannotGrowMemory:function A10(){IE("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+AN+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");},invoke_iii:function A10(I2,g2,B2){var E2=IA();try{return $.dynCall_iii(I2,g2,B2);}catch(Q2){if(A9(E2),"number"!=typeof Q2&&"longjmp"!==Q2)throw Q2;$.setThrew(1,0);}},___assert_fail:function A10(I2,g2,B2,E2){IE("Assertion failed: "+Ag(I2)+", at: "+[g2?Ag(g2):"unknown filename",B2,E2?Ag(E2):"unknown function"]);},___setErrNo:function A10(I2){return $.___errno_location&&(h[$.___errno_location()>>2]=I2),I2;},_abort:function A10(){$.abort();},_emscripten_memcpy_big:function A10(I2,g2,B2){return Q.set(Q.subarray(g2,g2+B2),I2),I2;},_llvm_floor_f64:A6,DYNAMICTOP_PTR:c,tempDoublePtr:Av,ABORT:p,STACKTOP:s,STACK_MAX:w};var A3=$.asm($.asmGlobalArg,$.asmLibraryArg,B);$.asm=A3,$.___errno_location=function(){return $.asm.___errno_location.apply(null,arguments);};var Az=$._emscripten_replace_memory=function(){return $.asm._emscripten_replace_memory.apply(null,arguments);};$._free=function(){return $.asm._free.apply(null,arguments);};var A8=$._malloc=function(){return $.asm._malloc.apply(null,arguments);};$._memcpy=function(){return $.asm._memcpy.apply(null,arguments);},$._memset=function(){return $.asm._memset.apply(null,arguments);},$._sbrk=function(){return $.asm._sbrk.apply(null,arguments);},$._stb_vorbis_js_channels=function(){return $.asm._stb_vorbis_js_channels.apply(null,arguments);},$._stb_vorbis_js_close=function(){return $.asm._stb_vorbis_js_close.apply(null,arguments);},$._stb_vorbis_js_decode=function(){return $.asm._stb_vorbis_js_decode.apply(null,arguments);},$._stb_vorbis_js_open=function(){return $.asm._stb_vorbis_js_open.apply(null,arguments);},$._stb_vorbis_js_sample_rate=function(){return $.asm._stb_vorbis_js_sample_rate.apply(null,arguments);},$.establishStackSpace=function(){return $.asm.establishStackSpace.apply(null,arguments);},$.getTempRet0=function(){return $.asm.getTempRet0.apply(null,arguments);},$.runPostSets=function(){return $.asm.runPostSets.apply(null,arguments);},$.setTempRet0=function(){return $.asm.setTempRet0.apply(null,arguments);},$.setThrew=function(){return $.asm.setThrew.apply(null,arguments);};var A5=$.stackAlloc=function(){return $.asm.stackAlloc.apply(null,arguments);},A9=$.stackRestore=function(){return $.asm.stackRestore.apply(null,arguments);},IA=$.stackSave=function(){return $.asm.stackSave.apply(null,arguments);};function II(A10){this.name="ExitStatus",this.message="Program terminated with exit("+A10+")",this.status=A10;}function Ig(A10){if(A10=A10||$.arguments,!(A7>0))!function A11(){if($.preRun)for("function"==typeof $.preRun&&($.preRun=[$.preRun]);$.preRun.length;)Aq($.preRun.shift());AY(AJ);}(),!(A7>0)&&($.calledRun||($.setStatus?($.setStatus("Running..."),setTimeout(function(){setTimeout(function(){$.setStatus("");},1),I2();},1)):I2()));function I2(){!$.calledRun&&($.calledRun=true,p||(A0||(A0=true,AY(Af)),AY(AH),$.onRuntimeInitialized&&$.onRuntimeInitialized(),function A11(){if($.postRun)for("function"==typeof $.postRun&&($.postRun=[$.postRun]);$.postRun.length;)Ab($.postRun.shift());AY(AM);}()));}}function IB(A10,I2){(!I2||!$.noExitRuntime||0!==A10)&&($.noExitRuntime||(p=true,W=A10,s=U,AY(AL),Ad=true,$.onExit&&$.onExit(A10)),$.quit(A10,new II(A10)));}function IE(A10){throw $.onAbort&&$.onAbort(A10),void 0!==A10?(f(A10),H(A10),A10=JSON.stringify(A10)):A10="",p=true,W=1,"abort("+A10+"). Build with -s ASSERTIONS=1 for more info.";}if($.dynCall_iii=function(){return $.asm.dynCall_iii.apply(null,arguments);},$.asm=A3,$.ccall=j,$.cwrap=function A10(I2,g2,B2,E2){var Q2=(B2=B2||[]).every(function(A11){return"number"===A11;});return"string"!==g2&&Q2&&!E2?T(I2):function(){return j(I2,g2,B2,arguments,E2);};},II.prototype=Error(),II.prototype.constructor=II,AW=function A10(){$.calledRun||Ig(),$.calledRun||(AW=A10);},$.run=Ig,$.abort=IE,$.preInit)for("function"==typeof $.preInit&&($.preInit=[$.preInit]);$.preInit.length>0;)$.preInit.pop()();$.noExitRuntime=true,Ig(),$.onRuntimeInitialized=()=>{isReady=true,readySolver();},stbvorbis.decode=function(A10){return function A11(I2){if(!isReady)throw Error("SF3 decoder has not been initialized yet. Did you await synth.isReady?");var g2={};function B2(A12){return new Int32Array($.HEAPU8.buffer,A12,1)[0];}function E2(A12,I3){var g3=new ArrayBuffer(I3*Float32Array.BYTES_PER_ELEMENT),B3=new Float32Array(g3);return B3.set(new Float32Array($.HEAPU8.buffer,A12,I3)),B3;}g2.open=$.cwrap("stb_vorbis_js_open","number",[]),g2.close=$.cwrap("stb_vorbis_js_close","void",["number"]),g2.channels=$.cwrap("stb_vorbis_js_channels","number",["number"]),g2.sampleRate=$.cwrap("stb_vorbis_js_sample_rate","number",["number"]),g2.decode=$.cwrap("stb_vorbis_js_decode","number",["number","number","number","number","number"]);var Q2,C2,i2,h2,o2=g2.open(),G2=(Q2=I2,C2=I2.byteLength,i2=$._malloc(C2),(h2=new Uint8Array($.HEAPU8.buffer,i2,C2)).set(new Uint8Array(Q2,0,C2)),h2),D2=$._malloc(4),a2=$._malloc(4),S2=g2.decode(o2,G2.byteOffset,G2.byteLength,D2,a2);if($._free(G2.byteOffset),S2<0)throw g2.close(o2),$._free(D2),Error("stbvorbis decode failed: "+S2);for(var F2=g2.channels(o2),R2=Array(F2),s2=new Int32Array($.HEAPU32.buffer,B2(D2),F2),w2=0;w2<F2;w2++)R2[w2]=E2(s2[w2],S2),$._free(s2[w2]);var y2=g2.sampleRate(o2);return g2.close(o2),$._free(B2(D2)),$._free(D2),{data:R2,sampleRate:y2,eof:true,error:null};}(A10);};}();var stb=stbvorbis;var MIN_TIMECENT=-15e3;var MAX_TIMECENT=15e3;var timecentLookupTable=new Float32Array(MAX_TIMECENT-MIN_TIMECENT+1);for(let i=0;i<timecentLookupTable.length;i++){const timecents=MIN_TIMECENT+i;timecentLookupTable[i]=Math.pow(2,timecents/1200);}function timecentsToSeconds(timecents){if(timecents<=-32767){return 0;}return timecentLookupTable[timecents-MIN_TIMECENT];}var MIN_ABS_CENT=-2e4;var MAX_ABS_CENT=16500;var absoluteCentLookupTable=new Float32Array(MAX_ABS_CENT-MIN_ABS_CENT+1);for(let i=0;i<absoluteCentLookupTable.length;i++){const absoluteCents=MIN_ABS_CENT+i;absoluteCentLookupTable[i]=440*Math.pow(2,(absoluteCents-6900)/1200);}function absCentsToHz(cents){if(cents<MIN_ABS_CENT||cents>MAX_ABS_CENT){return 440*Math.pow(2,(cents-6900)/1200);}return absoluteCentLookupTable[~~cents-MIN_ABS_CENT];}var MIN_DECIBELS=-1660;var MAX_DECIBELS=1600;var decibelLookUpTable=new Float32Array((MAX_DECIBELS-MIN_DECIBELS)*100+1);for(let i=0;i<decibelLookUpTable.length;i++){const decibels=(MIN_DECIBELS*100+i)/100;decibelLookUpTable[i]=Math.pow(10,-decibels/20);}function decibelAttenuationToGain(decibels){return decibelLookUpTable[Math.floor((decibels-MIN_DECIBELS)*100)];}var VOLUME_ENVELOPE_SMOOTHING_FACTOR=0.01;var DB_SILENCE=100;var PERCEIVED_DB_SILENCE=90;var PERCEIVED_GAIN_SILENCE=15e-6;var VolumeEnvelope=class _VolumeEnvelope{/**
     * The sample rate in Hz.
     */sampleRate;/**
     * The current attenuation of the envelope in dB.
     */currentAttenuationDb=DB_SILENCE;/**
     * The current stage of the volume envelope.
     */state=0;/**
     * The voice's absolute attenuation as linear gain.
     */attenuation=0;/**
     * The attenuation target, which the "attenuation" property is linearly interpolated towards (gain).
     */attenuationTargetGain=0;/**
     * The envelope's current time in samples.
     */currentSampleTime=0;/**
     * The dB attenuation of the envelope when it entered the release stage.
     */releaseStartDb=DB_SILENCE;/**
     * The time in samples relative to the start of the envelope.
     */releaseStartTimeSamples=0;/**
     * The current gain applied to the voice in the release stage.
     */currentReleaseGain=1;/**
     * The attack duration in samples.
     */attackDuration=0;/**
     * The decay duration in samples.
     */decayDuration=0;/**
     * The release duration in samples.
     */releaseDuration=0;/**
     * The attenuation target, which the "attenuation" property is linearly interpolated towards (dB).
     */attenuationTarget=0;/**
     * The voice's sustain amount in dB, relative to attenuation.
     */sustainDbRelative=0;/**
     * The time in samples to the end of delay stage, relative to the start of the envelope.
     */delayEnd=0;/**
     * The time in samples to the end of attack stage, relative to the start of the envelope.
     */attackEnd=0;/**
     * The time in samples to the end of hold stage, relative to the start of the envelope.
     */holdEnd=0;/**
     * The time in samples to the end of decay stage, relative to the start of the envelope.
     */decayEnd=0;/**
     * If sustain stage is silent,
     * then we can turn off the voice when it is silent.
     * We can't do that with modulated as it can silence the volume and then raise it again, and the voice must keep playing.
     */canEndOnSilentSustain;/**
     * @param sampleRate Hz
     * @param initialDecay cb
     */constructor(sampleRate,initialDecay){this.sampleRate=sampleRate;this.canEndOnSilentSustain=initialDecay/10>=PERCEIVED_DB_SILENCE;}/**
     * Starts the release phase in the envelope.
     * @param voice the voice this envelope belongs to.
     */static startRelease(voice){voice.volumeEnvelope.releaseStartTimeSamples=voice.volumeEnvelope.currentSampleTime;voice.volumeEnvelope.currentReleaseGain=decibelAttenuationToGain(voice.volumeEnvelope.currentAttenuationDb);_VolumeEnvelope.recalculate(voice);}/**
     * Recalculates the envelope
     * @param voice the voice this envelope belongs to
     */static recalculate(voice){const env=voice.volumeEnvelope;const timecentsToSamples=tc=>{return Math.max(0,Math.floor(timecentsToSeconds(tc)*env.sampleRate));};env.attenuationTarget=Math.max(0,Math.min(voice.modulatedGenerators[generatorTypes.initialAttenuation],1440))/10;env.attenuationTargetGain=decibelAttenuationToGain(env.attenuationTarget);env.sustainDbRelative=Math.min(DB_SILENCE,voice.modulatedGenerators[generatorTypes.sustainVolEnv]/10);const sustainDb=Math.min(DB_SILENCE,env.sustainDbRelative);env.attackDuration=timecentsToSamples(voice.modulatedGenerators[generatorTypes.attackVolEnv]);const fullChange=voice.modulatedGenerators[generatorTypes.decayVolEnv];const keyNumAddition=(60-voice.targetKey)*voice.modulatedGenerators[generatorTypes.keyNumToVolEnvDecay];const fraction=sustainDb/DB_SILENCE;env.decayDuration=timecentsToSamples(fullChange+keyNumAddition)*fraction;env.releaseDuration=timecentsToSamples(Math.max(-7200,voice.modulatedGenerators[generatorTypes.releaseVolEnv]));env.delayEnd=timecentsToSamples(voice.modulatedGenerators[generatorTypes.delayVolEnv]);env.attackEnd=env.attackDuration+env.delayEnd;const holdExcursion=(60-voice.targetKey)*voice.modulatedGenerators[generatorTypes.keyNumToVolEnvHold];env.holdEnd=timecentsToSamples(voice.modulatedGenerators[generatorTypes.holdVolEnv]+holdExcursion)+env.attackEnd;env.decayEnd=env.decayDuration+env.holdEnd;if(env.state===0&&env.attackEnd===0){env.state=2;}if(voice.isInRelease){const sustainDb2=Math.max(0,Math.min(DB_SILENCE,env.sustainDbRelative));const fraction2=sustainDb2/DB_SILENCE;env.decayDuration=timecentsToSamples(fullChange+keyNumAddition)*fraction2;switch(env.state){case 0:env.releaseStartDb=DB_SILENCE;break;case 1:{const elapsed=1-(env.attackEnd-env.releaseStartTimeSamples)/env.attackDuration;env.releaseStartDb=20*Math.log10(elapsed)*-1;break;}case 2:env.releaseStartDb=0;break;case 3:env.releaseStartDb=(1-(env.decayEnd-env.releaseStartTimeSamples)/env.decayDuration)*sustainDb2;break;case 4:env.releaseStartDb=sustainDb2;break;}env.releaseStartDb=Math.max(0,Math.min(env.releaseStartDb,DB_SILENCE));if(env.releaseStartDb>=PERCEIVED_DB_SILENCE){voice.finished=true;}env.currentReleaseGain=decibelAttenuationToGain(env.releaseStartDb);const releaseFraction=(DB_SILENCE-env.releaseStartDb)/DB_SILENCE;env.releaseDuration*=releaseFraction;}}/**
     * Applies volume envelope gain to the given output buffer.
     * Essentially we use approach of 100dB is silence, 0dB is peak, and always add attenuation to that (which is interpolated).
     * @param voice the voice we're working on
     * @param audioBuffer the audio buffer to modify
     * @param centibelOffset the centibel offset of volume, for modLFOtoVolume
     * @param smoothingFactor the adjusted smoothing factor for the envelope
     */static apply(voice,audioBuffer,centibelOffset,smoothingFactor){const env=voice.volumeEnvelope;const decibelOffset=centibelOffset/10;const attenuationSmoothing=smoothingFactor;if(voice.isInRelease){let elapsedRelease=env.currentSampleTime-env.releaseStartTimeSamples;if(elapsedRelease>=env.releaseDuration){for(let i=0;i<audioBuffer.length;i++){audioBuffer[i]=0;}voice.finished=true;return;}const dbDifference=DB_SILENCE-env.releaseStartDb;for(let i=0;i<audioBuffer.length;i++){env.attenuation+=(env.attenuationTargetGain-env.attenuation)*attenuationSmoothing;const db=elapsedRelease/env.releaseDuration*dbDifference+env.releaseStartDb;env.currentReleaseGain=env.attenuation*decibelAttenuationToGain(db+decibelOffset);audioBuffer[i]*=env.currentReleaseGain;env.currentSampleTime++;elapsedRelease++;}if(env.currentReleaseGain<=PERCEIVED_GAIN_SILENCE){voice.finished=true;}return;}let filledBuffer=0;switch(env.state){case 0:while(env.currentSampleTime<env.delayEnd){env.currentAttenuationDb=DB_SILENCE;audioBuffer[filledBuffer]=0;env.currentSampleTime++;if(++filledBuffer>=audioBuffer.length){return;}}env.state++;// Fallthrough
case 1:while(env.currentSampleTime<env.attackEnd){env.attenuation+=(env.attenuationTargetGain-env.attenuation)*attenuationSmoothing;const linearAttenuation=1-(env.attackEnd-env.currentSampleTime)/env.attackDuration;audioBuffer[filledBuffer]*=linearAttenuation*env.attenuation*decibelAttenuationToGain(decibelOffset);env.currentAttenuationDb=0;env.currentSampleTime++;if(++filledBuffer>=audioBuffer.length){return;}}env.state++;// Fallthrough
case 2:while(env.currentSampleTime<env.holdEnd){env.attenuation+=(env.attenuationTargetGain-env.attenuation)*attenuationSmoothing;audioBuffer[filledBuffer]*=env.attenuation*decibelAttenuationToGain(decibelOffset);env.currentAttenuationDb=0;env.currentSampleTime++;if(++filledBuffer>=audioBuffer.length){return;}}env.state++;// Fallthrough
case 3:while(env.currentSampleTime<env.decayEnd){env.attenuation+=(env.attenuationTargetGain-env.attenuation)*attenuationSmoothing;env.currentAttenuationDb=(1-(env.decayEnd-env.currentSampleTime)/env.decayDuration)*env.sustainDbRelative;audioBuffer[filledBuffer]*=env.attenuation*decibelAttenuationToGain(env.currentAttenuationDb+decibelOffset);env.currentSampleTime++;if(++filledBuffer>=audioBuffer.length){return;}}env.state++;// Fallthrough
case 4:if(env.canEndOnSilentSustain&&env.sustainDbRelative>=PERCEIVED_DB_SILENCE){voice.finished=true;}while(true){env.attenuation+=(env.attenuationTargetGain-env.attenuation)*attenuationSmoothing;audioBuffer[filledBuffer]*=env.attenuation*decibelAttenuationToGain(env.sustainDbRelative+decibelOffset);env.currentAttenuationDb=env.sustainDbRelative;env.currentSampleTime++;if(++filledBuffer>=audioBuffer.length){return;}}}}};function setMasterParameterInternal(parameter,value){this.privateProps.masterParameters[parameter]=value;switch(parameter){case"masterPan":{let pan=value;pan=pan/2+0.5;this.privateProps.panLeft=1-pan;this.privateProps.panRight=pan;break;}case"masterGain":break;case"voiceCap":break;case"interpolationType":break;case"midiSystem":break;case"monophonicRetriggerMode":break;case"transposition":{const semitones=value;this.privateProps.masterParameters.transposition=0;for(const item of this.midiChannels){item.transposeChannel(semitones);}this.privateProps.masterParameters.transposition=semitones;}}this.callEvent("masterParameterChange",{parameter,value});}function getMasterParameterInternal(type){return this.privateProps.masterParameters[type];}function getAllMasterParametersInternal(){return{...this.privateProps.masterParameters};}function bitMaskToBool(num,bit){return(num>>bit&1)>0;}function toNumericBool(bool){return bool?1:0;}var MODULATOR_RESOLUTION=16384;var MOD_CURVE_TYPES_AMOUNT=Object.keys(modulatorCurveTypes).length;var MOD_SOURCE_TRANSFORM_POSSIBILITIES=4;var concave=new Float32Array(MODULATOR_RESOLUTION+1);var convex=new Float32Array(MODULATOR_RESOLUTION+1);concave[0]=0;concave[concave.length-1]=1;convex[0]=0;convex[convex.length-1]=1;for(let i=1;i<MODULATOR_RESOLUTION-1;i++){const x=-200*2/960*Math.log(i/(concave.length-1))/Math.LN10;convex[i]=1-x;concave[concave.length-1-i]=x;}function getModulatorCurveValue(transformType,curveType,value){const isBipolar=!!(transformType&2);const isNegative=!!(transformType&1);if(isNegative){value=1-value;}switch(curveType){case modulatorCurveTypes.linear:if(isBipolar){return value*2-1;}return value;case modulatorCurveTypes.switch:value=value>0.5?1:0;if(isBipolar){return value*2-1;}return value;case modulatorCurveTypes.concave:if(isBipolar){value=value*2-1;if(value<0){return-concave[~~(value*-MODULATOR_RESOLUTION)];}return concave[~~(value*MODULATOR_RESOLUTION)];}return concave[~~(value*MODULATOR_RESOLUTION)];case modulatorCurveTypes.convex:if(isBipolar){value=value*2-1;if(value<0){return-convex[~~(value*-MODULATOR_RESOLUTION)];}return convex[~~(value*MODULATOR_RESOLUTION)];}return convex[~~(value*MODULATOR_RESOLUTION)];}}var ModulatorSource=class _ModulatorSource{/**
     * If this field is set to false, the controller should be mapped with a minimum value of 0 and a maximum value of 1. This is also
     * called Unipolar. Thus, it behaves similar to the Modulation Wheel controller of the MIDI specification.
     *
     * If this field is set to true, the controller sound be mapped with a minimum value of -1 and a maximum value of 1. This is also
     * called Bipolar. Thus, it behaves similar to the Pitch Wheel controller of the MIDI specification.
     */isBipolar;/**
     * If this field is set true, the direction of the controller should be from the maximum value to the minimum value. So, for
     * example, if the controller source is Key Number, then a Key Number value of 0 corresponds to the maximum possible
     * controller output, and the Key Number value of 127 corresponds to the minimum possible controller input.
     */isNegative;/**
     * The index of the source.
     * It can point to one of the MIDI controllers or one of the predefined sources, depending on the 'isCC' flag.
     */index;/**
     * If this field is set to true, the MIDI Controller Palette is selected. The ‘index’ field value corresponds to one of the 128
     * MIDI Continuous Controller messages as defined in the MIDI specification.
     */isCC;/**
     * This field specifies how the minimum value approaches the maximum value.
     */curveType;constructor(index=modulatorSources.noController,curveType=modulatorCurveTypes.linear,isCC=false,isBipolar=false,isNegative=false){this.isBipolar=isBipolar;this.isNegative=isNegative;this.index=index;this.isCC=isCC;this.curveType=curveType;}get sourceName(){return this.isCC?Object.keys(midiControllers).find(k=>midiControllers[k]===this.index)??this.index.toString():Object.keys(modulatorSources).find(k=>modulatorSources[k]===this.index)??this.index.toString();}get curveTypeName(){return Object.keys(modulatorCurveTypes).find(k=>modulatorCurveTypes[k]===this.curveType)??this.curveType.toString();}static fromSourceEnum(sourceEnum){const isBipolar=bitMaskToBool(sourceEnum,9);const isNegative=bitMaskToBool(sourceEnum,8);const isCC=bitMaskToBool(sourceEnum,7);const index=sourceEnum&127;const curveType=sourceEnum>>10&3;return new _ModulatorSource(index,curveType,isCC,isBipolar,isNegative);}/**
     * Copies the modulator source.
     * @param source The source to copy from.
     * @returns the copied source.
     */static copyFrom(source){return new _ModulatorSource(source.index,source.curveType,source.isCC,source.isBipolar,source.isNegative);}toString(){return`${this.sourceName} ${this.curveTypeName} ${this.isBipolar?"bipolar":"unipolar"} ${this.isNegative?"negative":"positive"}`;}toSourceEnum(){return this.curveType<<10|toNumericBool(this.isBipolar)<<9|toNumericBool(this.isNegative)<<8|toNumericBool(this.isCC)<<7|this.index;}isIdentical(source){return this.index===source.index&&this.isNegative===source.isNegative&&this.isCC===source.isCC&&this.isBipolar===source.isBipolar&&this.curveType===source.curveType;}/**
     * Gets the current value from this source.
     * @param midiControllers The MIDI controller + modulator source array.
     * @param voice The voice to get the data for.
     */getValue(midiControllers2,voice){let rawValue;if(this.isCC){rawValue=midiControllers2[this.index];}else{switch(this.index){case modulatorSources.noController:rawValue=16383;break;case modulatorSources.noteOnKeyNum:rawValue=voice.midiNote<<7;break;case modulatorSources.noteOnVelocity:rawValue=voice.velocity<<7;break;case modulatorSources.polyPressure:rawValue=voice.pressure<<7;break;default:rawValue=midiControllers2[this.index+NON_CC_INDEX_OFFSET];break;}}const transformType=(this.isBipolar?2:0)|(this.isNegative?1:0);return precomputedTransforms[MODULATOR_RESOLUTION*(this.curveType*MOD_CURVE_TYPES_AMOUNT+transformType)+rawValue];}};var precomputedTransforms=new Float32Array(MODULATOR_RESOLUTION*MOD_SOURCE_TRANSFORM_POSSIBILITIES*MOD_CURVE_TYPES_AMOUNT);for(let curveType=0;curveType<MOD_CURVE_TYPES_AMOUNT;curveType++){for(let transformType=0;transformType<MOD_SOURCE_TRANSFORM_POSSIBILITIES;transformType++){const tableIndex=MODULATOR_RESOLUTION*(curveType*MOD_CURVE_TYPES_AMOUNT+transformType);for(let value=0;value<MODULATOR_RESOLUTION;value++){precomputedTransforms[tableIndex+value]=getModulatorCurveValue(transformType,curveType,value/MODULATOR_RESOLUTION);}}}var MOD_BYTE_SIZE=10;function getModSourceEnum(curveType,isBipolar,isNegative,isCC,index){return new ModulatorSource(index,curveType,isCC,isBipolar,isNegative).toSourceEnum();}var defaultResonantModSource=getModSourceEnum(modulatorCurveTypes.linear,true,false,true,midiControllers.filterResonance);var Modulator=class _Modulator{/**
     * The current computed value of this modulator. Only used in the synthesis engine for local voices.
     */currentValue=0;/**
     * The generator destination of this modulator.
     */destination=generatorTypes.initialAttenuation;/**
     * The transform amount for this modulator.
     */transformAmount=0;/**
     * The transform type for this modulator.
     */transformType=0;/**
     * Indicates if the given modulator is chorus or reverb effects modulator.
     * This is done to simulate BASSMIDI effects behavior:
     * - defaults to 1000 transform amount rather than 200
     * - values can be changed, but anything above 200 is 1000
     * (except for values above 1000, they are copied directly)
     * - all values below are multiplied by 5 (200 * 5 = 1000)
     * - still can be disabled if the soundfont has its own modulator curve
     * - this fixes the very low amount of reverb by default and doesn't break soundfonts
     */isEffectModulator=false;/**
     * The default resonant modulator does not affect the filter gain.
     * Neither XG nor GS responded to cc #74 in that way.
     */isDefaultResonantModulator=false;/**
     * The primary source of this modulator.
     */primarySource;/**
     * The secondary source of this modulator.
     */secondarySource;/**
     * Creates a new SF2 Modulator
     */constructor(primarySource=new ModulatorSource(),secondarySource=new ModulatorSource(),destination=generatorTypes.INVALID,amount=0,transformType=0,isEffectModulator=false,isDefaultResonantModulator=false){this.primarySource=primarySource;this.secondarySource=secondarySource;this.destination=destination;this.transformAmount=amount;this.transformType=transformType;this.isEffectModulator=isEffectModulator;this.isDefaultResonantModulator=isDefaultResonantModulator;}get destinationName(){return Object.keys(generatorTypes).find(k=>generatorTypes[k]===this.destination);}/**
     * Checks if the pair of modulators is identical (in SF2 terms)
     * @param mod1 modulator 1
     * @param mod2 modulator 2
     * @param checkAmount if the amount should be checked too.
     * @returns if they are identical
     */static isIdentical(mod1,mod2,checkAmount=false){return mod1.primarySource.isIdentical(mod2.primarySource)&&mod1.secondarySource.isIdentical(mod2.secondarySource)&&mod1.destination===mod2.destination&&mod1.transformType===mod2.transformType&&(!checkAmount||mod1.transformAmount===mod2.transformAmount);}/**
     * Copies a modulator.
     * @param mod The modulator to copy.
     * @returns The copied modulator.
     */static copyFrom(mod){return new _Modulator(ModulatorSource.copyFrom(mod.primarySource),ModulatorSource.copyFrom(mod.secondarySource),mod.destination,mod.transformAmount,mod.transformType,mod.isEffectModulator,mod.isDefaultResonantModulator);}toString(){return`Source: ${this.primarySource.toString()}
Secondary source: ${this.secondarySource.toString()}
to: ${this.destinationName}
amount: ${this.transformAmount}`+(this.transformType===2?"absolute value":"");}write(modData,indexes){writeWord(modData,this.primarySource.toSourceEnum());writeWord(modData,this.destination);writeWord(modData,this.transformAmount);writeWord(modData,this.secondarySource.toSourceEnum());writeWord(modData,this.transformType);if(!indexes){return;}indexes.mod++;}/**
     * Sums transform and create a NEW modulator
     * @param modulator the modulator to sum with
     * @returns the new modulator
     */sumTransform(modulator){const m=_Modulator.copyFrom(this);m.transformAmount+=modulator.transformAmount;return m;}};var DecodedModulator=class extends Modulator{/**
     * Reads an SF2 modulator
     * @param sourceEnum SF2 source enum
     * @param secondarySourceEnum SF2 secondary source enum
     * @param destination destination
     * @param amount amount
     * @param transformType transform type
     */constructor(sourceEnum,secondarySourceEnum,destination,amount,transformType){const isEffectModulator=(sourceEnum===219||sourceEnum===221)&&secondarySourceEnum===0&&(destination===generatorTypes.reverbEffectsSend||destination===generatorTypes.chorusEffectsSend);const isDefaultResonantModulator=sourceEnum===defaultResonantModSource&&secondarySourceEnum===0&&destination===generatorTypes.initialFilterQ;super(ModulatorSource.fromSourceEnum(sourceEnum),ModulatorSource.fromSourceEnum(secondarySourceEnum),destination,amount,transformType,isEffectModulator,isDefaultResonantModulator);if(this.destination>MAX_GENERATOR){this.destination=generatorTypes.INVALID;}}};var DEFAULT_ATTENUATION_MOD_AMOUNT=960;var DEFAULT_ATTENUATION_MOD_CURVE_TYPE=modulatorCurveTypes.concave;var defaultSoundFont2Modulators=[// Vel to attenuation
new DecodedModulator(getModSourceEnum(DEFAULT_ATTENUATION_MOD_CURVE_TYPE,false,true,false,modulatorSources.noteOnVelocity),0,generatorTypes.initialAttenuation,DEFAULT_ATTENUATION_MOD_AMOUNT,0),// Mod wheel to vibrato
new DecodedModulator(129,0,generatorTypes.vibLfoToPitch,50,0),// Vol to attenuation
new DecodedModulator(getModSourceEnum(DEFAULT_ATTENUATION_MOD_CURVE_TYPE,false,true,true,midiControllers.mainVolume),0,generatorTypes.initialAttenuation,DEFAULT_ATTENUATION_MOD_AMOUNT,0),// Channel pressure to vibrato
new DecodedModulator(13,0,generatorTypes.vibLfoToPitch,50,0),// Pitch wheel to tuning
new DecodedModulator(526,16,generatorTypes.fineTune,12700,0),// Pan to uhh, pan
// Amount is 500 instead of 1000, see #59
new DecodedModulator(650,0,generatorTypes.pan,500,0),// Expression to attenuation
new DecodedModulator(getModSourceEnum(DEFAULT_ATTENUATION_MOD_CURVE_TYPE,false,true,true,midiControllers.expressionController),0,generatorTypes.initialAttenuation,DEFAULT_ATTENUATION_MOD_AMOUNT,0),// Reverb effects to send
new DecodedModulator(219,0,generatorTypes.reverbEffectsSend,200,0),// Chorus effects to send
new DecodedModulator(221,0,generatorTypes.chorusEffectsSend,200,0)];var defaultSpessaSynthModulators=[// Custom modulators heck yeah
// Poly pressure to vibrato
new DecodedModulator(getModSourceEnum(modulatorCurveTypes.linear,false,false,false,modulatorSources.polyPressure),0,generatorTypes.vibLfoToPitch,50,0),// Cc 92 (tremolo) to modLFO volume
new DecodedModulator(getModSourceEnum(modulatorCurveTypes.linear,false,false,true,midiControllers.tremoloDepth),0,// No controller
generatorTypes.modLfoToVolume,24,0),// Cc 73 (attack time) to volEnv attack
new DecodedModulator(getModSourceEnum(modulatorCurveTypes.convex,true,false,true,midiControllers.attackTime),// Linear forward bipolar cc 72
0,// No controller
generatorTypes.attackVolEnv,6e3,0),// Cc 72 (release time) to volEnv release
new DecodedModulator(getModSourceEnum(modulatorCurveTypes.linear,true,false,true,midiControllers.releaseTime),// Linear forward bipolar cc 72
0,// No controller
generatorTypes.releaseVolEnv,3600,0),// Cc 74 (brightness) to filterFc
new DecodedModulator(getModSourceEnum(modulatorCurveTypes.linear,true,false,true,midiControllers.brightness),// Linear forwards bipolar cc 74
0,// No controller
generatorTypes.initialFilterFc,6e3,0),// Cc 71 (filter Q) to filter Q (default resonant modulator)
new DecodedModulator(defaultResonantModSource,0,// No controller
generatorTypes.initialFilterQ,250,0)];var SPESSASYNTH_DEFAULT_MODULATORS=defaultSoundFont2Modulators.concat(defaultSpessaSynthModulators);var GEN_BYTE_SIZE=4;var Generator=class{/**
     * The generator's SF2 type.
     */generatorType;/**
     * The generator's 16-bit value.
     */generatorValue=0;/**
     * Constructs a new generator
     * @param type generator type
     * @param value generator value
     * @param validate if the limits should be validated
     */constructor(type,value,validate=true){this.generatorType=type;if(value===void 0){throw new Error("No value provided.");}this.generatorValue=Math.round(value);if(validate){const lim=generatorLimits[type];if(lim!==void 0){this.generatorValue=Math.max(lim.min,Math.min(lim.max,this.generatorValue));}}}write(genData){writeWord(genData,this.generatorType);writeWord(genData,this.generatorValue);}toString(){return`${Object.keys(generatorTypes).find(k=>generatorTypes[k]===this.generatorType)}: ${this.generatorValue}`;}};function addAndClampGenerator(generatorType,presetGens,instrumentGens){const limits=generatorLimits[generatorType]||{min:0,max:32768,def:0};const presetGen=presetGens.find(g=>g.generatorType===generatorType);let presetValue=0;if(presetGen){presetValue=presetGen.generatorValue;}const instrGen=instrumentGens.find(g=>g.generatorType===generatorType);let instValue=limits.def;if(instrGen){instValue=instrGen.generatorValue;}return Math.max(-32767,Math.min(32767,instValue+presetValue));}var BAG_BYTE_SIZE=4;var BasicZone=class{/**
     * The zone's velocity range.
     * min -1 means that it is a default value
     */velRange={min:-1,max:127};/**
     * The zone's key range.
     * min -1 means that it is a default value.
     */keyRange={min:-1,max:127};/**
     * The zone's generators.
     */generators=[];/**
     * The zone's modulators.
     */modulators=[];get hasKeyRange(){return this.keyRange.min!==-1;}get hasVelRange(){return this.velRange.min!==-1;}/**
     * The current tuning in cents, taking in both coarse and fine generators.
     */get fineTuning(){const currentCoarse=this.getGenerator(generatorTypes.coarseTune,0);const currentFine=this.getGenerator(generatorTypes.fineTune,0);return currentCoarse*100+currentFine;}/**
     * The current tuning in cents, taking in both coarse and fine generators.
     */set fineTuning(tuningCents){const coarse=Math.trunc(tuningCents/100);const fine=tuningCents%100;this.setGenerator(generatorTypes.coarseTune,coarse);this.setGenerator(generatorTypes.fineTune,fine);}/**
     * Adds to a given generator, or its default value.
     */addToGenerator(type,value,validate=true){const genValue=this.getGenerator(type,generatorLimits[type].def);this.setGenerator(type,value+genValue,validate);}/**
     * Sets a generator to a given value if preset, otherwise adds a new one.
     */setGenerator(type,value,validate=true){switch(type){case generatorTypes.sampleID:throw new Error("Use setSample()");case generatorTypes.instrument:throw new Error("Use setInstrument()");case generatorTypes.velRange:case generatorTypes.keyRange:throw new Error("Set the range manually");}if(value===null){this.generators=this.generators.filter(g=>g.generatorType!==type);return;}const index=this.generators.findIndex(g=>g.generatorType===type);if(index>=0){this.generators[index]=new Generator(type,value,validate);}else{this.addGenerators(new Generator(type,value,validate));}}/**
     * Adds generators to the zone.
     * @param generators
     */addGenerators(...generators){generators.forEach(g=>{switch(g.generatorType){default:this.generators.push(g);break;case generatorTypes.sampleID:case generatorTypes.instrument:break;case generatorTypes.velRange:this.velRange.min=g.generatorValue&127;this.velRange.max=g.generatorValue>>8&127;break;case generatorTypes.keyRange:this.keyRange.min=g.generatorValue&127;this.keyRange.max=g.generatorValue>>8&127;}});}addModulators(...modulators){this.modulators.push(...modulators);}getGenerator(generatorType,notFoundValue){var _this$generators$find;return((_this$generators$find=this.generators.find(g=>g.generatorType===generatorType))===null||_this$generators$find===void 0?void 0:_this$generators$find.generatorValue)??notFoundValue;}copyFrom(zone){this.generators=zone.generators.map(g=>new Generator(g.generatorType,g.generatorValue,false));this.modulators=zone.modulators.map(Modulator.copyFrom.bind(Modulator));this.velRange={...zone.velRange};this.keyRange={...zone.keyRange};}/**
     * Filters the generators and prepends the range generators.
     */getWriteGenerators(bank){const generators=this.generators.filter(g=>g.generatorType!==generatorTypes.sampleID&&g.generatorType!==generatorTypes.instrument&&g.generatorType!==generatorTypes.keyRange&&g.generatorType!==generatorTypes.velRange);if(!bank){throw new Error("No bank provided! ");}void bank;if(this.hasVelRange){generators.unshift(new Generator(generatorTypes.velRange,this.velRange.max<<8|Math.max(this.velRange.min,0),false));}if(this.hasKeyRange){generators.unshift(new Generator(generatorTypes.keyRange,this.keyRange.max<<8|Math.max(this.keyRange.min,0),false));}return generators;}};var BasicGlobalZone=class extends BasicZone{// Nothing here, just a different instance...
};var BasicPresetZone=class extends BasicZone{/**
     * The preset this zone belongs to.
     */parentPreset;/**
     * Creates a new preset zone.
     * @param preset the preset this zone belongs to.
     * @param instrument the instrument to use in this zone.
     */constructor(preset,instrument){super();this.parentPreset=preset;this._instrument=instrument;this._instrument.linkTo(this.parentPreset);}/**
     * Zone's instrument.
     */_instrument;/**
     * Zone's instrument.
     */get instrument(){return this._instrument;}// noinspection JSUnusedGlobalSymbols
/**
     * Zone's instrument.
     */set instrument(instrument){if(this._instrument){this._instrument.unlinkFrom(this.parentPreset);}this._instrument=instrument;this._instrument.linkTo(this.parentPreset);}getWriteGenerators(bank){const gens=super.getWriteGenerators(bank);if(!bank){throw new Error("Instrument ID cannot be determined without the sound bank itself.");}const instrumentID=bank.instruments.indexOf(this.instrument);if(instrumentID<0){throw new Error(`${this.instrument.name} does not exist in ${bank.soundBankInfo.name}! Cannot write instrument generator.`);}gens.push(new Generator(generatorTypes.instrument,instrumentID,false));return gens;}};var BasicInstrumentZone=class extends BasicZone{/**
     * The instrument this zone belongs to.
     */parentInstrument;/**
     * For tracking on the individual zone level, since multiple presets can refer to the same instrument.
     */useCount;/**
     * Creates a new instrument zone.
     * @param instrument The parent instrument.
     * @param sample The sample to use in this zone.
     */constructor(instrument,sample){super();this.parentInstrument=instrument;this._sample=sample;sample.linkTo(this.parentInstrument);this.useCount=instrument.useCount;}/**
     * Zone's sample.
     */_sample;/**
     * Zone's sample.
     */get sample(){return this._sample;}// noinspection JSUnusedGlobalSymbols
/**
     * Sets a sample for this zone.
     * @param sample the sample to set.
     */set sample(sample){if(this._sample){this._sample.unlinkFrom(this.parentInstrument);}this._sample=sample;sample.linkTo(this.parentInstrument);}getWriteGenerators(bank){const gens=super.getWriteGenerators(bank);const sampleID=bank.samples.indexOf(this.sample);if(sampleID<0){throw new Error(`${this.sample.name} does not exist in ${bank.soundBankInfo.name}! Cannot write sampleID generator.`);}gens.push(new Generator(generatorTypes.sampleID,sampleID,false));return gens;}};var INST_BYTE_SIZE=22;var notGlobalizedTypes=/* @__PURE__ */new Set([generatorTypes.velRange,generatorTypes.keyRange,generatorTypes.instrument,generatorTypes.sampleID,generatorTypes.exclusiveClass,generatorTypes.endOper,generatorTypes.sampleModes,generatorTypes.startloopAddrsOffset,generatorTypes.startloopAddrsCoarseOffset,generatorTypes.endloopAddrsOffset,generatorTypes.endloopAddrsCoarseOffset,generatorTypes.startAddrsOffset,generatorTypes.startAddrsCoarseOffset,generatorTypes.endAddrOffset,generatorTypes.endAddrsCoarseOffset,generatorTypes.initialAttenuation,// Written into wsmp, there's no global wsmp
generatorTypes.fineTune,// Written into wsmp, there's no global wsmp
generatorTypes.coarseTune,// Written into wsmp, there's no global wsmp
generatorTypes.keyNumToVolEnvHold,// KEY TO SOMETHING:
generatorTypes.keyNumToVolEnvDecay,// Cannot be globalized as they modify their respective generators
generatorTypes.keyNumToModEnvHold,// (for example, keyNumToVolEnvDecay modifies VolEnvDecay)
generatorTypes.keyNumToModEnvDecay]);var BasicInstrument=class{/**
     * The instrument's name
     */name="";/**
     * The instrument's zones
     */zones=[];/**
     * Instrument's global zone
     */globalZone=new BasicGlobalZone();/**
     * Instrument's linked presets (the presets that use it)
     * note that duplicates are allowed since one preset can use the same instrument multiple times.
     */linkedTo=[];/**
     * How many presets is this instrument used by
     */get useCount(){return this.linkedTo.length;}/**
     * Creates a new instrument zone and returns it.
     * @param sample The sample to use in the zone.
     */createZone(sample){const zone=new BasicInstrumentZone(this,sample);this.zones.push(zone);return zone;}/**
     * Links the instrument ta a given preset
     * @param preset the preset to link to
     */linkTo(preset){this.linkedTo.push(preset);this.zones.forEach(z=>z.useCount++);}/**
     * Unlinks the instrument from a given preset
     * @param preset the preset to unlink from
     */unlinkFrom(preset){const index=this.linkedTo.indexOf(preset);if(index<0){SpessaSynthWarn(`Cannot unlink ${preset.name} from ${this.name}: not linked.`);return;}this.linkedTo.splice(index,1);this.zones.forEach(z=>z.useCount--);}// Deletes unused zones of the instrument
deleteUnusedZones(){this.zones=this.zones.filter(z=>{const stays=z.useCount>0;if(!stays){z.sample.unlinkFrom(this);}return stays;});}// Unlinks everything from this instrument
delete(){if(this.useCount>0){throw new Error(`Cannot delete an instrument that is used by: ${this.linkedTo.map(p=>p.name).toString()}.`);}this.zones.forEach(z=>z.sample.unlinkFrom(this));}/**
     * Deletes a given instrument zone if it has no uses
     * @param index the index of the zone to delete
     * @param force ignores the use count and deletes forcibly
     * @returns if the zone has been deleted
     */deleteZone(index,force=false){const zone=this.zones[index];zone.useCount-=1;if(zone.useCount<1||force){zone.sample.unlinkFrom(this);this.zones.splice(index,1);return true;}return false;}/**
     * Globalizes the instrument *in-place.*
     * This means trying to move as many generators and modulators
     * to the global zone as possible to reduce clutter and the count of parameters.
     */globalize(){const globalZone=this.globalZone;for(let checkedType=0;checkedType<58;checkedType++){var _generatorLimits$chec;if(notGlobalizedTypes.has(checkedType)){continue;}checkedType=checkedType;let occurrencesForValues={};const defaultForChecked=((_generatorLimits$chec=generatorLimits[checkedType])===null||_generatorLimits$chec===void 0?void 0:_generatorLimits$chec.def)||0;occurrencesForValues[defaultForChecked]=0;for(const zone of this.zones){const value=zone.getGenerator(checkedType,void 0);if(value!==void 0){if(occurrencesForValues[value]===void 0){occurrencesForValues[value]=1;}else{occurrencesForValues[value]++;}}else{occurrencesForValues[defaultForChecked]++;}let relativeCounterpart;switch(checkedType){default:continue;case generatorTypes.decayVolEnv:relativeCounterpart=generatorTypes.keyNumToVolEnvDecay;break;case generatorTypes.holdVolEnv:relativeCounterpart=generatorTypes.keyNumToVolEnvHold;break;case generatorTypes.decayModEnv:relativeCounterpart=generatorTypes.keyNumToModEnvDecay;break;case generatorTypes.holdModEnv:relativeCounterpart=generatorTypes.keyNumToModEnvHold;}const relative=zone.getGenerator(relativeCounterpart,void 0);if(relative!==void 0){occurrencesForValues={};break;}}if(Object.keys(occurrencesForValues).length>0){const entries=Object.entries(occurrencesForValues);const valueToGlobalize=entries.reduce((max,curr)=>{if(max[1]<curr[1]){return curr;}return max;},["0",0]);const targetValue=parseInt(valueToGlobalize[0]);if(targetValue!==defaultForChecked){globalZone.setGenerator(checkedType,targetValue,false);}this.zones.forEach(z=>{const genValue=z.getGenerator(checkedType,void 0);if(genValue!==void 0){if(genValue===targetValue){z.setGenerator(checkedType,null);}}else{if(targetValue!==defaultForChecked){z.setGenerator(checkedType,defaultForChecked);}}});}}const firstZone=this.zones[0];const modulators=firstZone.modulators.map(m=>Modulator.copyFrom(m));for(const checkedModulator of modulators){let existsForAllZones=true;for(const zone of this.zones){if(!existsForAllZones){continue;}const mod=zone.modulators.find(m=>Modulator.isIdentical(m,checkedModulator));if(!mod){existsForAllZones=false;}}if(existsForAllZones){globalZone.addModulators(Modulator.copyFrom(checkedModulator));for(const zone of this.zones){const modulator=zone.modulators.find(m=>Modulator.isIdentical(m,checkedModulator));if(!modulator){continue;}if(modulator.transformAmount===checkedModulator.transformAmount){zone.modulators.splice(zone.modulators.indexOf(modulator),1);}}}}}write(instData,index){SpessaSynthInfo(`%cWriting ${this.name}...`,consoleColors.info);writeBinaryStringIndexed(instData.pdta,this.name.substring(0,20),20);writeBinaryStringIndexed(instData.xdta,this.name.substring(20),20);writeWord(instData.pdta,index&65535);writeWord(instData.xdta,index>>>16);}};var PHDR_BYTE_SIZE=38;var BasicPreset=class{/**
     * The parent soundbank instance
     * Currently used for determining default modulators and XG status
     */parentSoundBank;/**
     * The preset's name
     */name="";program=0;bankMSB=0;bankLSB=0;isGMGSDrum=false;/**
     * The preset's zones
     */zones=[];/**
     * Preset's global zone
     */globalZone;/**
     * Unused metadata
     */library=0;/**
     * Unused metadata
     */genre=0;/**
     * Unused metadata
     */morphology=0;/**
     * Creates a new preset representation.
     * @param parentSoundBank the sound bank this preset belongs to.
     * @param globalZone optional, a global zone to use.
     */constructor(parentSoundBank,globalZone=new BasicGlobalZone()){this.parentSoundBank=parentSoundBank;this.globalZone=globalZone;}get isXGDrums(){return this.parentSoundBank.isXGBank&&BankSelectHacks.isXGDrums(this.bankMSB);}/**
     * Checks if this preset is a drum preset
     */get isAnyDrums(){const xg=this.parentSoundBank.isXGBank;return this.isGMGSDrum||xg&&BankSelectHacks.isXGDrums(this.bankMSB)&&// SFX is not a drum preset, only for exact match
this.bankMSB!==126;}/**
     * Unlinks everything from this preset.
     */delete(){this.zones.forEach(z=>{var _z$instrument;return(_z$instrument=z.instrument)===null||_z$instrument===void 0?void 0:_z$instrument.unlinkFrom(this);});}/**
     * Deletes an instrument zone from this preset.
     * @param index the zone's index to delete.
     */deleteZone(index){var _this$zones$index;(_this$zones$index=this.zones[index])===null||_this$zones$index===void 0||(_this$zones$index=_this$zones$index.instrument)===null||_this$zones$index===void 0||_this$zones$index.unlinkFrom(this);this.zones.splice(index,1);}/**
     * Creates a new preset zone and returns it.
     * @param instrument the instrument to use in the zone.
     */createZone(instrument){const z=new BasicPresetZone(this,instrument);this.zones.push(z);return z;}// noinspection JSUnusedGlobalSymbols
/**
     * Preloads (loads and caches synthesis data) for a given key range.
     */preload(keyMin,keyMax){for(let key=keyMin;key<keyMax+1;key++){for(let velocity=0;velocity<128;velocity++){this.getSynthesisData(key,velocity).forEach(synthesisData=>{synthesisData.sample.getAudioData();});}}}/**
     * Checks if the bank and program numbers are the same for the given preset as this one.
     * @param preset The preset to check.
     */matches(preset){return MIDIPatchTools.matches(this,preset);}/**
     * Returns the synthesis data from this preset
     * @param midiNote the MIDI note number
     * @param velocity the MIDI velocity
     * @returns the returned sound data
     */getSynthesisData(midiNote,velocity){if(this.zones.length<1){return[];}function isInRange(range,number){return number>=range.min&&number<=range.max;}function addUnique(main,adder){main.push(...adder.filter(g=>!main.find(mg=>mg.generatorType===g.generatorType)));}function addUniqueMods(main,adder){main.push(...adder.filter(m=>!main.find(mm=>Modulator.isIdentical(m,mm))));}const parsedGeneratorsAndSamples=[];const globalPresetGenerators=[...this.globalZone.generators];const globalPresetModulators=[...this.globalZone.modulators];const globalKeyRange=this.globalZone.keyRange;const globalVelRange=this.globalZone.velRange;const presetZonesInRange=this.zones.filter(currentZone=>isInRange(currentZone.hasKeyRange?currentZone.keyRange:globalKeyRange,midiNote)&&isInRange(currentZone.hasVelRange?currentZone.velRange:globalVelRange,velocity));presetZonesInRange.forEach(presetZone=>{const instrument=presetZone.instrument;if(!instrument||instrument.zones.length<1){return;}const presetGenerators=presetZone.generators;const presetModulators=presetZone.modulators;const globalInstrumentGenerators=[...instrument.globalZone.generators];const globalInstrumentModulators=[...instrument.globalZone.modulators];const globalKeyRange2=instrument.globalZone.keyRange;const globalVelRange2=instrument.globalZone.velRange;const instrumentZonesInRange=instrument.zones.filter(currentZone=>isInRange(currentZone.hasKeyRange?currentZone.keyRange:globalKeyRange2,midiNote)&&isInRange(currentZone.hasVelRange?currentZone.velRange:globalVelRange2,velocity));instrumentZonesInRange.forEach(instrumentZone=>{const instrumentGenerators=[...instrumentZone.generators];const instrumentModulators=[...instrumentZone.modulators];addUnique(presetGenerators,globalPresetGenerators);addUnique(instrumentGenerators,globalInstrumentGenerators);addUniqueMods(presetModulators,globalPresetModulators);addUniqueMods(instrumentModulators,globalInstrumentModulators);addUniqueMods(instrumentModulators,this.parentSoundBank.defaultModulators);const finalModulatorList=[...instrumentModulators];for(const mod of presetModulators){const identicalInstrumentModulator=finalModulatorList.findIndex(m=>Modulator.isIdentical(mod,m));if(identicalInstrumentModulator!==-1){finalModulatorList[identicalInstrumentModulator]=finalModulatorList[identicalInstrumentModulator].sumTransform(mod);}else{finalModulatorList.push(mod);}}if(instrumentZone.sample){parsedGeneratorsAndSamples.push({instrumentGenerators,presetGenerators,modulators:finalModulatorList,sample:instrumentZone.sample});}});});return parsedGeneratorsAndSamples;}/**
     * BankMSB:bankLSB:program:isGMGSDrum
     */toMIDIString(){return MIDIPatchTools.toMIDIString(this);}toString(){return MIDIPatchTools.toNamedMIDIString(this);}/**
     * Combines preset into an instrument, flattening the preset zones into instrument zones.
     * This is a really complex function that attempts to work around the DLS limitations of only having the instrument layer.
     * @returns The instrument containing the flattened zones. In theory, it should exactly the same as this preset.
     */toFlattenedInstrument(){const addUnique=(main,adder)=>{main.push(...adder.filter(g=>!main.find(mg=>mg.generatorType===g.generatorType)));};const subtractRanges=(r1,r2)=>{return{min:Math.max(r1.min,r2.min),max:Math.min(r1.max,r2.max)};};const addUniqueMods=(main,adder)=>{main.push(...adder.filter(m=>!main.find(mm=>Modulator.isIdentical(m,mm))));};const outputInstrument=new BasicInstrument();outputInstrument.name=this.name;const globalPresetGenerators=[];const globalPresetModulators=[];const globalPresetZone=this.globalZone;globalPresetGenerators.push(...globalPresetZone.generators);globalPresetModulators.push(...globalPresetZone.modulators);const globalPresetKeyRange=globalPresetZone.keyRange;const globalPresetVelRange=globalPresetZone.velRange;for(const presetZone of this.zones){if(!presetZone.instrument){throw new Error("No instrument in a preset zone.");}let presetZoneKeyRange=presetZone.keyRange;if(!presetZone.hasKeyRange){presetZoneKeyRange=globalPresetKeyRange;}let presetZoneVelRange=presetZone.velRange;if(!presetZone.hasVelRange){presetZoneVelRange=globalPresetVelRange;}const presetGenerators=presetZone.generators.map(g=>new Generator(g.generatorType,g.generatorValue));addUnique(presetGenerators,globalPresetGenerators);const presetModulators=[...presetZone.modulators];addUniqueMods(presetModulators,globalPresetModulators);const instrument=presetZone.instrument;const iZones=instrument.zones;const globalInstGenerators=[];const globalInstModulators=[];const globalInstZone=instrument.globalZone;globalInstGenerators.push(...globalInstZone.generators);globalInstModulators.push(...globalInstZone.modulators);const globalInstKeyRange=globalInstZone.keyRange;const globalInstVelRange=globalInstZone.velRange;for(const instZone of iZones){if(!instZone.sample){throw new Error("No sample in an instrument zone.");}let instZoneKeyRange=instZone.keyRange;if(!instZone.hasKeyRange){instZoneKeyRange=globalInstKeyRange;}let instZoneVelRange=instZone.velRange;if(!instZone.hasVelRange){instZoneVelRange=globalInstVelRange;}instZoneKeyRange=subtractRanges(instZoneKeyRange,presetZoneKeyRange);instZoneVelRange=subtractRanges(instZoneVelRange,presetZoneVelRange);if(instZoneKeyRange.max<instZoneKeyRange.min||instZoneVelRange.max<instZoneVelRange.min){continue;}const instGenerators=instZone.generators.map(g=>new Generator(g.generatorType,g.generatorValue));addUnique(instGenerators,globalInstGenerators);const instModulators=[...instZone.modulators];addUniqueMods(instModulators,globalInstModulators);const finalModList=[...instModulators];for(const mod of presetModulators){const identicalInstMod=finalModList.findIndex(m=>Modulator.isIdentical(mod,m));if(identicalInstMod!==-1){finalModList[identicalInstMod]=finalModList[identicalInstMod].sumTransform(mod);}else{finalModList.push(mod);}}let finalGenList=instGenerators.map(g=>new Generator(g.generatorType,g.generatorValue));for(const gen of presetGenerators){if(gen.generatorType===generatorTypes.velRange||gen.generatorType===generatorTypes.keyRange||gen.generatorType===generatorTypes.instrument||gen.generatorType===generatorTypes.endOper||gen.generatorType===generatorTypes.sampleModes){continue;}const identicalInstGen=instGenerators.findIndex(g=>g.generatorType===gen.generatorType);if(identicalInstGen!==-1){const newAmount=finalGenList[identicalInstGen].generatorValue+gen.generatorValue;finalGenList[identicalInstGen]=new Generator(gen.generatorType,newAmount);}else{const newAmount=generatorLimits[gen.generatorType].def+gen.generatorValue;finalGenList.push(new Generator(gen.generatorType,newAmount));}}finalGenList=finalGenList.filter(g=>g.generatorType!==generatorTypes.sampleID&&g.generatorType!==generatorTypes.keyRange&&g.generatorType!==generatorTypes.velRange&&g.generatorType!==generatorTypes.endOper&&g.generatorType!==generatorTypes.instrument&&g.generatorValue!==generatorLimits[g.generatorType].def);const zone=outputInstrument.createZone(instZone.sample);zone.keyRange=instZoneKeyRange;zone.velRange=instZoneVelRange;if(zone.keyRange.min===0&&zone.keyRange.max===127){zone.keyRange.min=-1;}if(zone.velRange.min===0&&zone.velRange.max===127){zone.velRange.min=-1;}zone.addGenerators(...finalGenList);zone.addModulators(...finalModList);}}return outputInstrument;}// noinspection JSUnusedGlobalSymbols
/**
     * Writes the SF2 header
     * @param phdrData
     * @param index
     */write(phdrData,index){SpessaSynthInfo(`%cWriting ${this.name}...`,consoleColors.info);writeBinaryStringIndexed(phdrData.pdta,this.name.substring(0,20),20);writeBinaryStringIndexed(phdrData.xdta,this.name.substring(20),20);writeWord(phdrData.pdta,this.program);let wBank=this.bankMSB;if(this.isGMGSDrum){wBank=128;}else if(this.bankMSB===0){wBank=this.bankLSB;}writeWord(phdrData.pdta,wBank);phdrData.xdta.currentIndex+=4;writeWord(phdrData.pdta,index&65535);writeWord(phdrData.xdta,index>>16);writeDword(phdrData.pdta,this.library);writeDword(phdrData.pdta,this.genre);writeDword(phdrData.pdta,this.morphology);phdrData.xdta.currentIndex+=12;}};function getAnyDrums(presets,preferXG){let p;if(preferXG){p=presets.find(p2=>p2.isXGDrums);}else{p=presets.find(p2=>p2.isGMGSDrum);}if(p){return p;}return presets.find(p2=>p2.isAnyDrums)??// ...no?
// Then just return any preset
presets[0];}function selectPreset(presets,patch,system){if(presets.length<1){throw new Error("No presets!");}if(patch.isGMGSDrum&&BankSelectHacks.isSystemXG(system)){patch={...patch,isGMGSDrum:false,bankLSB:0,bankMSB:BankSelectHacks.getDrumBank(system)};}const{isGMGSDrum,bankLSB,bankMSB,program}=patch;const isXG=BankSelectHacks.isSystemXG(system);const xgDrums=BankSelectHacks.isXGDrums(bankMSB)&&isXG;let p=presets.find(p2=>p2.matches(patch));if(p){if(!xgDrums||xgDrums&&p.isXGDrums){return p;}}const returnReplacement=pres=>{SpessaSynthInfo(`%cPreset %c${MIDIPatchTools.toMIDIString(patch)}%c not found. (${system}) Replaced with %c${pres.toString()}`,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);};if(isGMGSDrum){let p2=presets.find(p3=>p3.isGMGSDrum&&p3.program===program);if(p2){returnReplacement(p2);return p2;}p2=presets.find(p3=>p3.isAnyDrums&&p3.program===program);if(p2){returnReplacement(p2);return p2;}p2=getAnyDrums(presets,false);returnReplacement(p2);return p2;}if(xgDrums){let p2=presets.find(p3=>p3.program===program&&p3.isXGDrums);if(p2){returnReplacement(p2);return p2;}p2=presets.find(p3=>p3.isAnyDrums&&p3.program===program);if(p2){returnReplacement(p2);return p2;}p2=getAnyDrums(presets,true);returnReplacement(p2);return p2;}const matchingPrograms=presets.filter(p2=>p2.program===program&&!p2.isAnyDrums);if(matchingPrograms.length<1){returnReplacement(presets[0]);return presets[0];}if(isXG){p=matchingPrograms.find(p2=>p2.bankLSB===bankLSB);}else{p=matchingPrograms.find(p2=>p2.bankMSB===bankMSB);}if(p){returnReplacement(p);return p;}if(bankLSB!==64||!isXG){const bank=Math.max(bankMSB,bankLSB);p=matchingPrograms.find(p2=>p2.bankLSB===bank||p2.bankMSB===bank);if(p){returnReplacement(p);return p;}}returnReplacement(matchingPrograms[0]);return matchingPrograms[0];}var SoundBankManagerPreset=class extends BasicPreset{constructor(p,offset){super(p.parentSoundBank,p.globalZone);this.bankMSB=BankSelectHacks.addBankOffset(p.bankMSB,offset,p.isXGDrums);this.name=p.name;this.bankLSB=p.bankLSB;this.isGMGSDrum=p.isGMGSDrum;this.program=p.program;this.genre=p.genre;this.morphology=p.morphology;this.library=p.library;this.zones=p.zones;}};var SoundBankManager=class{/**
     * All the sound banks, ordered from the most important to the least.
     */soundBankList=[];presetListChangeCallback;selectablePresetList=[];/**
     * @param presetListChangeCallback Supplied by the parent synthesizer class,
     * this is called whenever the preset list changes.
     */constructor(presetListChangeCallback){this.presetListChangeCallback=presetListChangeCallback;}_presetList=[];/**
     * The list of all presets in the sound bank stack.
     */get presetList(){return[...this._presetList];}/**
     * The current sound bank priority order.
     * @returns The IDs of the sound banks in the current order.
     */get priorityOrder(){return this.soundBankList.map(s=>s.id);}/**
     * The current sound bank priority order.
     * @param newList The new order of sound bank IDs.
     */set priorityOrder(newList){this.soundBankList.sort((a,b)=>newList.indexOf(a.id)-newList.indexOf(b.id));this.generatePresetList();}/**
     * Deletes a given sound bank by its ID.
     * @param id the ID of the sound bank to delete.
     */deleteSoundBank(id){if(this.soundBankList.length===0){SpessaSynthWarn("1 soundbank left. Aborting!");return;}const index=this.soundBankList.findIndex(s=>s.id===id);if(index===-1){throw new Error(`No sound bank with id "${id}"`);}this.soundBankList.splice(index,1);this.generatePresetList();}// noinspection JSUnusedGlobalSymbols
/**
     * Adds a new sound bank with a given ID, or replaces an existing one.
     * @param font the sound bank to add.
     * @param id the ID of the sound bank.
     * @param bankOffset the bank offset of the sound bank.
     */addSoundBank(font,id,bankOffset=0){const foundBank=this.soundBankList.find(s=>s.id===id);if(foundBank!==void 0){foundBank.soundBank=font;foundBank.bankOffset=bankOffset;}else{this.soundBankList.push({id,soundBank:font,bankOffset});}this.generatePresetList();}/**
     * Gets a given preset from the sound bank stack.
     * @param patch The MIDI patch to search for.
     * @param system The MIDI system to select the preset for.
     * @returns An object containing the preset and its bank offset.
     */getPreset(patch,system){if(this.soundBankList.length<1){throw new Error("No sound banks! Did you forget to add one?");}return selectPreset(this.selectablePresetList,patch,system);}// Clears the sound bank list and destroys all sound banks.
destroy(){this.soundBankList.forEach(s=>{s.soundBank.destroySoundBank();});this.soundBankList=[];}generatePresetList(){const presetList=new Array();const addedPresets=/* @__PURE__ */new Set();this.soundBankList.forEach(s=>{const bank=s.soundBank;const bankOffset=s.bankOffset;bank.presets.forEach(p=>{const selectablePreset=new SoundBankManagerPreset(p,bankOffset);if(!addedPresets.has(selectablePreset.toMIDIString())){addedPresets.add(selectablePreset.toMIDIString());presetList.push(selectablePreset);}});});presetList.sort(MIDIPatchTools.sorter.bind(MIDIPatchTools));this.selectablePresetList=presetList;this._presetList=presetList.map(p=>{return{bankMSB:p.bankMSB,bankLSB:p.bankLSB,program:p.program,isGMGSDrum:p.isGMGSDrum,name:p.name,isAnyDrums:p.isAnyDrums};});this.presetListChangeCallback();}};var PAN_SMOOTHING_FACTOR=0.05;var REVERB_DIVIDER=3070;var CHORUS_DIVIDER=2e3;var HALF_PI=Math.PI/2;var MIN_PAN=-500;var MAX_PAN=500;var PAN_RESOLUTION=MAX_PAN-MIN_PAN;var panTableLeft=new Float32Array(PAN_RESOLUTION+1);var panTableRight=new Float32Array(PAN_RESOLUTION+1);for(let pan=MIN_PAN;pan<=MAX_PAN;pan++){const realPan=(pan-MIN_PAN)/PAN_RESOLUTION;const tableIndex=pan-MIN_PAN;panTableLeft[tableIndex]=Math.cos(HALF_PI*realPan);panTableRight[tableIndex]=Math.sin(HALF_PI*realPan);}function panAndMixVoice(voice,inputBuffer,outputLeft,outputRight,reverbLeft,reverbRight,chorusLeft,chorusRight,startIndex){if(isNaN(inputBuffer[0])){return;}let pan;if(voice.overridePan){pan=voice.overridePan;}else{voice.currentPan+=(voice.modulatedGenerators[generatorTypes.pan]-voice.currentPan)*this.synthProps.panSmoothingFactor;pan=voice.currentPan;}const gain=this.synthProps.masterParameters.masterGain*this.synthProps.midiVolume*voice.gain;const index=~~(pan+500);const gainLeft=panTableLeft[index]*gain*this.synthProps.panLeft;const gainRight=panTableRight[index]*gain*this.synthProps.panRight;if(this.synth.enableEffects){const reverbSend=voice.modulatedGenerators[generatorTypes.reverbEffectsSend];if(reverbSend>0){const reverbGain=this.synthProps.masterParameters.reverbGain*this.synthProps.reverbSend*gain*(reverbSend/REVERB_DIVIDER);for(let i=0;i<inputBuffer.length;i++){const idx=i+startIndex;reverbLeft[idx]+=reverbGain*inputBuffer[i];reverbRight[idx]+=reverbGain*inputBuffer[i];}}const chorusSend=voice.modulatedGenerators[generatorTypes.chorusEffectsSend];if(chorusSend>0){const chorusGain=this.synthProps.masterParameters.chorusGain*this.synthProps.chorusSend*(chorusSend/CHORUS_DIVIDER);const chorusLeftGain=gainLeft*chorusGain;const chorusRightGain=gainRight*chorusGain;for(let i=0;i<inputBuffer.length;i++){const idx=i+startIndex;chorusLeft[idx]+=chorusLeftGain*inputBuffer[i];chorusRight[idx]+=chorusRightGain*inputBuffer[i];}}}if(gainLeft>0){for(let i=0;i<inputBuffer.length;i++){outputLeft[i+startIndex]+=gainLeft*inputBuffer[i];}}if(gainRight>0){for(let i=0;i<inputBuffer.length;i++){outputRight[i+startIndex]+=gainRight*inputBuffer[i];}}}var FILTER_SMOOTHING_FACTOR=0.1;var LowpassFilter=class _LowpassFilter{/**
     * Cached coefficient calculations.
     * stored as cachedCoefficients[resonanceCb][currentInitialFc].
     */static cachedCoefficients=[];/**
     * Resonance in centibels.
     */resonanceCb=0;/**
     * Current cutoff frequency in absolute cents.
     */currentInitialFc=13500;/**
     * Filter coefficient 1.
     */a0=0;/**
     * Filter coefficient 2.
     */a1=0;/**
     * Filter coefficient 3.
     */a2=0;/**
     * Filter coefficient 4.
     */a3=0;/**
     * Filter coefficient 5.
     */a4=0;/**
     * Input history 1.
     */x1=0;/**
     * Input history 2.
     */x2=0;/**
     * Output history 1.
     */y1=0;/**
     * Output history 2.
     */y2=0;/**
     * For tracking the last cutoff frequency in the apply method, absolute cents.
     * Set to infinity to force recalculation.
     */lastTargetCutoff=Infinity;/**
     * Used for tracking if the filter has been initialized.
     */initialized=false;/**
     * Filter's sample rate in Hz.
     */sampleRate;/**
     * Maximum cutoff frequency in Hz.
     * This is used to prevent aliasing and ensure the filter operates within the valid frequency range.
     */maxCutoff;/**
     * Initializes a new instance of the filter.
     * @param sampleRate the sample rate of the audio engine in Hz.
     */constructor(sampleRate){this.sampleRate=sampleRate;this.maxCutoff=sampleRate*0.45;}/**
     * Applies the lowpass filter to the output buffer of a voice.
     * @param voice The voice to apply the filter to.
     * @param outputBuffer The output buffer to filter.
     * @param fcExcursion The frequency excursion in cents to apply to the filter.
     * @param smoothingFactor The smoothing factor for the filter as determined by the parent synthesizer.
     */static apply(voice,outputBuffer,fcExcursion,smoothingFactor){const initialFc=voice.modulatedGenerators[generatorTypes.initialFilterFc];const filter=voice.filter;if(!filter.initialized){filter.initialized=true;filter.currentInitialFc=initialFc;}else{filter.currentInitialFc+=(initialFc-filter.currentInitialFc)*smoothingFactor;}const targetCutoff=filter.currentInitialFc+fcExcursion;const modulatedResonance=voice.modulatedGenerators[generatorTypes.initialFilterQ];if(filter.currentInitialFc>13499&&targetCutoff>13499&&modulatedResonance===0){filter.currentInitialFc=13500;return;}if(Math.abs(filter.lastTargetCutoff-targetCutoff)>1||filter.resonanceCb!==modulatedResonance){filter.lastTargetCutoff=targetCutoff;filter.resonanceCb=modulatedResonance;_LowpassFilter.calculateCoefficients(filter,targetCutoff);}for(let i=0;i<outputBuffer.length;i++){const input=outputBuffer[i];const filtered=filter.a0*input+filter.a1*filter.x1+filter.a2*filter.x2-filter.a3*filter.y1-filter.a4*filter.y2;filter.x2=filter.x1;filter.x1=input;filter.y2=filter.y1;filter.y1=filtered;outputBuffer[i]=filtered;}}/**
     * Calculates the filter coefficients based on the current resonance and cutoff frequency and caches them.
     * @param filter The lowpass filter instance to calculate coefficients for.
     * @param cutoffCents The cutoff frequency in cents.
     */static calculateCoefficients(filter,cutoffCents){var _LowpassFilter$cached;cutoffCents=~~cutoffCents;const qCb=filter.resonanceCb;const cached=(_LowpassFilter$cached=_LowpassFilter.cachedCoefficients)===null||_LowpassFilter$cached===void 0||(_LowpassFilter$cached=_LowpassFilter$cached[qCb])===null||_LowpassFilter$cached===void 0?void 0:_LowpassFilter$cached[cutoffCents];if(cached!==void 0){filter.a0=cached.a0;filter.a1=cached.a1;filter.a2=cached.a2;filter.a3=cached.a3;filter.a4=cached.a4;return;}let cutoffHz=absCentsToHz(cutoffCents);cutoffHz=Math.min(cutoffHz,filter.maxCutoff);const qDb=qCb/10;const resonanceGain=decibelAttenuationToGain(-(qDb-3.01));const qGain=1/Math.sqrt(decibelAttenuationToGain(-qDb));const w=2*Math.PI*cutoffHz/filter.sampleRate;const cosw=Math.cos(w);const alpha=Math.sin(w)/(2*resonanceGain);const b1=(1-cosw)*qGain;const b0=b1/2;const b2=b0;const a0=1+alpha;const a1=-2*cosw;const a2=1-alpha;const toCache={a0:b0/a0,a1:b1/a0,a2:b2/a0,a3:a1/a0,a4:a2/a0};filter.a0=toCache.a0;filter.a1=toCache.a1;filter.a2=toCache.a2;filter.a3=toCache.a3;filter.a4=toCache.a4;_LowpassFilter.cachedCoefficients[qCb]??=[];_LowpassFilter.cachedCoefficients[qCb][cutoffCents]=toCache;}};var dummy=new LowpassFilter(44100);dummy.resonanceCb=0;for(let i=1500;i<13500;i++){dummy.currentInitialFc=i;LowpassFilter.calculateCoefficients(dummy,i);}var DEFAULT_SYNTH_OPTIONS={enableEventSystem:true,initialTime:0,enableEffects:true};function getPriority(channel,voice){let priority=0;if(channel.drumChannel){priority+=5;}if(voice.isInRelease){priority-=5;}priority+=voice.velocity/25;priority-=voice.volumeEnvelope.state;if(voice.isInRelease){priority-=5;}priority-=voice.volumeEnvelope.currentAttenuationDb/50;return priority;}function killVoicesIntenral(amount){const allVoices=[];for(const channel of this.midiChannels){for(const voice of channel.voices){if(!voice.finished){const priority=getPriority(channel,voice);allVoices.push({channel,voice,priority});}}}allVoices.sort((a,b)=>a.priority-b.priority);const voicesToRemove=allVoices.slice(0,amount);for(const{channel,voice}of voicesToRemove){const index=channel.voices.indexOf(voice);if(index>-1){channel.voices.splice(index,1);}}}var MODENV_PEAK=1;var CONVEX_ATTACK=new Float32Array(1e3);for(let i=0;i<CONVEX_ATTACK.length;i++){CONVEX_ATTACK[i]=getModulatorCurveValue(0,modulatorCurveTypes.convex,i/1e3);}var ModulationEnvelope=class _ModulationEnvelope{/**
     * The attack duration, in seconds.
     */attackDuration=0;/**
     * The decay duration, in seconds.
     */decayDuration=0;/**
     * The hold duration, in seconds.
     */holdDuration=0;/**
     * Release duration, in seconds.
     */releaseDuration=0;/**
     * The sustain level 0-1.
     */sustainLevel=0;/**
     * Delay phase end time in seconds, absolute (audio context time).
     */delayEnd=0;/**
     * Attack phase end time in seconds, absolute (audio context time).
     */attackEnd=0;/**
     * Hold phase end time in seconds, absolute (audio context time).
     */holdEnd=0;/**
     * Decay phase end time in seconds, absolute (audio context time).
     */decayEnd=0;/**
     * The level of the envelope when the release phase starts.
     */releaseStartLevel=0;/**
     * The current modulation envelope value.
     */currentValue=0;/**
     * Starts the release phase in the envelope.
     * @param voice the voice this envelope belongs to.
     */static startRelease(voice){_ModulationEnvelope.recalculate(voice);}/**
     * @param voice the voice to recalculate.
     */static recalculate(voice){const env=voice.modulationEnvelope;if(voice.isInRelease){env.releaseStartLevel=_ModulationEnvelope.getValue(voice,voice.releaseStartTime,true);}env.sustainLevel=1-voice.modulatedGenerators[generatorTypes.sustainModEnv]/1e3;env.attackDuration=timecentsToSeconds(voice.modulatedGenerators[generatorTypes.attackModEnv]);const decayKeyExcursionCents=(60-voice.midiNote)*voice.modulatedGenerators[generatorTypes.keyNumToModEnvDecay];const decayTime=timecentsToSeconds(voice.modulatedGenerators[generatorTypes.decayModEnv]+decayKeyExcursionCents);env.decayDuration=decayTime*(1-env.sustainLevel);const holdKeyExcursionCents=(60-voice.midiNote)*voice.modulatedGenerators[generatorTypes.keyNumToModEnvHold];env.holdDuration=timecentsToSeconds(holdKeyExcursionCents+voice.modulatedGenerators[generatorTypes.holdModEnv]);const releaseTime=timecentsToSeconds(Math.max(voice.modulatedGenerators[generatorTypes.releaseModEnv],-7200));env.releaseDuration=releaseTime*env.releaseStartLevel;env.delayEnd=voice.startTime+timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayModEnv]);env.attackEnd=env.delayEnd+env.attackDuration;env.holdEnd=env.attackEnd+env.holdDuration;env.decayEnd=env.holdEnd+env.decayDuration;}/**
     * Calculates the current modulation envelope value for the given time and voice.
     * @param voice the voice we are working on.
     * @param currentTime in seconds.
     * @param ignoreRelease if true, it will compute the value as if the voice was not released.
     * @returns  mod env value, from 0 to 1.
     */static getValue(voice,currentTime,ignoreRelease=false){const env=voice.modulationEnvelope;if(voice.isInRelease&&!ignoreRelease){if(env.releaseStartLevel===0){return 0;}return Math.max(0,(1-(currentTime-voice.releaseStartTime)/env.releaseDuration)*env.releaseStartLevel);}if(currentTime<env.delayEnd){env.currentValue=0;}else if(currentTime<env.attackEnd){env.currentValue=CONVEX_ATTACK[~~((1-(env.attackEnd-currentTime)/env.attackDuration)*1e3)];}else if(currentTime<env.holdEnd){env.currentValue=MODENV_PEAK;}else if(currentTime<env.decayEnd){env.currentValue=(1-(env.decayEnd-currentTime)/env.decayDuration)*(env.sustainLevel-MODENV_PEAK)+MODENV_PEAK;}else{env.currentValue=env.sustainLevel;}return env.currentValue;}};var AudioSample=class{/**
     * The sample's audio data
     */sampleData;/**
     * Current playback step (rate)
     */playbackStep=0;/**
     * Current position in the sample
     */cursor=0;/**
     * MIDI root key of the sample
     */rootKey=0;/**
     * Start position of the loop
     */loopStart=0;/**
     * End position of the loop
     */loopEnd=0;/**
     * End position of the sample
     */end=0;/**
     * Looping mode of the sample:
     * 0 - no loop
     * 1 - loop
     * 2 - UNOFFICIAL: polyphone 2.4 added start on release
     * 3 - loop then play when released
     */loopingMode=0;/**
     * Indicates if the sample is currently looping
     */isLooping=false;/**
     * @param data
     * @param playbackStep the playback step, a single increment
     * @param cursorStart the sample id which starts the playback
     * @param rootKey MIDI root key
     * @param loopStart loop start index
     * @param loopEnd loop end index
     * @param endIndex sample end index (for end offset)
     * @param loopingMode sample looping mode
     */constructor(data,playbackStep,cursorStart,rootKey,loopStart,loopEnd,endIndex,loopingMode){this.sampleData=data;this.playbackStep=playbackStep;this.cursor=cursorStart;this.rootKey=rootKey;this.loopStart=loopStart;this.loopEnd=loopEnd;this.end=endIndex;this.loopingMode=loopingMode;this.isLooping=this.loopingMode===1||this.loopingMode===3;}};var EXCLUSIVE_CUTOFF_TIME=-2320;var EXCLUSIVE_MOD_CUTOFF_TIME=-1130;var Voice=class _Voice{/**
     * The sample of the voice.
     */sample;/**
     * Lowpass filter applied to the voice.
     */filter;/**
     * Linear gain of the voice. Used with Key Modifiers.
     */gain=1;/**
     * The unmodulated (copied to) generators of the voice.
     */generators;/**
     * The voice's modulators.
     */modulators=[];/**
     * Resonance offset, it is affected by the default resonant modulator
     */resonanceOffset=0;/**
     * The generators in real-time, affected by modulators.
     * This is used during rendering.
     */modulatedGenerators;/**
     * Indicates if the voice is finished.
     */finished=false;/**
     * Indicates if the voice is in the release phase.
     */isInRelease=false;/**
     * Velocity of the note.
     */velocity=0;/**
     * MIDI note number.
     */midiNote=0;/**
     * The pressure of the voice
     */pressure=0;/**
     * Target key for the note.
     */targetKey=0;/**
     * Modulation envelope.
     */modulationEnvelope=new ModulationEnvelope();/**
     * Volume envelope.
     */volumeEnvelope;/**
     * Start time of the voice, absolute.
     */startTime=0;/**
     * Start time of the release phase, absolute.
     */releaseStartTime=Infinity;/**
     * Current tuning in cents.
     */currentTuningCents=0;/**
     * Current calculated tuning. (as in ratio)
     */currentTuningCalculated=1;/**
     * From -500 to 500.
     */currentPan=0;/**
     * If MIDI Tuning Standard is already applied (at note-on time),
     * this will be used to take the values at real-time tuning as "midiNote"
     * property contains the tuned number.
     * see  SpessaSynth#29 comment by @paulikaro
     */realKey;/**
     * Initial key to glide from, MIDI Note number. If -1, the portamento is OFF.
     */portamentoFromKey=-1;/**
     * Duration of the linear glide, in seconds.
     */portamentoDuration=0;/**
     * From -500 to 500, where zero means disabled (use the channel pan). Used for random pan.
     */overridePan=0;/**
     * Exclusive class number for hi-hats etc.
     */exclusiveClass=0;/**
     * Creates a Voice.
     */constructor(sampleRate,audioSample,midiNote,velocity,currentTime,targetKey,realKey,generators,modulators){this.sample=audioSample;this.generators=generators;this.exclusiveClass=this.generators[generatorTypes.exclusiveClass];this.modulatedGenerators=new Int16Array(generators);this.modulators=modulators;this.filter=new LowpassFilter(sampleRate);this.velocity=velocity;this.midiNote=midiNote;this.startTime=currentTime;this.targetKey=targetKey;this.realKey=realKey;this.volumeEnvelope=new VolumeEnvelope(sampleRate,generators[generatorTypes.sustainVolEnv]);}/**
     * Copies a voice.
     */static copyFrom(voice,currentTime,realKey){const sampleToCopy=voice.sample;const sample=new AudioSample(sampleToCopy.sampleData,sampleToCopy.playbackStep,sampleToCopy.cursor,sampleToCopy.rootKey,sampleToCopy.loopStart,sampleToCopy.loopEnd,sampleToCopy.end,sampleToCopy.loopingMode);return new _Voice(voice.volumeEnvelope.sampleRate,sample,voice.midiNote,voice.velocity,currentTime,voice.targetKey,realKey,new Int16Array(voice.generators),voice.modulators.map(Modulator.copyFrom.bind(Modulator)));}/**
     * Releases the voice as exclusiveClass.
     */exclusiveRelease(currentTime){this.release(currentTime,MIN_EXCLUSIVE_LENGTH);this.modulatedGenerators[generatorTypes.releaseVolEnv]=EXCLUSIVE_CUTOFF_TIME;this.modulatedGenerators[generatorTypes.releaseModEnv]=EXCLUSIVE_MOD_CUTOFF_TIME;VolumeEnvelope.recalculate(this);ModulationEnvelope.recalculate(this);}/**
     * Stops the voice
     * @param currentTime
     * @param minNoteLength minimum note length in seconds
     */release(currentTime,minNoteLength=MIN_NOTE_LENGTH){this.releaseStartTime=currentTime;if(this.releaseStartTime-this.startTime<minNoteLength){this.releaseStartTime=this.startTime+minNoteLength;}}};function getVoicesForPresetInternal(preset,midiNote,velocity,realKey){const cached=this.getCachedVoice(preset,midiNote,velocity);if(cached!==void 0){return cached.map(v=>Voice.copyFrom(v,this.currentSynthTime,realKey));}const voices=preset.getSynthesisData(midiNote,velocity).reduce((voices2,synthesisData)=>{if(synthesisData.sample.getAudioData()===void 0){SpessaSynthWarn(`Discarding invalid sample: ${synthesisData.sample.name}`);return voices2;}const generators=new Int16Array(GENERATORS_AMOUNT);for(let i=0;i<60;i++){generators[i]=addAndClampGenerator(i,synthesisData.presetGenerators,synthesisData.instrumentGenerators);}generators[generatorTypes.initialAttenuation]=Math.floor(generators[generatorTypes.initialAttenuation]*0.4);let rootKey=synthesisData.sample.originalKey;if(generators[generatorTypes.overridingRootKey]>-1){rootKey=generators[generatorTypes.overridingRootKey];}let targetKey=midiNote;if(generators[generatorTypes.keyNum]>-1){targetKey=generators[generatorTypes.keyNum];}const loopStart=synthesisData.sample.loopStart;const loopEnd=synthesisData.sample.loopEnd;const loopingMode=generators[generatorTypes.sampleModes];const sampleData=synthesisData.sample.getAudioData();const audioSample=new AudioSample(sampleData,synthesisData.sample.sampleRate/this.sampleRate*Math.pow(2,synthesisData.sample.pitchCorrection/1200),// Cent tuning
0,rootKey,loopStart,loopEnd,Math.floor(sampleData.length)-1,loopingMode);let voiceVelocity=velocity;if(generators[generatorTypes.velocity]>-1){voiceVelocity=generators[generatorTypes.velocity];}voices2.push(new Voice(this.sampleRate,audioSample,midiNote,voiceVelocity,this.currentSynthTime,targetKey,realKey,generators,synthesisData.modulators.map(Modulator.copyFrom.bind(Modulator))));return voices2;},[]);this.setCachedVoice(preset,midiNote,velocity,voices);return voices.map(v=>Voice.copyFrom(v,this.currentSynthTime,realKey));}function getVoicesInternal(channel,midiNote,velocity,realKey){const channelObject=this.midiChannels[channel];const overridePatch=this.keyModifierManager.hasOverridePatch(channel,midiNote);let preset=channelObject.preset;if(!preset){SpessaSynthWarn(`No preset for channel ${channel}!`);return[];}if(overridePatch){const patch=this.keyModifierManager.getPatch(channel,midiNote);preset=this.soundBankManager.getPreset(patch,this.privateProps.masterParameters.midiSystem);}return this.getVoicesForPreset(preset,midiNote,velocity,realKey);}function getTuning(byte1,byte2,byte3){const midiNote=byte1;const fraction=byte2<<7|byte3;if(byte1===127&&byte2===127&&byte3===127){return{midiNote:-1,centTuning:null};}return{midiNote,centTuning:fraction*61e-4};}function systemExclusiveInternal(syx,channelOffset=0){const manufacturer=syx[0];if(this.privateProps.masterParameters.deviceID!==ALL_CHANNELS_OR_DIFFERENT_ACTION&&syx[1]!==127){if(this.privateProps.masterParameters.deviceID!==syx[1]){return;}}function niceLogging(channel,value,what,units){SpessaSynthInfo(`%cChannel %c${channel}%c ${what}. %c${value} ${units}%c, with %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);}switch(manufacturer){default:SpessaSynthInfo(`%cUnrecognized SysEx: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);break;// Non realtime GM
case 126:// Realtime GM
case 127:switch(syx[2]){case 4:{let cents;switch(syx[3]){case 1:{const vol=syx[5]<<7|syx[4];this.setMIDIVolume(vol/16384);SpessaSynthInfo(`%cMaster Volume. Volume: %c${vol}`,consoleColors.info,consoleColors.value);break;}case 2:{const balance=syx[5]<<7|syx[4];const pan=(balance-8192)/8192;this.setMasterParameter("masterPan",pan);SpessaSynthInfo(`%cMaster Pan. Pan: %c${pan}`,consoleColors.info,consoleColors.value);break;}case 3:{const tuningValue=(syx[5]<<7|syx[6])-8192;cents=Math.floor(tuningValue/81.92);this.setMasterTuning(cents);SpessaSynthInfo(`%cMaster Fine Tuning. Cents: %c${cents}`,consoleColors.info,consoleColors.value);break;}case 4:{const semitones=syx[5]-64;cents=semitones*100;this.setMasterTuning(cents);SpessaSynthInfo(`%cMaster Coarse Tuning. Cents: %c${cents}`,consoleColors.info,consoleColors.value);break;}default:SpessaSynthInfo(`%cUnrecognized MIDI Device Control Real-time message: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);}break;}case 9:if(syx[3]===1){SpessaSynthInfo("%cGM1 system on",consoleColors.info);this.setMasterParameter("midiSystem","gm");}else if(syx[3]===3){SpessaSynthInfo("%cGM2 system on",consoleColors.info);this.setMasterParameter("midiSystem","gm2");}else{SpessaSynthInfo("%cGM system off, defaulting to GS",consoleColors.info);this.setMasterParameter("midiSystem","gs");}break;// MIDI Tuning standard
// https://midi.org/midi-tuning-updated-specification
case 8:{let currentMessageIndex=4;switch(syx[3]){// Bulk tuning dump: all 128 notes
case 1:{const program=syx[currentMessageIndex++];const tuningName=readBinaryString(syx,16,currentMessageIndex);currentMessageIndex+=16;if(syx.length<384){SpessaSynthWarn(`The Bulk Tuning Dump is too short! (${syx.length} bytes, at least 384 are expected)`);return;}for(let i=0;i<128;i++){this.privateProps.tunings[program][i]=getTuning(syx[currentMessageIndex++],syx[currentMessageIndex++],syx[currentMessageIndex++]);}SpessaSynthInfo(`%cBulk Tuning Dump %c${tuningName}%c Program: %c${program}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.recognized);break;}// Single note change
// Single note change bank
case 2:case 7:{if(syx[3]===7){currentMessageIndex++;}const tuningProgram=syx[currentMessageIndex++];const numberOfChanges=syx[currentMessageIndex++];for(let i=0;i<numberOfChanges;i++){this.privateProps.tunings[tuningProgram][syx[currentMessageIndex++]]=getTuning(syx[currentMessageIndex++],syx[currentMessageIndex++],syx[currentMessageIndex++]);}SpessaSynthInfo(`%cSingle Note Tuning. Program: %c${tuningProgram}%c Keys affected: %c${numberOfChanges}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);break;}// Octave tuning (1 byte)
// And octave tuning (2 bytes)
case 9:case 8:{const newOctaveTuning=new Int8Array(12);if(syx[3]===8){for(let i=0;i<12;i++){newOctaveTuning[i]=syx[7+i]-64;}}else{for(let i=0;i<24;i+=2){const tuning=(syx[7+i]<<7|syx[8+i])-8192;newOctaveTuning[i/2]=Math.floor(tuning/81.92);}}if((syx[4]&1)===1){this.midiChannels[14+channelOffset].setOctaveTuning(newOctaveTuning);}if((syx[4]>>1&1)===1){this.midiChannels[15+channelOffset].setOctaveTuning(newOctaveTuning);}for(let i=0;i<7;i++){const bit=syx[5]>>i&1;if(bit===1){this.midiChannels[7+i+channelOffset].setOctaveTuning(newOctaveTuning);}}for(let i=0;i<7;i++){const bit=syx[6]>>i&1;if(bit===1){this.midiChannels[i+channelOffset].setOctaveTuning(newOctaveTuning);}}SpessaSynthInfo(`%cMIDI Octave Scale ${syx[3]===8?"(1 byte)":"(2 bytes)"} tuning via Tuning: %c${newOctaveTuning.join(" ")}`,consoleColors.info,consoleColors.value);break;}default:SpessaSynthInfo(`%cUnrecognized MIDI Tuning standard message: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);break;}break;}default:SpessaSynthInfo(`%cUnrecognized MIDI Realtime/non realtime message: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);}break;// This is a roland sysex
// http://www.bandtrax.com.au/sysex.htm
// https://cdn.roland.com/assets/media/pdf/AT-20R_30R_MI.pdf
case 65:if(syx[3]===18){let notRecognized2=function(){SpessaSynthInfo(`%cUnrecognized Roland %cGS %cSysEx: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.recognized,consoleColors.warn,consoleColors.unrecognized);};var notRecognized=notRecognized2;switch(syx[2]){case 66:{const messageValue=syx[7];if(syx[4]===64||syx[4]===0&&syx[6]===127){if((syx[5]&16)>0){const channel=[9,0,1,2,3,4,5,6,7,8,10,11,12,13,14,15][syx[5]&15]+channelOffset;const channelObject=this.midiChannels[channel];switch(syx[6]){default:notRecognized2();break;case 21:{const isDrums=messageValue>0&&syx[5]>>4>0;channelObject.setGSDrums(isDrums);SpessaSynthInfo(`%cChannel %c${channel}%c ${isDrums?"is now a drum channel":"now isn't a drum channel"}%c via: %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.value,consoleColors.recognized,consoleColors.info,consoleColors.value);return;}case 22:{const keyShift=messageValue-64;channelObject.setCustomController(customControllers.channelKeyShift,keyShift);niceLogging(channel,keyShift,"key shift","keys");return;}// Pan position
case 28:{const panPosition=messageValue;if(panPosition===0){channelObject.randomPan=true;SpessaSynthInfo(`%cRandom pan is set to %cON%c for %c${channel}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.value);}else{channelObject.randomPan=false;channelObject.controllerChange(midiControllers.pan,panPosition);}break;}// Chorus send
case 33:channelObject.controllerChange(midiControllers.chorusDepth,messageValue);break;// Reverb send
case 34:channelObject.controllerChange(midiControllers.reverbDepth,messageValue);break;case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:{const tuningBytes=syx.length-9;const newTuning=new Int8Array(12);for(let i=0;i<tuningBytes;i++){newTuning[i]=syx[i+7]-64;}channelObject.setOctaveTuning(newTuning);const cents=messageValue-64;niceLogging(channel,newTuning.join(" "),"octave scale tuning","cents");channelObject.setTuning(cents);break;}}return;}else if((syx[5]&32)>0){const channel=[9,0,1,2,3,4,5,6,7,8,10,11,12,13,14,15][syx[5]&15]+channelOffset;const channelObject=this.midiChannels[channel];const centeredValue=messageValue-64;const normalizedValue=centeredValue/64;const normalizedNotCentered=messageValue/128;const setupReceivers=(source,sourceName,bipolar=false)=>{switch(syx[6]&15){case 0:if(source===NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel){channelObject.controllerChange(midiControllers.registeredParameterMSB,0);channelObject.controllerChange(midiControllers.registeredParameterLSB,0);channelObject.controllerChange(midiControllers.dataEntryMSB,Math.floor(centeredValue));}else{channelObject.sysExModulators.setModulator(source,generatorTypes.fineTune,centeredValue*100,bipolar);niceLogging(channel,centeredValue,`${sourceName} pitch control`,"semitones");}break;case 1:channelObject.sysExModulators.setModulator(source,generatorTypes.initialFilterFc,normalizedValue*9600,bipolar);niceLogging(channel,normalizedValue*9600,`${sourceName} pitch control`,"cents");break;case 2:channelObject.sysExModulators.setModulator(source,generatorTypes.initialAttenuation,normalizedValue*960,// Spec says "100%" so 960cB in sf2
bipolar);niceLogging(channel,normalizedValue*960,`${sourceName} amplitude`,"cB");break;// Rate control is ignored as it is in hertz
case 4:channelObject.sysExModulators.setModulator(source,generatorTypes.vibLfoToPitch,normalizedNotCentered*600,bipolar);niceLogging(channel,normalizedNotCentered*600,`${sourceName} LFO1 pitch depth`,"cents");break;case 5:channelObject.sysExModulators.setModulator(source,generatorTypes.vibLfoToFilterFc,normalizedNotCentered*2400,bipolar);niceLogging(channel,normalizedNotCentered*2400,`${sourceName} LFO1 filter depth`,"cents");break;case 6:channelObject.sysExModulators.setModulator(source,generatorTypes.vibLfoToVolume,normalizedValue*960,bipolar);niceLogging(channel,normalizedValue*960,`${sourceName} LFO1 amplitude depth`,"cB");break;// Rate control is ignored as it is in hertz
case 8:channelObject.sysExModulators.setModulator(source,generatorTypes.modLfoToPitch,normalizedNotCentered*600,bipolar);niceLogging(channel,normalizedNotCentered*600,`${sourceName} LFO2 pitch depth`,"cents");break;case 9:channelObject.sysExModulators.setModulator(source,generatorTypes.modLfoToFilterFc,normalizedNotCentered*2400,bipolar);niceLogging(channel,normalizedNotCentered*2400,`${sourceName} LFO2 filter depth`,"cents");break;case 10:channelObject.sysExModulators.setModulator(source,generatorTypes.modLfoToVolume,normalizedValue*960,bipolar);niceLogging(channel,normalizedValue*960,`${sourceName} LFO2 amplitude depth`,"cB");break;}};switch(syx[6]&240){default:notRecognized2();break;case 0:setupReceivers(midiControllers.modulationWheel,"mod wheel");break;case 16:setupReceivers(NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel,"pitch wheel",true);break;case 32:setupReceivers(NON_CC_INDEX_OFFSET+modulatorSources.channelPressure,"channel pressure");break;case 48:setupReceivers(NON_CC_INDEX_OFFSET+modulatorSources.polyPressure,"poly pressure");break;}return;}else if(syx[5]===0){switch(syx[6]){default:notRecognized2();break;case 127:if(messageValue===0){SpessaSynthInfo("%cGS Reset received!",consoleColors.info);this.resetAllControllers(false);this.setMasterParameter("midiSystem","gs");}else if(messageValue===127){SpessaSynthInfo("%cGS system off, switching to GM",consoleColors.info);this.resetAllControllers(false);this.setMasterParameter("midiSystem","gm");}break;case 6:SpessaSynthInfo(`%cRoland GS Master Pan set to: %c${messageValue}%c with: %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);this.setMasterParameter("masterPan",(messageValue-64)/64);break;case 4:SpessaSynthInfo(`%cRoland GS Master Volume set to: %c${messageValue}%c with: %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);this.setMIDIVolume(messageValue/127);break;case 5:{const transpose=messageValue-64;SpessaSynthInfo(`%cRoland GS Master Key-Shift set to: %c${transpose}%c with: %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);this.setMasterTuning(transpose*100);break;}}return;}else if(syx[5]===1){switch(syx[6]){default:notRecognized2();break;case 0:{const patchName=readBinaryString(syx,16,7);SpessaSynthInfo(`%cGS Patch name: %c${patchName}`,consoleColors.info,consoleColors.value);break;}case 51:SpessaSynthInfo(`%cGS Reverb level: %c${messageValue}`,consoleColors.info,consoleColors.value);this.privateProps.reverbSend=messageValue/64;break;// Unsupported reverb params
case 48:case 49:case 50:case 52:case 53:case 55:SpessaSynthInfo(`%cUnsupported GS Reverb Parameter: %c${syx[6].toString(16)}`,consoleColors.warn,consoleColors.unrecognized);break;case 58:SpessaSynthInfo(`%cGS Chorus level: %c${messageValue}`,consoleColors.info,consoleColors.value);this.privateProps.chorusSend=messageValue/64;break;// Unsupported chorus params
case 56:case 57:case 59:case 60:case 61:case 62:case 63:case 64:SpessaSynthInfo(`%cUnsupported GS Chorus Parameter: %c${syx[6].toString(16)}`,consoleColors.warn,consoleColors.unrecognized);break;}}}else{notRecognized2();}return;}case 69:{if(syx[4]===16){if(syx[5]===0){this.privateProps.callEvent("synthDisplay",Array.from(syx));}else if(syx[5]===1){this.privateProps.callEvent("synthDisplay",Array.from(syx));}else{notRecognized2();}}return;}case 22:if(syx[4]===16){this.setMIDIVolume(syx[7]/100);SpessaSynthInfo(`%cRoland Master Volume control set to: %c${syx[7]}%c via: %c${arrayToHexString(syx)}`,consoleColors.info,consoleColors.value,consoleColors.info,consoleColors.value);return;}}}else{SpessaSynthInfo(`%cUnrecognized Roland SysEx: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);return;}break;// Yamaha
// http://www.studio4all.de/htmle/main91.html
case 67:if(syx[2]===76){if(syx[3]===0&&syx[4]===0){switch(syx[5]){// Master volume
case 4:{const vol=syx[6];this.setMIDIVolume(vol/127);SpessaSynthInfo(`%cXG master volume. Volume: %c${vol}`,consoleColors.info,consoleColors.recognized);break;}// Master transpose
case 6:{const transpose=syx[6]-64;this.setMasterParameter("transposition",transpose);SpessaSynthInfo(`%cXG master transpose. Volume: %c${transpose}`,consoleColors.info,consoleColors.recognized);break;}// XG on
case 126:SpessaSynthInfo("%cXG system on",consoleColors.info);this.resetAllControllers(false);this.setMasterParameter("midiSystem","xg");break;}}else if(syx[3]===8){if(!BankSelectHacks.isSystemXG(this.privateProps.masterParameters.midiSystem)){return;}const channel=syx[4]+channelOffset;if(channel>=this.midiChannels.length){return;}const channelObject=this.midiChannels[channel];const value=syx[6];switch(syx[5]){// Bank-select MSB
case 1:channelObject.controllerChange(midiControllers.bankSelect,value);break;// Bank-select LSB
case 2:channelObject.controllerChange(midiControllers.bankSelectLSB,value);break;// Program change
case 3:channelObject.programChange(value);break;// Note shift
case 8:{if(channelObject.drumChannel){return;}channelObject.channelTransposeKeyShift=value-64;break;}// Volume
case 11:channelObject.controllerChange(midiControllers.mainVolume,value);break;// Pan position
case 14:{const pan=value;if(pan===0){channelObject.randomPan=true;SpessaSynthInfo(`%cRandom pan is set to %cON%c for %c${channel}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.value);}else{channelObject.controllerChange(midiControllers.pan,pan);}break;}// Reverb
case 19:channelObject.controllerChange(midiControllers.reverbDepth,value);break;// Chorus
case 18:channelObject.controllerChange(midiControllers.chorusDepth,value);break;default:SpessaSynthInfo(`%cUnrecognized Yamaha XG Part Setup: %c${syx[5].toString(16).toUpperCase()}`,consoleColors.warn,consoleColors.unrecognized);}}else if(syx[3]===6&&// XG System parameter
syx[4]===0){this.privateProps.callEvent("synthDisplay",Array.from(syx));}else if(BankSelectHacks.isSystemXG(this.privateProps.masterParameters.midiSystem)){SpessaSynthInfo(`%cUnrecognized Yamaha XG SysEx: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);}}else{if(BankSelectHacks.isSystemXG(this.privateProps.masterParameters.midiSystem)){SpessaSynthInfo(`%cUnrecognized Yamaha SysEx: %c${arrayToHexString(syx)}`,consoleColors.warn,consoleColors.unrecognized);}}break;}}var ChannelSnapshot=class _ChannelSnapshot{/**
     * The MIDI patch that the channel is using.
     */patch;/**
     * Indicates whether the channel's program change is disabled.
     */lockPreset;/**
     * Indicates the MIDI system when the preset was locked
     */lockedSystem;/**
     * The array of all MIDI controllers (in 14-bit values) with the modulator sources at the end.
     */midiControllers;/**
     * An array of booleans, indicating if the controller with a current index is locked.
     */lockedControllers;/**
     * Array of custom (not SF2) control values such as RPN pitch tuning, transpose, modulation depth, etc.
     */customControllers;/**
     * Indicates whether the channel vibrato is locked.
     */lockVibrato;/**
     * The channel's vibrato settings.
     * @property depth Vibrato depth, in gain.
     * @property delay Vibrato delay from note on in seconds.
     * @property rate Vibrato rate in Hz.
     */channelVibrato;/**
     * Key shift for the channel.
     */channelTransposeKeyShift;/**
     * The channel's octave tuning in cents.
     */channelOctaveTuning;/**
     * Indicates whether the channel is muted.
     */isMuted;/**
     * Indicates whether the channel is a drum channel.
     */drumChannel;/**
     * The channel number this snapshot represents.
     */channelNumber;// Creates a new channel snapshot.
constructor(patch,lockPreset,lockedSystem,midiControllers2,lockedControllers,customControllers2,lockVibrato,channelVibrato,channelTransposeKeyShift,channelOctaveTuning,isMuted,drumChannel,channelNumber){this.patch=patch;this.lockPreset=lockPreset;this.lockedSystem=lockedSystem;this.midiControllers=midiControllers2;this.lockedControllers=lockedControllers;this.customControllers=customControllers2;this.lockVibrato=lockVibrato;this.channelVibrato=channelVibrato;this.channelTransposeKeyShift=channelTransposeKeyShift;this.channelOctaveTuning=channelOctaveTuning;this.isMuted=isMuted;this.drumChannel=drumChannel;this.channelNumber=channelNumber;}/**
     * Creates a copy of existing snapshot.
     * @param snapshot The snapshot to create a copy from.
     */static copyFrom(snapshot){return new _ChannelSnapshot({...snapshot.patch},snapshot.lockPreset,snapshot.lockedSystem,snapshot.midiControllers.slice(),[...snapshot.lockedControllers],snapshot.customControllers.slice(),snapshot.lockVibrato,{...snapshot.channelVibrato},snapshot.channelTransposeKeyShift,snapshot.channelOctaveTuning,snapshot.isMuted,snapshot.drumChannel,snapshot.channelNumber);}/**
     * Creates a snapshot of the channel's state.
     * @param spessaSynthProcessor The synthesizer processor containing the channel.
     * @param channelNumber The channel number to snapshot.
     */static create(spessaSynthProcessor,channelNumber){var _channelObject$preset;const channelObject=spessaSynthProcessor.midiChannels[channelNumber];return new _ChannelSnapshot({...channelObject.patch,name:(channelObject===null||channelObject===void 0||(_channelObject$preset=channelObject.preset)===null||_channelObject$preset===void 0?void 0:_channelObject$preset.name)??"undefined"},channelObject.lockPreset,channelObject.lockedSystem,channelObject.midiControllers.slice(),[...channelObject.lockedControllers],channelObject.customControllers.slice(),channelObject.lockGSNRPNParams,{...channelObject.channelVibrato},channelObject.channelTransposeKeyShift,channelObject.channelOctaveTuning.slice(),channelObject.isMuted,channelObject.drumChannel,channelNumber);}/**
     * Applies the snapshot to the specified channel.
     * @param spessaSynthProcessor The processor containing the channel.
     */apply(spessaSynthProcessor){const channelObject=spessaSynthProcessor.midiChannels[this.channelNumber];channelObject.muteChannel(this.isMuted);channelObject.setDrums(this.drumChannel);channelObject.midiControllers.set(this.midiControllers);channelObject.lockedControllers=this.lockedControllers;channelObject.customControllers.set(this.customControllers);channelObject.updateChannelTuning();channelObject.channelVibrato=this.channelVibrato;channelObject.lockGSNRPNParams=this.lockVibrato;channelObject.channelTransposeKeyShift=this.channelTransposeKeyShift;channelObject.channelOctaveTuning=this.channelOctaveTuning;channelObject.setPresetLock(false);channelObject.setPatch(this.patch);channelObject.setPresetLock(this.lockPreset);channelObject.lockedSystem=this.lockedSystem;}};var KeyModifier=class{/**
     * The new override velocity. -1 means unchanged.
     */velocity=-1;/**
     * The MIDI patch this key uses. -1 on any property means unchanged.
     */patch={bankLSB:-1,bankMSB:-1,isGMGSDrum:false,program:-1};/**
     * Linear gain override for the voice.
     */gain=1;};var KeyModifierManager=class{/**
     * The velocity override mappings for MIDI keys
     * stored as [channelNumber][midiNote].
     */keyMappings=[];// noinspection JSUnusedGlobalSymbols
/**
     * Add a mapping for a MIDI key to a KeyModifier.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     * @param mapping The KeyModifier to apply for this key.
     */addMapping(channel,midiNote,mapping){this.keyMappings[channel]??=[];this.keyMappings[channel][midiNote]=mapping;}// noinspection JSUnusedGlobalSymbols
/**
     * Delete a mapping for a MIDI key.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     */deleteMapping(channel,midiNote){var _this$keyMappings$cha;if(((_this$keyMappings$cha=this.keyMappings[channel])===null||_this$keyMappings$cha===void 0?void 0:_this$keyMappings$cha[midiNote])===void 0){return;}this.keyMappings[channel][midiNote]=void 0;}// noinspection JSUnusedGlobalSymbols
/**
     * Clear all key mappings.
     */clearMappings(){this.keyMappings=[];}/**
     * Sets the key mappings to a new array.
     * @param mappings A 2D array where the first dimension is the channel number and the second dimension is the MIDI note number.
     */setMappings(mappings){this.keyMappings=mappings;}/**
     * Returns the current key mappings.
     */getMappings(){return this.keyMappings;}/**
     * Gets the velocity override for a MIDI key.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     * @returns The velocity override, or -1 if no override is set.
     */getVelocity(channel,midiNote){var _this$keyMappings$cha2;return((_this$keyMappings$cha2=this.keyMappings[channel])===null||_this$keyMappings$cha2===void 0||(_this$keyMappings$cha2=_this$keyMappings$cha2[midiNote])===null||_this$keyMappings$cha2===void 0?void 0:_this$keyMappings$cha2.velocity)??-1;}/**
     * Gets the gain override for a MIDI key.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     * @returns The gain override, or 1 if no override is set.
     */getGain(channel,midiNote){var _this$keyMappings$cha3;return((_this$keyMappings$cha3=this.keyMappings[channel])===null||_this$keyMappings$cha3===void 0||(_this$keyMappings$cha3=_this$keyMappings$cha3[midiNote])===null||_this$keyMappings$cha3===void 0?void 0:_this$keyMappings$cha3.gain)??1;}/**
     * Checks if a MIDI key has an override for the patch.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     * @returns True if the key has an override patch, false otherwise.
     */hasOverridePatch(channel,midiNote){var _this$keyMappings$cha4;const bank=(_this$keyMappings$cha4=this.keyMappings[channel])===null||_this$keyMappings$cha4===void 0||(_this$keyMappings$cha4=_this$keyMappings$cha4[midiNote])===null||_this$keyMappings$cha4===void 0||(_this$keyMappings$cha4=_this$keyMappings$cha4.patch)===null||_this$keyMappings$cha4===void 0?void 0:_this$keyMappings$cha4.bankMSB;return bank!==void 0&&bank>=0;}/**
     * Gets the patch override for a MIDI key.
     * @param channel The MIDI channel number.
     * @param midiNote The MIDI note number (0-127).
     * @returns An object containing the bank and program numbers.
     * @throws Error if no modifier is set for the key.
     */getPatch(channel,midiNote){var _this$keyMappings$cha5;const modifier=(_this$keyMappings$cha5=this.keyMappings[channel])===null||_this$keyMappings$cha5===void 0?void 0:_this$keyMappings$cha5[midiNote];if(modifier){return modifier.patch;}throw new Error("No modifier.");}};var SynthesizerSnapshot=class _SynthesizerSnapshot{/**
     * The individual channel snapshots.
     */channelSnapshots;/**
     * Key modifiers.
     */keyMappings;masterParameters;constructor(channelSnapshots,masterParameters,keyMappings){this.channelSnapshots=channelSnapshots;this.masterParameters=masterParameters;this.keyMappings=keyMappings;}/**
     * Creates a new synthesizer snapshot from the given SpessaSynthProcessor.
     * @param processor the processor to take a snapshot of.
     * @returns The snapshot.
     */static create(processor){const channelSnapshots=processor.midiChannels.map((_,i)=>ChannelSnapshot.create(processor,i));return new _SynthesizerSnapshot(channelSnapshots,processor.getAllMasterParameters(),processor.keyModifierManager.getMappings());}// noinspection JSUnusedGlobalSymbols
/**
     * Creates a copy of existing snapshot.
     * @param snapshot The snapshot to create a copy from.
     */static copyFrom(snapshot){return new _SynthesizerSnapshot(snapshot.channelSnapshots.map(s=>ChannelSnapshot.copyFrom(s)),{...snapshot.masterParameters},[...snapshot.keyMappings]);}/**
     * Applies the snapshot to the synthesizer.
     * @param processor the processor to apply the snapshot to.
     */apply(processor){const entries=Object.entries(this.masterParameters);entries.forEach(([parameter,value])=>{processor.setMasterParameter(parameter,value);});processor.keyModifierManager.setMappings(this.keyMappings);while(processor.midiChannels.length<this.channelSnapshots.length){processor.createMIDIChannel();}this.channelSnapshots.forEach(channelSnapshot=>{channelSnapshot.apply(processor);});}};var DEFAULT_MASTER_PARAMETERS={masterGain:SYNTHESIZER_GAIN,masterPan:0,voiceCap:VOICE_CAP,interpolationType:interpolationTypes.hermite,midiSystem:DEFAULT_SYNTH_MODE,monophonicRetriggerMode:false,reverbGain:1,chorusGain:1,blackMIDIMode:false,transposition:0,deviceID:ALL_CHANNELS_OR_DIFFERENT_ACTION};var ProtectedSynthValues=class{/**
     * This.tunings[program][key] = tuning
     */tunings=[];// The master parameters of the synthesizer.
masterParameters=DEFAULT_MASTER_PARAMETERS;/**
     * The volume gain, set by MIDI sysEx
     */midiVolume=1;/**
     * Set via system exclusive.
     */reverbSend=1;/**
     * Set via system exclusive.
     */chorusSend=1;/**
     * The pan of the left channel
     */panLeft=0.5;/**
     * The pan of the right channel
     */panRight=0.5;/**
     * Synth's default (reset) preset
     */defaultPreset;/**
     * Synth's default (reset) drum preset
     */drumPreset;// Volume envelope smoothing factor, adjusted to the sample rate.
volumeEnvelopeSmoothingFactor;// Pan smoothing factor, adjusted to the sample rate.
panSmoothingFactor;// Filter smoothing factor, adjusted to the sample rate.
filterSmoothingFactor;/**
     * Calls when an event occurs.
     * @param eventType The event type.
     * @param eventData The event data.
     */eventCallbackHandler;getVoices;voiceKilling;/**
     * Cached voices for all presets for this synthesizer.
     * Nesting goes like this:
     * this.cachedVoices[bankMSB][bankLSB][programNumber][midiNote][velocity] = a list of voices for that.
     */cachedVoices=[];constructor(eventCallbackHandler,getVoices,voiceKillingFunction,volumeEnvelopeSmoothingFactor,panSmoothingFactor,filterSmoothingFactor){this.eventCallbackHandler=eventCallbackHandler;this.getVoices=getVoices;this.voiceKilling=voiceKillingFunction;this.volumeEnvelopeSmoothingFactor=volumeEnvelopeSmoothingFactor;this.panSmoothingFactor=panSmoothingFactor;this.filterSmoothingFactor=filterSmoothingFactor;for(let i=0;i<128;i++){this.tunings.push([]);}}/**
     * Copied callback so MIDI channels can call it.
     */callEvent(eventName,eventData){this.eventCallbackHandler(eventName,eventData);}};function getLFOValue(startTime,frequency,currentTime){if(currentTime<startTime){return 0;}const xVal=(currentTime-startTime)/(1/frequency)+0.25;return Math.abs(xVal-~~(xVal+0.5))*4-1;}var WavetableOscillator=class _WavetableOscillator{/**
     * Fills the output buffer with raw sample data using a given interpolation.
     * @param voice The voice we're working on.
     * @param outputBuffer The output buffer to write to.
     * @param interpolation The interpolation type.
     */static getSample(voice,outputBuffer,interpolation){const step=voice.currentTuningCalculated*voice.sample.playbackStep;if(step===1){_WavetableOscillator.getSampleNearest(voice,outputBuffer,step);return;}switch(interpolation){case interpolationTypes.hermite:this.getSampleHermite(voice,outputBuffer,step);return;case interpolationTypes.linear:default:this.getSampleLinear(voice,outputBuffer,step);return;case interpolationTypes.nearestNeighbor:_WavetableOscillator.getSampleNearest(voice,outputBuffer,step);return;}}/**
     * Fills the output buffer with raw sample data using linear interpolation.
     * @param voice The voice we're working on.
     * @param outputBuffer The output buffer to write to.
     * @param step The step to advance every sample (playback rate).
     */static getSampleLinear(voice,outputBuffer,step){const sample=voice.sample;let cur=sample.cursor;const sampleData=sample.sampleData;if(sample.isLooping){const loopLength=sample.loopEnd-sample.loopStart;for(let i=0;i<outputBuffer.length;i++){while(cur>=sample.loopEnd){cur-=loopLength;}const floor=~~cur;let ceil=floor+1;while(ceil>=sample.loopEnd){ceil-=loopLength;}const fraction=cur-floor;const upper=sampleData[ceil];const lower=sampleData[floor];outputBuffer[i]=lower+(upper-lower)*fraction;cur+=step;}}else{for(let i=0;i<outputBuffer.length;i++){const floor=~~cur;const ceil=floor+1;if(ceil>=sample.end){voice.finished=true;return;}const fraction=cur-floor;const upper=sampleData[ceil];const lower=sampleData[floor];outputBuffer[i]=lower+(upper-lower)*fraction;cur+=step;}}voice.sample.cursor=cur;}/**
     * Fills the output buffer with raw sample data using no interpolation (nearest neighbor).
     * @param voice The voice we're working on.
     * @param outputBuffer The output buffer to write to.
     * @param step The step to advance every sample (playback rate).
     */static getSampleNearest(voice,outputBuffer,step){const sample=voice.sample;let cur=sample.cursor;const sampleData=sample.sampleData;if(sample.isLooping){const loopLength=sample.loopEnd-sample.loopStart;for(let i=0;i<outputBuffer.length;i++){while(cur>=sample.loopEnd){cur-=loopLength;}let ceil=~~cur+1;while(ceil>=sample.loopEnd){ceil-=loopLength;}outputBuffer[i]=sampleData[ceil];cur+=step;}}else{for(let i=0;i<outputBuffer.length;i++){const ceil=~~cur+1;if(ceil>=sample.end){voice.finished=true;return;}outputBuffer[i]=sampleData[ceil];cur+=step;}}sample.cursor=cur;}/**
     * Fills the output buffer with raw sample data using Hermite interpolation.
     * @param voice The voice we're working on.
     * @param outputBuffer The output buffer to write to.
     * @param step The step to advance every sample (playback rate).
     */static getSampleHermite(voice,outputBuffer,step){const sample=voice.sample;let cur=sample.cursor;const sampleData=sample.sampleData;if(sample.isLooping){const loopLength=sample.loopEnd-sample.loopStart;for(let i=0;i<outputBuffer.length;i++){while(cur>=sample.loopEnd){cur-=loopLength;}const y0=~~cur;let y1=y0+1;let y2=y0+2;let y3=y0+3;const t=cur-y0;if(y1>=sample.loopEnd){y1-=loopLength;}if(y2>=sample.loopEnd){y2-=loopLength;}if(y3>=sample.loopEnd){y3-=loopLength;}const xm1=sampleData[y0];const x0=sampleData[y1];const x1=sampleData[y2];const x2=sampleData[y3];const c=(x1-xm1)*0.5;const v=x0-x1;const w=c+v;const a=w+v+(x2-x0)*0.5;const b=w+a;outputBuffer[i]=((a*t-b)*t+c)*t+x0;cur+=step;}}else{for(let i=0;i<outputBuffer.length;i++){const y0=~~cur;const y1=y0+1;const y2=y0+2;const y3=y0+3;const t=cur-y0;if(y1>=sample.end||y2>=sample.end||y3>=sample.end){voice.finished=true;return;}const xm1=sampleData[y0];const x0=sampleData[y1];const x1=sampleData[y2];const x2=sampleData[y3];const c=(x1-xm1)*0.5;const v=x0-x1;const w=c+v;const a=w+v+(x2-x0)*0.5;const b=w+a;outputBuffer[i]=((a*t-b)*t+c)*t+x0;cur+=step;}}voice.sample.cursor=cur;}};function renderVoice(voice,timeNow,outputLeft,outputRight,reverbOutputLeft,reverbOutputRight,chorusOutputLeft,chorusOutputRight,startIndex,sampleCount){var _this$synthProps$tuni,_this$preset;if(!voice.isInRelease){if(timeNow>=voice.releaseStartTime){voice.isInRelease=true;VolumeEnvelope.startRelease(voice);ModulationEnvelope.startRelease(voice);if(voice.sample.loopingMode===3){voice.sample.isLooping=false;}}}if(voice.modulatedGenerators[generatorTypes.initialAttenuation]>2500){if(voice.isInRelease){voice.finished=true;}return voice.finished;}let targetKey=voice.targetKey;let cents=voice.modulatedGenerators[generatorTypes.fineTune]+// Soundfont fine tune
this.channelOctaveTuning[voice.midiNote]+// MTS octave tuning
this.channelTuningCents;let semitones=voice.modulatedGenerators[generatorTypes.coarseTune];const tuning=(_this$synthProps$tuni=this.synthProps.tunings[((_this$preset=this.preset)===null||_this$preset===void 0?void 0:_this$preset.program)??0])===null||_this$synthProps$tuni===void 0?void 0:_this$synthProps$tuni[voice.realKey];if(tuning!==null&&tuning!==void 0&&tuning.centTuning){targetKey=tuning.midiNote;cents+=tuning.centTuning;}if(voice.portamentoFromKey>-1){const elapsed=Math.min((timeNow-voice.startTime)/voice.portamentoDuration,1);const diff=targetKey-voice.portamentoFromKey;semitones-=diff*(1-elapsed);}cents+=(targetKey-voice.sample.rootKey)*voice.modulatedGenerators[generatorTypes.scaleTuning];let lowpassExcursion=0;let volumeExcursionCentibels=0;const vibPitchDepth=voice.modulatedGenerators[generatorTypes.vibLfoToPitch];const vibVolDepth=voice.modulatedGenerators[generatorTypes.vibLfoToVolume];const vibFilterDepth=voice.modulatedGenerators[generatorTypes.vibLfoToFilterFc];if(vibPitchDepth!==0||vibVolDepth!==0||vibFilterDepth!==0){const vibStart=voice.startTime+timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayVibLFO]);const vibFreqHz=absCentsToHz(voice.modulatedGenerators[generatorTypes.freqVibLFO]);const vibLfoValue=getLFOValue(vibStart,vibFreqHz,timeNow);cents+=vibLfoValue*(vibPitchDepth*this.customControllers[customControllers.modulationMultiplier]);volumeExcursionCentibels+=-vibLfoValue*vibVolDepth;lowpassExcursion+=vibLfoValue*vibFilterDepth;}const modPitchDepth=voice.modulatedGenerators[generatorTypes.modLfoToPitch];const modVolDepth=voice.modulatedGenerators[generatorTypes.modLfoToVolume];const modFilterDepth=voice.modulatedGenerators[generatorTypes.modLfoToFilterFc];if(modPitchDepth!==0||modFilterDepth!==0||modVolDepth!==0){const modStart=voice.startTime+timecentsToSeconds(voice.modulatedGenerators[generatorTypes.delayModLFO]);const modFreqHz=absCentsToHz(voice.modulatedGenerators[generatorTypes.freqModLFO]);const modLfoValue=getLFOValue(modStart,modFreqHz,timeNow);cents+=modLfoValue*(modPitchDepth*this.customControllers[customControllers.modulationMultiplier]);volumeExcursionCentibels+=-modLfoValue*modVolDepth;lowpassExcursion+=modLfoValue*modFilterDepth;}if(this.channelVibrato.depth>0){const channelVibrato=getLFOValue(voice.startTime+this.channelVibrato.delay,this.channelVibrato.rate,timeNow);if(channelVibrato){cents+=channelVibrato*this.channelVibrato.depth;}}const modEnvPitchDepth=voice.modulatedGenerators[generatorTypes.modEnvToPitch];const modEnvFilterDepth=voice.modulatedGenerators[generatorTypes.modEnvToFilterFc];if(modEnvFilterDepth!==0||modEnvPitchDepth!==0){const modEnv=ModulationEnvelope.getValue(voice,timeNow);lowpassExcursion+=modEnv*modEnvFilterDepth;cents+=modEnv*modEnvPitchDepth;}volumeExcursionCentibels-=voice.resonanceOffset;const centsTotal=~~(cents+semitones*100);if(centsTotal!==voice.currentTuningCents){voice.currentTuningCents=centsTotal;voice.currentTuningCalculated=Math.pow(2,centsTotal/1200);}const bufferOut=new Float32Array(sampleCount);if(voice.sample.loopingMode===2&&!voice.isInRelease){VolumeEnvelope.apply(voice,bufferOut,volumeExcursionCentibels,this.synthProps.volumeEnvelopeSmoothingFactor);return voice.finished;}WavetableOscillator.getSample(voice,bufferOut,this.synthProps.masterParameters.interpolationType);LowpassFilter.apply(voice,bufferOut,lowpassExcursion,this.synthProps.filterSmoothingFactor);VolumeEnvelope.apply(voice,bufferOut,volumeExcursionCentibels,this.synthProps.volumeEnvelopeSmoothingFactor);this.panAndMixVoice(voice,bufferOut,outputLeft,outputRight,reverbOutputLeft,reverbOutputRight,chorusOutputLeft,chorusOutputRight,startIndex);return voice.finished;}var registeredParameterTypes={pitchWheelRange:0,fineTuning:1,coarseTuning:2,modulationDepth:5,resetParameters:16383};var nonRegisteredMSB={partParameter:1,awe32:127,SF2:120};var nonRegisteredGSLSB={vibratoRate:8,vibratoDepth:9,vibratoDelay:10,TVFFilterCutoff:32,TVFFilterResonance:33,EGAttackTime:99,EGReleaseTime:102};function dataEntryCoarse(dataValue){this.midiControllers[midiControllers.dataEntryMSB]=dataValue<<7;const addDefaultVibrato=()=>{if(this.channelVibrato.delay===0&&this.channelVibrato.rate===0&&this.channelVibrato.depth===0){this.channelVibrato.depth=50;this.channelVibrato.rate=8;this.channelVibrato.delay=0.6;}};const coolInfo=(what,value,type)=>{if(type.length>0){type=" "+type;}SpessaSynthInfo(`%c${what} for %c${this.channelNumber}%c is now set to %c${value}%c${type}.`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.value,consoleColors.info);};switch(this.dataEntryState){default:case dataEntryStates.Idle:break;// Process GS NRPNs
case dataEntryStates.NRPFine:{if(this.lockGSNRPNParams){return;}const NRPNCoarse=this.midiControllers[midiControllers.nonRegisteredParameterMSB]>>7;const NRPNFine=this.midiControllers[midiControllers.nonRegisteredParameterLSB]>>7;const dataEntryFine2=this.midiControllers[midiControllers.dataEntryLSB]>>7;switch(NRPNCoarse){default:if(dataValue===64){return;}SpessaSynthInfo(`%cUnrecognized NRPN for %c${this.channelNumber}%c: %c(0x${NRPNFine.toString(16).toUpperCase()} 0x${NRPNFine.toString(16).toUpperCase()})%c data value: %c${dataValue}`,consoleColors.warn,consoleColors.recognized,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);break;// Part parameters: vibrato, cutoff
case nonRegisteredMSB.partParameter:switch(NRPNFine){default:if(dataValue===64){return;}SpessaSynthInfo(`%cUnrecognized NRPN for %c${this.channelNumber}%c: %c(0x${NRPNCoarse.toString(16)} 0x${NRPNFine.toString(16)})%c data value: %c${dataValue}`,consoleColors.warn,consoleColors.recognized,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);break;// Vibrato rate
case nonRegisteredGSLSB.vibratoRate:if(dataValue===64){return;}addDefaultVibrato();this.channelVibrato.rate=dataValue/64*8;coolInfo("Vibrato rate",`${dataValue} = ${this.channelVibrato.rate}`,"Hz");break;// Vibrato depth
case nonRegisteredGSLSB.vibratoDepth:if(dataValue===64){return;}addDefaultVibrato();this.channelVibrato.depth=dataValue/2;coolInfo("Vibrato depth",`${dataValue} = ${this.channelVibrato.depth}`,"cents of detune");break;// Vibrato delay
case nonRegisteredGSLSB.vibratoDelay:if(dataValue===64){return;}addDefaultVibrato();this.channelVibrato.delay=dataValue/64/3;coolInfo("Vibrato delay",`${dataValue} = ${this.channelVibrato.delay}`,"seconds");break;// Filter cutoff
case nonRegisteredGSLSB.TVFFilterCutoff:this.controllerChange(midiControllers.brightness,dataValue);coolInfo("Filter cutoff",dataValue.toString(),"");break;// Attack time
case nonRegisteredGSLSB.EGAttackTime:this.controllerChange(midiControllers.attackTime,dataValue);coolInfo("EG attack time",dataValue.toString(),"");break;// Release time
case nonRegisteredGSLSB.EGReleaseTime:this.controllerChange(midiControllers.releaseTime,dataValue);coolInfo("EG release time",dataValue.toString(),"");break;}break;case nonRegisteredMSB.awe32:break;// SF2 NRPN
case nonRegisteredMSB.SF2:{if(NRPNFine>100){break;}const gen=this.customControllers[customControllers.sf2NPRNGeneratorLSB];const offset=(dataValue<<7|dataEntryFine2)-8192;this.setGeneratorOffset(gen,offset);break;}}break;}case dataEntryStates.RPCoarse:case dataEntryStates.RPFine:{const rpnValue=this.midiControllers[midiControllers.registeredParameterMSB]|this.midiControllers[midiControllers.registeredParameterLSB]>>7;switch(rpnValue){default:SpessaSynthInfo(`%cUnrecognized RPN for %c${this.channelNumber}%c: %c(0x${rpnValue.toString(16)})%c data value: %c${dataValue}`,consoleColors.warn,consoleColors.recognized,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);break;// Pitch bend range
case registeredParameterTypes.pitchWheelRange:this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheelRange]=dataValue<<7;coolInfo("Pitch wheel range",dataValue.toString(),"semitones");break;// Coarse tuning
case registeredParameterTypes.coarseTuning:{const semitones=dataValue-64;this.setCustomController(customControllers.channelTuningSemitones,semitones);coolInfo("Coarse tuning",semitones.toString(),"semitones");break;}// Fine-tuning
case registeredParameterTypes.fineTuning:this.setTuning(dataValue-64,false);break;// Modulation depth
case registeredParameterTypes.modulationDepth:this.setModulationDepth(dataValue*100);break;case registeredParameterTypes.resetParameters:this.resetParameters();break;}}}}var AWE_NRPN_GENERATOR_MAPPINGS=[generatorTypes.delayModLFO,generatorTypes.freqModLFO,generatorTypes.delayVibLFO,generatorTypes.freqVibLFO,generatorTypes.delayModEnv,generatorTypes.attackModEnv,generatorTypes.holdModEnv,generatorTypes.decayModEnv,generatorTypes.sustainModEnv,generatorTypes.releaseModEnv,generatorTypes.delayVolEnv,generatorTypes.attackVolEnv,generatorTypes.holdVolEnv,generatorTypes.decayVolEnv,generatorTypes.sustainVolEnv,generatorTypes.releaseVolEnv,generatorTypes.fineTune,generatorTypes.modLfoToPitch,generatorTypes.vibLfoToPitch,generatorTypes.modEnvToPitch,generatorTypes.modLfoToVolume,generatorTypes.initialFilterFc,generatorTypes.initialFilterQ,generatorTypes.modLfoToFilterFc,generatorTypes.modEnvToFilterFc,generatorTypes.chorusEffectsSend,generatorTypes.reverbEffectsSend];function handleAWE32NRPN(aweGen,dataLSB,dataMSB){const clip=(v,min,max)=>Math.max(min,Math.min(max,v));const msecToTimecents=ms=>Math.max(-32768,1200*Math.log2(ms/1e3));const hzToCents=hz=>6900+1200*Math.log2(hz/440);let dataValue=dataMSB<<7|dataLSB;dataValue-=8192;const generator=AWE_NRPN_GENERATOR_MAPPINGS[aweGen];if(!generator){SpessaSynthWarn(`Invalid AWE32 LSB: %c${aweGen}`,consoleColors.unrecognized);}let milliseconds,hertz,centibels,cents;switch(generator){default:break;// Delays
case generatorTypes.delayModLFO:case generatorTypes.delayVibLFO:case generatorTypes.delayVolEnv:case generatorTypes.delayModEnv:milliseconds=4*clip(dataValue,0,5900);this.setGeneratorOverride(generator,msecToTimecents(milliseconds));break;// Attacks
case generatorTypes.attackVolEnv:case generatorTypes.attackModEnv:milliseconds=clip(dataValue,0,5940);this.setGeneratorOverride(generator,msecToTimecents(milliseconds));break;// Holds
case generatorTypes.holdVolEnv:case generatorTypes.holdModEnv:milliseconds=clip(dataValue,0,8191);this.setGeneratorOverride(generator,msecToTimecents(milliseconds));break;// Decays and releases (share clips and units)
case generatorTypes.decayModEnv:case generatorTypes.decayVolEnv:case generatorTypes.releaseVolEnv:case generatorTypes.releaseModEnv:milliseconds=4*clip(dataValue,0,5940);this.setGeneratorOverride(generator,msecToTimecents(milliseconds));break;// Lfo frequencies
case generatorTypes.freqVibLFO:case generatorTypes.freqModLFO:hertz=0.084*dataLSB;this.setGeneratorOverride(generator,hzToCents(hertz),true);break;// Sustains
case generatorTypes.sustainVolEnv:case generatorTypes.sustainModEnv:centibels=dataLSB*7.5;this.setGeneratorOverride(generator,centibels);break;// Pitch
case generatorTypes.fineTune:this.setGeneratorOverride(generator,dataValue,true);break;// Lfo to pitch
case generatorTypes.modLfoToPitch:case generatorTypes.vibLfoToPitch:cents=clip(dataValue,-127,127)*9.375;this.setGeneratorOverride(generator,cents,true);break;// Env to pitch
case generatorTypes.modEnvToPitch:cents=clip(dataValue,-127,127)*9.375;this.setGeneratorOverride(generator,cents);break;// Mod lfo to vol
case generatorTypes.modLfoToVolume:centibels=1.875*dataLSB;this.setGeneratorOverride(generator,centibels,true);break;// Filter fc
case generatorTypes.initialFilterFc:{const fcCents=4335+59*dataLSB;this.setGeneratorOverride(generator,fcCents,true);break;}// Filter Q
case generatorTypes.initialFilterQ:centibels=215*(dataLSB/127);this.setGeneratorOverride(generator,centibels,true);break;// To filterFc
case generatorTypes.modLfoToFilterFc:cents=clip(dataValue,-64,63)*56.25;this.setGeneratorOverride(generator,cents,true);break;case generatorTypes.modEnvToFilterFc:cents=clip(dataValue,-64,63)*56.25;this.setGeneratorOverride(generator,cents);break;// Effects
case generatorTypes.chorusEffectsSend:case generatorTypes.reverbEffectsSend:this.setGeneratorOverride(generator,clip(dataValue,0,255)*(1e3/255));break;}}function dataEntryFine(dataValue){this.midiControllers[midiControllers.dataEntryLSB]=dataValue<<7;switch(this.dataEntryState){default:break;case dataEntryStates.RPCoarse:case dataEntryStates.RPFine:{const rpnValue=this.midiControllers[midiControllers.registeredParameterMSB]|this.midiControllers[midiControllers.registeredParameterLSB]>>7;switch(rpnValue){default:break;// Pitch bend range fine tune
case registeredParameterTypes.pitchWheelRange:{if(dataValue===0){break;}this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheelRange]|=dataValue;const actualTune=(this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheelRange]>>7)+dataValue/128;SpessaSynthInfo(`%cChannel ${this.channelNumber} pitch wheel range. Semitones: %c${actualTune}`,consoleColors.info,consoleColors.value);break;}// Fine-tuning
case registeredParameterTypes.fineTuning:{const coarse=this.customControllers[customControllers.channelTuning];const finalTuning=coarse<<7|dataValue;this.setTuning(finalTuning*0.01220703125);break;}// Modulation depth
case registeredParameterTypes.modulationDepth:{const currentModulationDepthCents=this.customControllers[customControllers.modulationMultiplier]*50;const cents=currentModulationDepthCents+dataValue/128*100;this.setModulationDepth(cents);break;}case 16383:this.resetParameters();break;}break;}case dataEntryStates.NRPFine:{const NRPNCoarse=this.midiControllers[midiControllers.nonRegisteredParameterMSB]>>7;const NRPNFine=this.midiControllers[midiControllers.nonRegisteredParameterLSB]>>7;if(NRPNCoarse===nonRegisteredMSB.SF2){return;}switch(NRPNCoarse){default:SpessaSynthInfo(`%cUnrecognized NRPN LSB for %c${this.channelNumber}%c: %c(0x${NRPNFine.toString(16).toUpperCase()} 0x${NRPNFine.toString(16).toUpperCase()})%c data value: %c${dataValue}`,consoleColors.warn,consoleColors.recognized,consoleColors.warn,consoleColors.unrecognized,consoleColors.warn,consoleColors.value);break;case nonRegisteredMSB.awe32:handleAWE32NRPN.call(this,NRPNFine,dataValue,this.midiControllers[midiControllers.dataEntryMSB]>>7);break;}}}}function controllerChange(controllerNumber,controllerValue,sendEvent=true){if(controllerNumber>127){throw new Error("Invalid MIDI Controller.");}if(controllerNumber>=midiControllers.modulationWheelLSB&&controllerNumber<=midiControllers.effectControl2LSB&&controllerNumber!==midiControllers.dataEntryLSB){const actualCCNum=controllerNumber-32;if(this.lockedControllers[actualCCNum]){return;}this.midiControllers[actualCCNum]=this.midiControllers[actualCCNum]&16256|controllerValue&127;this.voices.forEach(v=>this.computeModulators(v,1,actualCCNum));}if(this.lockedControllers[controllerNumber]){return;}this.midiControllers[controllerNumber]=controllerValue<<7;{switch(controllerNumber){case midiControllers.allNotesOff:this.stopAllNotes();break;case midiControllers.allSoundOff:this.stopAllNotes(true);break;// Special case: bank select
case midiControllers.bankSelect:this.setBankMSB(controllerValue);if(this.channelNumber%16===DEFAULT_PERCUSSION&&BankSelectHacks.isSystemXG(this.channelSystem)){this.setBankMSB(127);}break;case midiControllers.bankSelectLSB:this.setBankLSB(controllerValue);break;// Check for RPN and NPRN and data entry
case midiControllers.registeredParameterLSB:this.dataEntryState=dataEntryStates.RPFine;break;case midiControllers.registeredParameterMSB:this.dataEntryState=dataEntryStates.RPCoarse;break;case midiControllers.nonRegisteredParameterMSB:this.customControllers[customControllers.sf2NPRNGeneratorLSB]=0;this.dataEntryState=dataEntryStates.NRPCoarse;break;case midiControllers.nonRegisteredParameterLSB:if(this.midiControllers[midiControllers.nonRegisteredParameterMSB]>>7===nonRegisteredMSB.SF2){if(this.customControllers[customControllers.sf2NPRNGeneratorLSB]%100!==0){this.customControllers[customControllers.sf2NPRNGeneratorLSB]=0;}if(controllerValue===100){this.customControllers[customControllers.sf2NPRNGeneratorLSB]+=100;}else if(controllerValue===101){this.customControllers[customControllers.sf2NPRNGeneratorLSB]+=1e3;}else if(controllerValue===102){this.customControllers[customControllers.sf2NPRNGeneratorLSB]+=1e4;}else if(controllerValue<100){this.customControllers[customControllers.sf2NPRNGeneratorLSB]+=controllerValue;}}this.dataEntryState=dataEntryStates.NRPFine;break;case midiControllers.dataEntryMSB:this.dataEntryCoarse(controllerValue);break;case midiControllers.dataEntryLSB:this.dataEntryFine(controllerValue);break;case midiControllers.resetAllControllers:this.resetControllersRP15Compliant();break;case midiControllers.sustainPedal:if(controllerValue<64){this.sustainedVoices.forEach(v=>{v.release(this.synth.currentSynthTime);});this.sustainedVoices=[];}break;// Default: just compute modulators
default:this.voices.forEach(v=>this.computeModulators(v,1,controllerNumber));break;}}if(!sendEvent){return;}this.synthProps.callEvent("controllerChange",{channel:this.channelNumber,controllerNumber,controllerValue});}var portamentoLookup={0:0,1:6e-3,2:0.023,4:0.05,8:0.11,16:0.25,32:0.5,64:2.06,80:4.2,96:8.4,112:19.5,116:26.7,120:40,124:80,127:480};function getLookup(value){if(portamentoLookup[value]!==void 0){return portamentoLookup[value];}let lower=null;let upper=null;for(const k of Object.keys(portamentoLookup)){const key=parseInt(k);if(key<value&&(lower===null||key>lower)){lower=key;}if(key>value&&(upper===null||key<upper)){upper=key;}}if(lower!==null&&upper!==null){const lowerTime=portamentoLookup[lower];const upperTime=portamentoLookup[upper];return lowerTime+(value-lower)*(upperTime-lowerTime)/(upper-lower);}return 0;}function portamentoTimeToSeconds(time,distance){return getLookup(time)*(distance/36);}function noteOn(midiNote,velocity){var _this$preset2,_this$synthProps$tuni2;if(velocity<1){this.noteOff(midiNote);return;}velocity=Math.min(127,velocity);if(this.synthProps.masterParameters.blackMIDIMode&&this.synth.totalVoicesAmount>200&&velocity<40||this.synthProps.masterParameters.blackMIDIMode&&velocity<10||this._isMuted){return;}if(!this.preset){SpessaSynthWarn(`No preset for channel ${this.channelNumber}!`);return;}const realKey=midiNote+this.channelTransposeKeyShift+this.customControllers[customControllers.channelKeyShift];let internalMidiNote=realKey;if(realKey>127||realKey<0){return;}const program=(_this$preset2=this.preset)===null||_this$preset2===void 0?void 0:_this$preset2.program;const tune=(_this$synthProps$tuni2=this.synthProps.tunings[program])===null||_this$synthProps$tuni2===void 0||(_this$synthProps$tuni2=_this$synthProps$tuni2[realKey])===null||_this$synthProps$tuni2===void 0?void 0:_this$synthProps$tuni2.midiNote;if(tune>=0){internalMidiNote=tune;}if(this.synthProps.masterParameters.monophonicRetriggerMode){this.killNote(midiNote,-7200);}const keyVel=this.synth.keyModifierManager.getVelocity(this.channelNumber,realKey);if(keyVel>-1){velocity=keyVel;}const voiceGain=this.synth.keyModifierManager.getGain(this.channelNumber,realKey);let portamentoFromKey=-1;let portamentoDuration=0;const portamentoTime=this.midiControllers[midiControllers.portamentoTime]>>7;const control=this.midiControllers[midiControllers.portamentoControl];const currentFromKey=control>>7;if(!this.drumChannel&&// No portamento on drum channel
currentFromKey!==internalMidiNote&&// If the same note, there's no portamento
this.midiControllers[midiControllers.portamentoOnOff]>=8192&&// (64 << 7)
portamentoTime>0){if(control!==1){const diff=Math.abs(internalMidiNote-currentFromKey);portamentoDuration=portamentoTimeToSeconds(portamentoTime,diff);portamentoFromKey=currentFromKey;}this.controllerChange(midiControllers.portamentoControl,internalMidiNote);}const voices=this.synthProps.getVoices(this.channelNumber,internalMidiNote,velocity,realKey);let panOverride=0;if(this.randomPan){panOverride=Math.round(Math.random()*1e3-500);}const channelVoices=this.voices;voices.forEach(voice=>{voice.portamentoFromKey=portamentoFromKey;voice.portamentoDuration=portamentoDuration;voice.overridePan=panOverride;voice.gain=voiceGain;this.sysExModulators.modulatorList.forEach(m=>{const mod=m.mod;const existingModIndex=voice.modulators.findIndex(voiceMod=>Modulator.isIdentical(voiceMod,mod));if(existingModIndex!==-1){voice.modulators[existingModIndex]=Modulator.copyFrom(mod);}else{voice.modulators.push(Modulator.copyFrom(mod));}});if(this.generatorOverridesEnabled){this.generatorOverrides.forEach((overrideValue,generatorType)=>{if(overrideValue===GENERATOR_OVERRIDE_NO_CHANGE_VALUE){return;}voice.generators[generatorType]=overrideValue;});}const exclusive=voice.exclusiveClass;if(exclusive!==0){channelVoices.forEach(v=>{if(v.exclusiveClass===exclusive){v.exclusiveRelease(this.synth.currentSynthTime);}});}this.computeModulators(voice);const cursorStartOffset=voice.modulatedGenerators[generatorTypes.startAddrsOffset]+voice.modulatedGenerators[generatorTypes.startAddrsCoarseOffset]*32768;const endOffset=voice.modulatedGenerators[generatorTypes.endAddrOffset]+voice.modulatedGenerators[generatorTypes.endAddrsCoarseOffset]*32768;const loopStartOffset=voice.modulatedGenerators[generatorTypes.startloopAddrsOffset]+voice.modulatedGenerators[generatorTypes.startloopAddrsCoarseOffset]*32768;const loopEndOffset=voice.modulatedGenerators[generatorTypes.endloopAddrsOffset]+voice.modulatedGenerators[generatorTypes.endloopAddrsCoarseOffset]*32768;const sm=voice.sample;const clamp=num=>Math.max(0,Math.min(sm.sampleData.length-1,num));sm.cursor=clamp(sm.cursor+cursorStartOffset);sm.end=clamp(sm.end+endOffset);sm.loopStart=clamp(sm.loopStart+loopStartOffset);sm.loopEnd=clamp(sm.loopEnd+loopEndOffset);if(sm.loopEnd<sm.loopStart){const temp=sm.loopStart;sm.loopStart=sm.loopEnd;sm.loopEnd=temp;}if(sm.loopEnd-sm.loopStart<1){if(sm.loopingMode===1||sm.loopingMode===3){sm.loopingMode=0;sm.isLooping=false;}}voice.volumeEnvelope.attenuation=voice.volumeEnvelope.attenuationTargetGain;voice.currentPan=Math.max(-500,Math.min(500,voice.modulatedGenerators[generatorTypes.pan]));});this.synth.totalVoicesAmount+=voices.length;if(this.synth.totalVoicesAmount>this.synthProps.masterParameters.voiceCap){this.synthProps.voiceKilling(voices.length);}channelVoices.push(...voices);this.sendChannelProperty();this.synthProps.callEvent("noteOn",{midiNote,channel:this.channelNumber,velocity});}function noteOff(midiNote){if(midiNote>127||midiNote<0){SpessaSynthWarn(`Received a noteOn for note`,midiNote,"Ignoring.");return;}const realKey=midiNote+this.channelTransposeKeyShift+this.customControllers[customControllers.channelKeyShift];if(this.synthProps.masterParameters.blackMIDIMode){if(!this.drumChannel){this.killNote(realKey,-6950);this.synthProps.callEvent("noteOff",{midiNote,channel:this.channelNumber});return;}}const channelVoices=this.voices;channelVoices.forEach(v=>{if(v.realKey!==realKey||v.isInRelease){return;}if(this.holdPedal){this.sustainedVoices.push(v);}else{v.release(this.synth.currentSynthTime);}});this.synthProps.callEvent("noteOff",{midiNote,channel:this.channelNumber});}function programChange(program){if(this.lockPreset){return;}this.patch.program=program;let preset=this.synth.soundBankManager.getPreset(this.patch,this.channelSystem);if(!preset){SpessaSynthWarn("No presets! Using empty fallback.");preset=new BasicPreset(this.synth.soundBankManager.soundBankList[0].soundBank);preset.name="SPESSA EMPTY FALLBACK PRESET";}this.preset=preset;if(preset.isAnyDrums!==this.drumChannel){this.setDrumFlag(preset.isAnyDrums);}this.synthProps.callEvent("programChange",{channel:this.channelNumber,bankLSB:this.preset.bankLSB,bankMSB:this.preset.bankMSB,program:this.preset.program,isGMGSDrum:this.preset.isGMGSDrum});this.sendChannelProperty();}var DynamicModulatorSystem=class{/**
     * The current dynamic modulator list.
     */modulatorList=[];resetModulators(){this.modulatorList=[];}/**
     * @param source Like in midiControllers: values below NON_CC_INDEX_OFFSET are CCs,
     * above are regular modulator sources.
     * @param destination The generator type to modulate.
     * @param amount The amount of modulation to apply.
     * @param isBipolar If true, the modulation is bipolar (ranges from -1 to 1 instead of from 0 to 1).
     * @param isNegative If true, the modulation is negative (goes from 1 to 0 instead of from 0 to 1).
     */setModulator(source,destination,amount,isBipolar=false,isNegative=false){const id=this.getModulatorID(source,destination,isBipolar,isNegative);if(amount===0){this.deleteModulator(id);}const mod=this.modulatorList.find(m=>m.id===id);if(mod){mod.mod.transformAmount=amount;}else{let srcNum,isCC;if(source>=NON_CC_INDEX_OFFSET){srcNum=source-NON_CC_INDEX_OFFSET;isCC=false;}else{srcNum=source;isCC=true;}const modulator=new Modulator(new ModulatorSource(srcNum,modulatorCurveTypes.linear,isCC,isBipolar),new ModulatorSource(),destination,amount,0);this.modulatorList.push({mod:modulator,id});}}getModulatorID(source,destination,isBipolar,isNegative){return`${source}-${destination}-${isBipolar}-${isNegative}`;}deleteModulator(id){this.modulatorList=this.modulatorList.filter(m=>m.id!==id);}};var EFFECT_MODULATOR_TRANSFORM_MULTIPLIER=1e3/200;function computeModulator(controllerTable,modulator,voice){if(modulator.transformAmount===0){modulator.currentValue=0;return 0;}const sourceValue=modulator.primarySource.getValue(controllerTable,voice);const secondSrcValue=modulator.secondarySource.getValue(controllerTable,voice);let transformAmount=modulator.transformAmount;if(modulator.isEffectModulator&&transformAmount<=1e3){transformAmount*=EFFECT_MODULATOR_TRANSFORM_MULTIPLIER;transformAmount=Math.min(transformAmount,1e3);}let computedValue=sourceValue*secondSrcValue*transformAmount;if(modulator.transformType===2){computedValue=Math.abs(computedValue);}if(modulator.isDefaultResonantModulator){voice.resonanceOffset=Math.max(0,computedValue/2);}modulator.currentValue=computedValue;return computedValue;}function computeModulators(voice,sourceUsesCC=-1,sourceIndex=0){const modulators=voice.modulators;let generators=voice.generators;if(this.generatorOffsetsEnabled){generators=new Int16Array(generators);for(let i=0;i<generators.length;i++){generators[i]+=this.generatorOffsets[i];}}const modulatedGenerators=voice.modulatedGenerators;if(sourceUsesCC===-1){modulatedGenerators.set(generators);modulators.forEach(mod=>{modulatedGenerators[mod.destination]=Math.min(32767,Math.max(-32768,modulatedGenerators[mod.destination]+computeModulator(this.midiControllers,mod,voice)));});for(let gen=0;gen<modulatedGenerators.length;gen++){const limit=generatorLimits[gen];if(!limit){continue;}modulatedGenerators[gen]=Math.min(limit.max,Math.max(limit.min,modulatedGenerators[gen]));}VolumeEnvelope.recalculate(voice);ModulationEnvelope.recalculate(voice);return;}const volumeEnvelopeNeedsRecalculation=/* @__PURE__ */new Set([generatorTypes.initialAttenuation,generatorTypes.delayVolEnv,generatorTypes.attackVolEnv,generatorTypes.holdVolEnv,generatorTypes.decayVolEnv,generatorTypes.sustainVolEnv,generatorTypes.releaseVolEnv,generatorTypes.keyNumToVolEnvHold,generatorTypes.keyNumToVolEnvDecay]);const computedDestinations=/* @__PURE__ */new Set();const sourceCC=!!sourceUsesCC;modulators.forEach(mod=>{if(mod.primarySource.isCC===sourceCC&&mod.primarySource.index===sourceIndex||mod.secondarySource.isCC===sourceCC&&mod.secondarySource.index===sourceIndex){const destination=mod.destination;if(!computedDestinations.has(destination)){let outputValue=generators[destination];computeModulator(this.midiControllers,mod,voice);modulators.forEach(m=>{if(m.destination===destination){outputValue+=m.currentValue;}});const limits=generatorLimits[destination];modulatedGenerators[destination]=Math.max(limits.min,Math.min(outputValue,limits.max));computedDestinations.add(destination);}}});if([...computedDestinations].some(dest=>volumeEnvelopeNeedsRecalculation.has(dest))){VolumeEnvelope.recalculate(voice);}ModulationEnvelope.recalculate(voice);}var MIDIChannel=class{/*
     * An array of MIDI controllers for the channel.
     * This array is used to store the state of various MIDI controllers
     * such as volume, pan, modulation, etc.
     * @remarks
     * A bit of an explanation:
     * The controller table is stored as an int16 array, it stores 14-bit values.
     * This controller table is then extended with the modulatorSources section,
     * for example, pitch range and pitch range depth.
     * This allows us for precise control range and supports full pitch-wheel resolution.
     */midiControllers=new Int16Array(CONTROLLER_TABLE_SIZE);/**
     * An array indicating if a controller, at the equivalent index in the midiControllers array, is locked
     * (i.e., not allowed changing).
     * A locked controller cannot be modified.
     */lockedControllers=Array(CONTROLLER_TABLE_SIZE).fill(false);/**
     * An array of custom (non-SF2) control values such as RPN pitch tuning, transpose, modulation depth, etc.
     * Refer to controller_tables.ts for the index definitions.
     */customControllers=new Float32Array(CUSTOM_CONTROLLER_TABLE_SIZE);/**
     * The key shift of the channel (in semitones).
     */channelTransposeKeyShift=0;/**
     * An array of octave tuning values for each note on the channel.
     * Each index corresponds to a note (0 = C, 1 = C#, ..., 11 = B).
     * Note: Repeated every 12 notes.
     */channelOctaveTuning=new Int8Array(128);/**
     * A system for dynamic modulator assignment for advanced system exclusives.
     */sysExModulators=new DynamicModulatorSystem();/**
     * Indicates whether this channel is a drum channel.
     */drumChannel=false;/**
     * Enables random panning for every note played on this channel.
     */randomPan=false;/**
     * The current state of the data entry for the channel.
     */dataEntryState=dataEntryStates.Idle;/**
     * The currently selected MIDI patch of the channel.
     * Note that the exact matching preset may not be available, but this represents exactly what MIDI asks for.
     */patch={bankMSB:0,bankLSB:0,program:0,isGMGSDrum:false};/**
     * The preset currently assigned to the channel.
     */preset;/**
     * Indicates whether the program on this channel is locked.
     */lockPreset=false;/**
     * Indicates the MIDI system when the preset was locked.
     */lockedSystem="gs";/**
     * Indicates whether the GS NRPN parameters are enabled for this channel.
     */lockGSNRPNParams=false;/**
     * The vibrato settings for the channel.
     * @property depth - Depth of the vibrato effect in cents.
     * @property delay - Delay before the vibrato effect starts (in seconds).
     * @property rate - Rate of the vibrato oscillation (in Hz).
     */channelVibrato={delay:0,depth:0,rate:0};/**
     * An array of voices currently active on the channel.
     */voices=[];/**
     * An array of voices that are sustained on the channel.
     */sustainedVoices=[];/**
     * The channel's number (0-based index)
     */channelNumber;/**
     * Parent processor instance.
     */synth;/**
     * Grants access to protected synth values.
     */synthProps;// MIDI messages
/**
     * Sends a "MIDI Note on" message and starts a note.
     * @param midiNote The MIDI note number (0-127).
     * @param velocity The velocity of the note (0-127). If less than 1, it will send a note off instead.
     */noteOn=noteOn.bind(this);// (A hacky way to split the class into multiple files)
/**
     * Releases a note by its MIDI note number.
     * If the note is in high performance mode and the channel is not a drum channel,
     * it kills the note instead of releasing it.
     * @param midiNote The MIDI note number to release (0-127).
     */noteOff=noteOff.bind(this);// Bind all methods to the instance
/**
     * Changes the program (preset) of the channel.
     * @param programNumber The program number (0-127) to change to.
     */programChange=programChange.bind(this);// CC (Continuous Controller)
controllerChange=controllerChange.bind(this);/**
     * Reset all controllers for channel.
     * This will reset all controllers to their default values,
     * except for the locked controllers.
     */resetControllers=resetControllers.bind(this);resetPreset=resetPreset.bind(this);/**
     * https://amei.or.jp/midistandardcommittee/Recommended_Practice/e/rp15.pdf
     * Reset controllers according to RP-15 Recommended Practice.
     */resetControllersRP15Compliant=resetControllersRP15Compliant.bind(this);/**
     * Reset all parameters to their default values.
     * This includes NRPN and RPN controllers, data entry state,
     * and generator overrides and offsets.
     */resetParameters=resetParameters.bind(this);/**
     * Executes a data entry fine (LSB) change for the current channel.
     * @param dataValue The value to set for the data entry fine controller (0-127).
     */dataEntryFine=dataEntryFine.bind(this);/**
     * Executes a data entry coarse (MSB) change for the current channel.
     * @param dataValue The value to set for the data entry coarse controller (0-127).
     */dataEntryCoarse=dataEntryCoarse.bind(this);/**
     * Will be updated every time something tuning-related gets changed.
     * This is used to avoid a big addition for every voice rendering call.
     */channelTuningCents=0;/**
     * An array of offsets generators for SF2 nrpn support.
     * A value of 0 means no change; -10 means 10 lower, etc.
     */generatorOffsets=new Int16Array(GENERATORS_AMOUNT);// Tuning
/**
     * A small optimization that disables applying offsets until at least one is set.
     */generatorOffsetsEnabled=false;/**
     * An array of override generators for AWE32 support.
     * A value of 32,767 means unchanged, as it is not allowed anywhere.
     */generatorOverrides=new Int16Array(GENERATORS_AMOUNT);/**
     * A small optimization that disables applying overrides until at least one is set.
     */generatorOverridesEnabled=false;// Voice rendering methods
renderVoice=renderVoice.bind(this);panAndMixVoice=panAndMixVoice.bind(this);computeModulators=computeModulators.bind(this);/**
     * Constructs a new MIDI channel.
     */constructor(synth,synthProps,preset,channelNumber){this.synth=synth;this.synthProps=synthProps;this.preset=preset;this.channelNumber=channelNumber;this.resetGeneratorOverrides();this.resetGeneratorOffsets();}/**
     * Indicates whether the channel is muted.
     */_isMuted=false;/**
     * Indicates whether the channel is muted.
     */get isMuted(){return this._isMuted;}/**
     * Indicates whether the sustain (hold) pedal is active.
     */get holdPedal(){return this.midiControllers[midiControllers.sustainPedal]>=8192;}get channelSystem(){return this.lockPreset?this.lockedSystem:this.synthProps.masterParameters.midiSystem;}/**
     * Transposes the channel by given amount of semitones.
     * @param semitones The number of semitones to transpose the channel by. Can be decimal.
     * @param force Defaults to false, if true, it will force the transpose even if the channel is a drum channel.
     */transposeChannel(semitones,force=false){if(!this.drumChannel){semitones+=this.synthProps.masterParameters.transposition;}const keyShift=Math.trunc(semitones);const currentTranspose=this.channelTransposeKeyShift+this.customControllers[customControllers.channelTransposeFine]/100;if(this.drumChannel&&!force||semitones===currentTranspose){return;}if(keyShift!==this.channelTransposeKeyShift){this.stopAllNotes();}this.channelTransposeKeyShift=keyShift;this.setCustomController(customControllers.channelTransposeFine,(semitones-keyShift)*100);this.sendChannelProperty();}/**
     * Sets the octave tuning for a given channel.
     * @param tuning The tuning array of 12 values, each representing the tuning for a note in the octave.
     * @remarks
     * Cent tunings are relative.
     */setOctaveTuning(tuning){if(tuning.length!==12){throw new Error("Tuning is not the length of 12.");}this.channelOctaveTuning=new Int8Array(128);for(let i=0;i<128;i++){this.channelOctaveTuning[i]=tuning[i%12];}}/**
     * Sets the modulation depth for the channel.
     * @param cents The modulation depth in cents to set.
     * @remarks
     * This method sets the modulation depth for the channel by converting the given cents value into a
     * multiplier. The MIDI specification assumes the default modulation depth is 50 cents,
     * but it may vary for different sound banks.
     * For example, if you want a modulation depth of 100 cents,
     * the multiplier will be 2,
     * which, for a preset with a depth of 50,
     * will create a total modulation depth of 100 cents.
     *
     */setModulationDepth(cents){cents=Math.round(cents);SpessaSynthInfo(`%cChannel ${this.channelNumber} modulation depth. Cents: %c${cents}`,consoleColors.info,consoleColors.value);this.setCustomController(customControllers.modulationMultiplier,cents/50);}/**
     * Sets the channel's tuning.
     * @param cents The tuning in cents to set.
     * @param log If true, logs the change to the console.
     */setTuning(cents,log=true){cents=Math.round(cents);this.setCustomController(customControllers.channelTuning,cents);if(!log){return;}SpessaSynthInfo(`%cFine tuning for %c${this.channelNumber}%c is now set to %c${cents}%c cents.`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.value,consoleColors.info);}/**
     * Sets the pitch of the given channel.
     * @param pitch The pitch (0 - 16384)
     */pitchWheel(pitch){if(this.lockedControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel]){return;}this.synthProps.callEvent("pitchWheel",{channel:this.channelNumber,pitch});this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel]=pitch;this.voices.forEach(v=>// Compute pitch modulators
this.computeModulators(v,0,modulatorSources.pitchWheel));this.sendChannelProperty();}/**
     * Sets the channel pressure (MIDI Aftertouch).
     * @param pressure the pressure of the channel.
     */channelPressure(pressure){this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.channelPressure]=pressure<<7;this.updateChannelTuning();this.voices.forEach(v=>this.computeModulators(v,0,modulatorSources.channelPressure));this.synthProps.callEvent("channelPressure",{channel:this.channelNumber,pressure});}// noinspection JSUnusedGlobalSymbols
/**
     * Sets the pressure of the given note on a specific channel.
     * This is used for polyphonic pressure (aftertouch).
     * @param midiNote 0 - 127, the MIDI note number to set the pressure for.
     * @param pressure 0 - 127, the pressure value to set for the note.
     */polyPressure(midiNote,pressure){this.voices.forEach(v=>{if(v.midiNote!==midiNote){return;}v.pressure=pressure;this.computeModulators(v,0,modulatorSources.polyPressure);});this.synthProps.callEvent("polyPressure",{channel:this.channelNumber,midiNote,pressure});}setCustomController(type,value){this.customControllers[type]=value;this.updateChannelTuning();}updateChannelTuning(){this.channelTuningCents=this.customControllers[customControllers.channelTuning]+// RPN channel fine tuning
this.customControllers[customControllers.channelTransposeFine]+// User tuning (transpose)
this.customControllers[customControllers.masterTuning]+// Master tuning, set by sysEx
this.customControllers[customControllers.channelTuningSemitones]*100;}/**
     * Renders Float32 audio for this channel.
     * @param outputLeft the left output buffer.
     * @param outputRight the right output buffer.
     * @param reverbOutputLeft left output for reverb.
     * @param reverbOutputRight right output for reverb.
     * @param chorusOutputLeft left output for chorus.
     * @param chorusOutputRight right output for chorus.
     * @param startIndex start index offset.
     * @param sampleCount sample count to render.
     */renderAudio(outputLeft,outputRight,reverbOutputLeft,reverbOutputRight,chorusOutputLeft,chorusOutputRight,startIndex,sampleCount){this.voices=this.voices.filter(v=>!this.renderVoice(v,this.synth.currentSynthTime,outputLeft,outputRight,reverbOutputLeft,reverbOutputRight,chorusOutputLeft,chorusOutputRight,startIndex,sampleCount));}/**
     * Locks or unlocks the preset from MIDI program changes.
     * @param locked If the preset should be locked.
     */setPresetLock(locked){if(this.lockPreset===locked){return;}this.lockPreset=locked;if(locked){this.lockedSystem=this.synthProps.masterParameters.midiSystem;}}/**
     * Changes the preset to, or from drums.
     * Note that this executes a program change.
     * @param isDrum If the channel should be a drum preset or not.
     */setDrums(isDrum){if(BankSelectHacks.isSystemXG(this.channelSystem)){if(isDrum){this.setBankMSB(BankSelectHacks.getDrumBank(this.channelSystem));this.setBankLSB(0);}else{if(this.channelNumber%16===DEFAULT_PERCUSSION){throw new Error(`Cannot disable drums on channel ${this.channelNumber} for XG.`);}this.setBankMSB(0);this.setBankLSB(0);}}else{this.setGSDrums(isDrum);}this.setDrumFlag(isDrum);this.programChange(this.patch.program);}/**
     * Sets the channel to a given MIDI patch.
     * Note that this executes a program change.
     * @param patch The MIDI patch to set the channel to.
     */setPatch(patch){this.setBankMSB(patch.bankMSB);this.setBankLSB(patch.bankLSB);this.setGSDrums(patch.isGMGSDrum);this.programChange(patch.program);}/**
     * Sets the GM/GS drum flag.
     * @param drums
     */setGSDrums(drums){if(drums===this.patch.isGMGSDrum){return;}this.setBankLSB(0);this.setBankMSB(0);this.patch.isGMGSDrum=drums;}// noinspection JSUnusedGlobalSymbols
/**
     * Sets a custom vibrato.
     * @param depth In cents.
     * @param rate In Hertz.
     * @param delay seconds.
     */setVibrato(depth,rate,delay){if(this.lockGSNRPNParams){return;}this.channelVibrato.rate=rate;this.channelVibrato.delay=delay;this.channelVibrato.depth=depth;}// noinspection JSUnusedGlobalSymbols
/**
     * Disables and locks all GS NPRN parameters, including the custom vibrato.
     */disableAndLockGSNRPN(){this.lockGSNRPNParams=true;this.channelVibrato.rate=0;this.channelVibrato.delay=0;this.channelVibrato.depth=0;}resetGeneratorOverrides(){this.generatorOverrides.fill(GENERATOR_OVERRIDE_NO_CHANGE_VALUE);this.generatorOverridesEnabled=false;}setGeneratorOverride(gen,value,realtime=false){this.generatorOverrides[gen]=value;this.generatorOverridesEnabled=true;if(realtime){this.voices.forEach(v=>{v.generators[gen]=value;this.computeModulators(v);});}}resetGeneratorOffsets(){this.generatorOffsets.fill(0);this.generatorOffsetsEnabled=false;}setGeneratorOffset(gen,value){this.generatorOffsets[gen]=value*generatorLimits[gen].nrpn;this.generatorOffsetsEnabled=true;this.voices.forEach(v=>{this.computeModulators(v);});}/**
     * Stops a note nearly instantly.
     * @param midiNote The note to stop.
     * @param releaseTime in timecents, defaults to -12000 (very short release).
     */killNote(midiNote,releaseTime=-12e3){midiNote+=this.customControllers[customControllers.channelKeyShift];this.voices.forEach(v=>{if(v.realKey!==midiNote){return;}v.modulatedGenerators[generatorTypes.releaseVolEnv]=releaseTime;v.release(this.synth.currentSynthTime);});}/**
     * Stops all notes on the channel.
     * @param force If true, stops all notes immediately, otherwise applies release time.
     */stopAllNotes(force=false){if(force){this.voices.length=0;this.sustainedVoices.length=0;this.sendChannelProperty();}else{this.voices.forEach(v=>{if(v.isInRelease){return;}v.release(this.synth.currentSynthTime);});this.sustainedVoices.forEach(v=>{v.release(this.synth.currentSynthTime);});}this.synthProps.callEvent("stopAll",{channel:this.channelNumber,force});}/**
     * Mutes or unmutes a channel.
     * @param isMuted If the channel should be muted.
     */muteChannel(isMuted){if(isMuted){this.stopAllNotes(true);}this._isMuted=isMuted;this.sendChannelProperty();this.synthProps.callEvent("muteChannel",{channel:this.channelNumber,isMuted});}/**
     * Sends this channel's property
     */sendChannelProperty(){if(!this.synth.enableEventSystem){return;}const data={voicesAmount:this.voices.length,pitchWheel:this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheel],pitchWheelRange:this.midiControllers[NON_CC_INDEX_OFFSET+modulatorSources.pitchWheelRange]/128,isMuted:this.isMuted,transposition:this.channelTransposeKeyShift+this.customControllers[customControllers.channelTransposeFine]/100,isDrum:this.drumChannel};this.synthProps.callEvent("channelPropertyChange",{channel:this.channelNumber,property:data});}setBankMSB(bankMSB){if(this.lockPreset){return;}this.patch.bankMSB=bankMSB;}setBankLSB(bankLSB){if(this.lockPreset){return;}this.patch.bankLSB=bankLSB;}/**
     * Sets drums on channel.
     */setDrumFlag(isDrum){if(this.lockPreset||!this.preset){return;}if(this.drumChannel===isDrum){return;}if(isDrum){this.channelTransposeKeyShift=0;this.drumChannel=true;}else{this.drumChannel=false;}this.synthProps.callEvent("drumChange",{channel:this.channelNumber,isDrumChannel:this.drumChannel});}};var SDTA_TO_DATA_OFFSET=4+// "LIST"
4+// Sdta size
4+// "sdta"
4+// "smpl"
4;async function getSDTA(bank,smplStartOffsets,smplEndOffsets,compress,decompress,vorbisFunc,progressFunc){let writtenCount=0;let smplChunkSize=0;const sampleDatas=[];for(const s of bank.samples){if(compress&&vorbisFunc){await s.compressSample(vorbisFunc);}if(decompress){s.setAudioData(s.getAudioData(),s.sampleRate);}const r=s.getRawData(true);writtenCount++;await(progressFunc===null||progressFunc===void 0?void 0:progressFunc(s.name,writtenCount,bank.samples.length));SpessaSynthInfo(`%cEncoded sample %c${writtenCount}. ${s.name}%c of %c${bank.samples.length}%c. Compressed: %c${s.isCompressed}%c.`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info,s.isCompressed?consoleColors.recognized:consoleColors.unrecognized,consoleColors.info);smplChunkSize+=r.length+(s.isCompressed?0:92);sampleDatas.push(r);}if(smplChunkSize%2!==0){smplChunkSize++;}const sdta=new IndexedByteArray(smplChunkSize+SDTA_TO_DATA_OFFSET);writeBinaryStringIndexed(sdta,"LIST");writeLittleEndianIndexed(sdta,smplChunkSize+SDTA_TO_DATA_OFFSET-8,4);writeBinaryStringIndexed(sdta,"sdta");writeBinaryStringIndexed(sdta,"smpl");writeLittleEndianIndexed(sdta,smplChunkSize,4);let offset=0;bank.samples.forEach((sample,i)=>{const data=sampleDatas[i];sdta.set(data,offset+SDTA_TO_DATA_OFFSET);let startOffset;let endOffset;if(sample.isCompressed){startOffset=offset;endOffset=startOffset+data.length;}else{startOffset=offset/2;endOffset=startOffset+data.length/2;offset+=92;}offset+=data.length;smplStartOffsets.push(startOffset);smplEndOffsets.push(endOffset);});return sdta;}var RESAMPLE_RATE=48e3;var BasicSample=class{/**
     * The sample's name.
     */name;/**
     * Sample rate in Hz.
     */sampleRate;/**
     * Original pitch of the sample as a MIDI note number.
     */originalKey;/**
     * Pitch correction, in cents. Can be negative.
     */pitchCorrection;/**
     * Linked sample, unused if mono.
     */linkedSample;/**
     * The type of the sample.
     */sampleType;/**
     * Relative to the start of the sample in sample points.
     */loopStart;/**
     * Relative to the start of the sample in sample points.
     */loopEnd;/**
     * Sample's linked instruments (the instruments that use it)
     * note that duplicates are allowed since one instrument can use the same sample multiple times.
     */linkedTo=[];/**
     * Indicates if the data was overridden, so it cannot be copied back unchanged.
     */dataOverridden=true;/**
     * The compressed sample data if the sample has been compressed.
     */compressedData;/**
     * The sample's audio data.
     */audioData;/**
     * The basic representation of a sample
     * @param sampleName The sample's name
     * @param sampleRate The sample's rate in Hz
     * @param originalKey The sample's pitch as a MIDI note number
     * @param pitchCorrection The sample's pitch correction in cents
     * @param sampleType The sample's type, an enum that can indicate SF3
     * @param loopStart The sample's loop start relative to the sample start in sample points
     * @param loopEnd The sample's loop end relative to the sample start in sample points
     */constructor(sampleName,sampleRate,originalKey,pitchCorrection,sampleType,loopStart,loopEnd){this.name=sampleName;this.sampleRate=sampleRate;this.originalKey=originalKey;this.pitchCorrection=pitchCorrection;this.loopStart=loopStart;this.loopEnd=loopEnd;this.sampleType=sampleType;}/**
     * Indicates if the sample is compressed using vorbis SF3.
     */get isCompressed(){return this.compressedData!==void 0;}/**
     * If the sample is linked to another sample.
     */get isLinked(){return this.sampleType===sampleTypes.rightSample||this.sampleType===sampleTypes.leftSample||this.sampleType===sampleTypes.linkedSample;}/**
     * The sample's use count
     */get useCount(){return this.linkedTo.length;}/**
     * Get raw data for writing the file, either a compressed bit stream or signed 16-bit little endian PCM data.
     * @param allowVorbis if vorbis file data is allowed.
     * @return either s16le or vorbis data.
     */getRawData(allowVorbis){if(this.compressedData&&allowVorbis&&!this.dataOverridden){return this.compressedData;}return this.encodeS16LE();}/**
     * Resamples the audio data to a given sample rate.
     */resampleData(newSampleRate){let audioData=this.getAudioData();const ratio=newSampleRate/this.sampleRate;const resampled=new Float32Array(Math.floor(audioData.length*ratio));for(let i=0;i<resampled.length;i++){resampled[i]=audioData[Math.floor(i*(1/ratio))];}audioData=resampled;this.sampleRate=newSampleRate;this.loopStart=Math.floor(this.loopStart*ratio);this.loopEnd=Math.floor(this.loopEnd*ratio);this.audioData=audioData;}/**
     * Compresses the audio data
     * @param encodeVorbis the compression function to use when compressing
     */async compressSample(encodeVorbis){if(this.isCompressed){return;}try{let audioData=this.getAudioData();if(this.sampleRate<8e3||this.sampleRate>96e3){this.resampleData(RESAMPLE_RATE);audioData=this.getAudioData();}const compressed=await encodeVorbis(audioData,this.sampleRate);this.setCompressedData(compressed);}catch(e){SpessaSynthWarn(`Failed to compress ${this.name}. Leaving as uncompressed!`,e);this.compressedData=void 0;}}/**
     * Sets the sample type and unlinks if needed.
     * @param type The type to set it to.
     */setSampleType(type){this.sampleType=type;if(!this.isLinked){if(this.linkedSample){this.linkedSample.linkedSample=void 0;this.linkedSample.sampleType=type;}this.linkedSample=void 0;}if((type&32768)>0){throw new Error("ROM samples are not supported.");}}// noinspection JSUnusedGlobalSymbols
/**
     * Unlinks the sample from its stereo link if it has any.
     */unlinkSample(){this.setSampleType(sampleTypes.monoSample);}// noinspection JSUnusedGlobalSymbols
/**
     * Links a stereo sample.
     * @param sample the sample to link to.
     * @param type either left, right or linked.
     */setLinkedSample(sample,type){if(sample.linkedSample){throw new Error(`${sample.name} is linked tp ${sample.linkedSample.name}. Unlink it first.`);}this.linkedSample=sample;sample.linkedSample=this;if(type===sampleTypes.leftSample){this.setSampleType(sampleTypes.leftSample);sample.setSampleType(sampleTypes.rightSample);}else if(type===sampleTypes.rightSample){this.setSampleType(sampleTypes.rightSample);sample.setSampleType(sampleTypes.leftSample);}else if(type===sampleTypes.linkedSample){this.setSampleType(sampleTypes.linkedSample);sample.setSampleType(sampleTypes.linkedSample);}else{throw new Error("Invalid sample type: "+type);}}/**
     * Links the sample to a given instrument
     * @param instrument the instrument to link to
     */linkTo(instrument){this.linkedTo.push(instrument);}/**
     * Unlinks the sample from a given instrument
     * @param instrument the instrument to unlink from
     */unlinkFrom(instrument){const index=this.linkedTo.indexOf(instrument);if(index<0){SpessaSynthWarn(`Cannot unlink ${instrument.name} from ${this.name}: not linked.`);return;}this.linkedTo.splice(index,1);}/**
     * Get the float32 audio data.
     * Note that this either decodes the compressed data or passes the ready sampleData.
     * If neither are set then it will throw an error!
     * @returns the audio data
     */getAudioData(){if(this.audioData){return this.audioData;}if(this.isCompressed){this.audioData=this.decodeVorbis();return this.audioData;}throw new Error("Sample data is undefined for a BasicSample instance.");}// noinspection JSUnusedGlobalSymbols
/**
     * Replaces the audio data *in-place*.
     * @param audioData The new audio data as Float32.
     * @param sampleRate The new sample rate, in Hertz.
     */setAudioData(audioData,sampleRate){this.audioData=audioData;this.sampleRate=sampleRate;this.dataOverridden=true;this.compressedData=void 0;}/**
     * Replaces the audio with a compressed data sample and flags the sample as compressed
     * @param data the new compressed data
     */setCompressedData(data){this.audioData=void 0;this.compressedData=data;this.dataOverridden=false;}/**
     * Encodes s16le sample
     * @return the encoded data
     */encodeS16LE(){const data=this.getAudioData();const data16=new Int16Array(data.length);const len=data.length;for(let i=0;i<len;i++){let sample=data[i]*32768;if(sample>32767){sample=32767;}else if(sample<-32768){sample=-32768;}data16[i]=sample;}return new IndexedByteArray(data16.buffer);}/**
     * Decode binary vorbis into a float32 pcm
     */decodeVorbis(){if(this.audioData){return this.audioData;}if(!this.compressedData){throw new Error("Compressed data is missing.");}try{const vorbis=stb.decode(this.compressedData);const decoded=vorbis.data[0];if(decoded===void 0){SpessaSynthWarn(`Error decoding sample ${this.name}: Vorbis decode returned undefined.`);return new Float32Array(0);}for(let i=0;i<decoded.length;i++){decoded[i]=Math.max(-1,Math.min(decoded[i],0.999969482421875));}return decoded;}catch(e){SpessaSynthWarn(`Error decoding sample ${this.name}: ${e}`);return new Float32Array(this.loopEnd+1);}}};var EmptySample=class extends BasicSample{/**
     * A simplified class for creating samples.
     */constructor(){super("",44100,60,0,sampleTypes.monoSample,0,0);}};var SF3_BIT_FLIT=16;var SoundFontSample=class extends BasicSample{/**
     * Linked sample index for retrieving linked samples in sf2
     */linkedSampleIndex;/**
     * The sliced sample from the smpl chunk.
     */s16leData;startByteOffset;endByteOffset;sampleID;/**
     * Creates a sample
     * @param sampleName
     * @param sampleStartIndex
     * @param sampleEndIndex
     * @param sampleLoopStartIndex
     * @param sampleLoopEndIndex
     * @param sampleRate
     * @param samplePitch
     * @param samplePitchCorrection
     * @param linkedSampleIndex
     * @param sampleType
     * @param sampleDataArray
     * @param sampleIndex initial sample index when loading the sfont
     * Used for SF2Pack support
     */constructor(sampleName,sampleStartIndex,sampleEndIndex,sampleLoopStartIndex,sampleLoopEndIndex,sampleRate,samplePitch,samplePitchCorrection,linkedSampleIndex,sampleType,sampleDataArray,sampleIndex){const compressed=(sampleType&SF3_BIT_FLIT)>0;sampleType&=~SF3_BIT_FLIT;super(sampleName,sampleRate,samplePitch,samplePitchCorrection,sampleType,sampleLoopStartIndex-sampleStartIndex/2,sampleLoopEndIndex-sampleStartIndex/2);this.dataOverridden=false;this.name=sampleName;this.startByteOffset=sampleStartIndex;this.endByteOffset=sampleEndIndex;this.sampleID=sampleIndex;const smplStart=sampleDataArray instanceof IndexedByteArray?sampleDataArray.currentIndex:0;if(sampleDataArray instanceof IndexedByteArray){if(compressed){this.loopStart+=this.startByteOffset/2;this.loopEnd+=this.startByteOffset/2;this.setCompressedData(sampleDataArray.slice(this.startByteOffset/2+smplStart,this.endByteOffset/2+smplStart));}else{this.s16leData=sampleDataArray.slice(smplStart+this.startByteOffset,smplStart+this.endByteOffset);}}else{this.setAudioData(sampleDataArray.slice(this.startByteOffset/2,this.endByteOffset/2),sampleRate);}this.linkedSampleIndex=linkedSampleIndex;}getLinkedSample(samplesArray){if(this.linkedSample||!this.isLinked){return;}const linked=samplesArray[this.linkedSampleIndex];if(!linked){SpessaSynthInfo(`%cInvalid linked sample for ${this.name}. Setting to mono.`,consoleColors.warn);this.unlinkSample();}else{if(linked.linkedSample){SpessaSynthInfo(`%cInvalid linked sample for ${this.name}: ${linked.name} is already linked to ${linked.linkedSample.name}`,consoleColors.warn);this.unlinkSample();}else{this.setLinkedSample(linked,this.sampleType);}}}/**
     * Loads the audio data and stores it for reuse
     * @returns  The audio data
     */getAudioData(){if(this.audioData){return this.audioData;}if(this.isCompressed){return super.getAudioData();}if(!this.s16leData){console.error(this);throw new Error("Unexpected lack of audio data.");}const byteLength=this.endByteOffset-this.startByteOffset;if(byteLength<1){SpessaSynthWarn(`Invalid sample ${this.name}! Invalid length: ${byteLength}`);return new Float32Array(1);}const audioData=new Float32Array(byteLength/2);const convertedSigned16=new Int16Array(this.s16leData.buffer);for(let i=0;i<convertedSigned16.length;i++){audioData[i]=convertedSigned16[i]/32768;}this.audioData=audioData;return audioData;}getRawData(allowVorbis){if(this.dataOverridden||this.compressedData){return super.getRawData(allowVorbis);}return this.s16leData??new Uint8Array(0);}};function readSamples(sampleHeadersChunk,smplChunkData,linkSamples=true){const samples=[];let index=0;while(sampleHeadersChunk.data.length>sampleHeadersChunk.data.currentIndex){const sample=readSample(index,sampleHeadersChunk.data,smplChunkData);samples.push(sample);index++;}samples.pop();if(linkSamples){samples.forEach(s=>s.getLinkedSample(samples));}return samples;}function readSample(index,sampleHeaderData,smplArrayData){const sampleName=readBinaryStringIndexed(sampleHeaderData,20);const sampleStartIndex=readLittleEndianIndexed(sampleHeaderData,4)*2;const sampleEndIndex=readLittleEndianIndexed(sampleHeaderData,4)*2;const sampleLoopStartIndex=readLittleEndianIndexed(sampleHeaderData,4);const sampleLoopEndIndex=readLittleEndianIndexed(sampleHeaderData,4);const sampleRate=readLittleEndianIndexed(sampleHeaderData,4);let samplePitch=sampleHeaderData[sampleHeaderData.currentIndex++];if(samplePitch>127){samplePitch=60;}const samplePitchCorrection=signedInt8(sampleHeaderData[sampleHeaderData.currentIndex++]);const sampleLink=readLittleEndianIndexed(sampleHeaderData,2);const sampleType=readLittleEndianIndexed(sampleHeaderData,2);return new SoundFontSample(sampleName,sampleStartIndex,sampleEndIndex,sampleLoopStartIndex,sampleLoopEndIndex,sampleRate,samplePitch,samplePitchCorrection,sampleLink,sampleType,smplArrayData,index);}function getSHDR(bank,smplStartOffsets,smplEndOffsets){const sampleLength=46;const shdrSize=sampleLength*(bank.samples.length+1);const shdrData=new IndexedByteArray(shdrSize);const xshdrData=new IndexedByteArray(shdrSize);let maxSampleLink=0;bank.samples.forEach((sample,index)=>{writeBinaryStringIndexed(shdrData,sample.name.substring(0,20),20);writeBinaryStringIndexed(xshdrData,sample.name.substring(20),20);const dwStart=smplStartOffsets[index];writeDword(shdrData,dwStart);xshdrData.currentIndex+=4;const dwEnd=smplEndOffsets[index];writeDword(shdrData,dwEnd);xshdrData.currentIndex+=4;let loopStart=sample.loopStart+dwStart;let loopEnd=sample.loopEnd+dwStart;if(sample.isCompressed){loopStart-=dwStart;loopEnd-=dwStart;}writeDword(shdrData,loopStart);writeDword(shdrData,loopEnd);writeDword(shdrData,sample.sampleRate);shdrData[shdrData.currentIndex++]=sample.originalKey;shdrData[shdrData.currentIndex++]=sample.pitchCorrection;xshdrData.currentIndex+=14;const sampleLinkIndex=sample.linkedSample?bank.samples.indexOf(sample.linkedSample):0;writeWord(shdrData,Math.max(0,sampleLinkIndex)&65535);writeWord(xshdrData,Math.max(0,sampleLinkIndex)>>16);maxSampleLink=Math.max(maxSampleLink,sampleLinkIndex);let type=sample.sampleType;if(sample.isCompressed){type|=SF3_BIT_FLIT;}writeWord(shdrData,type);xshdrData.currentIndex+=2;});writeBinaryStringIndexed(shdrData,"EOS",sampleLength);writeBinaryStringIndexed(xshdrData,"EOS",sampleLength);const shdr=writeRIFFChunkRaw("shdr",shdrData);const xshdr=writeRIFFChunkRaw("shdr",xshdrData);return{pdta:shdr,xdta:xshdr};}function writeSF2Elements(bank,isPreset=false){const elements=isPreset?bank.presets:bank.instruments;const genHeader=isPreset?"pgen":"igen";const modHeader=isPreset?"pmod":"imod";const bagHeader=isPreset?"pbag":"ibag";const hdrHeader=isPreset?"phdr":"inst";const hdrByteSize=isPreset?PHDR_BYTE_SIZE:INST_BYTE_SIZE;let currentGenIndex=0;const generatorIndexes=new Array();let currentModIndex=0;const modulatorIndexes=new Array();const generators=new Array();const modulators=new Array();let zoneIndex=0;const zoneIndexes=new Array();const writeZone=z=>{generatorIndexes.push(currentGenIndex);const gens=z.getWriteGenerators(bank);currentGenIndex+=gens.length;generators.push(...gens);modulatorIndexes.push(currentModIndex);const mods=z.modulators;currentModIndex+=mods.length;modulators.push(...mods);};elements.forEach(el=>{zoneIndexes.push(zoneIndex);writeZone(el.globalZone);el.zones.forEach(writeZone);zoneIndex+=el.zones.length+1;});generators.push(new Generator(0,0,false));modulators.push(new DecodedModulator(0,0,0,0,0));generatorIndexes.push(currentGenIndex);modulatorIndexes.push(currentModIndex);zoneIndexes.push(zoneIndex);const genSize=generators.length*GEN_BYTE_SIZE;const genData=new IndexedByteArray(genSize);generators.forEach(g=>g.write(genData));const modSize=modulators.length*MOD_BYTE_SIZE;const modData=new IndexedByteArray(modSize);modulators.forEach(m=>m.write(modData));const bagSize=modulatorIndexes.length*BAG_BYTE_SIZE;const bagData={pdta:new IndexedByteArray(bagSize),xdta:new IndexedByteArray(bagSize)};modulatorIndexes.forEach((modulatorIndex,i)=>{const generatorIndex=generatorIndexes[i];writeWord(bagData.pdta,generatorIndex&65535);writeWord(bagData.pdta,modulatorIndex&65535);writeWord(bagData.xdta,generatorIndex>>16);writeWord(bagData.xdta,modulatorIndex>>16);});const hdrSize=(elements.length+1)*hdrByteSize;const hdrData={pdta:new IndexedByteArray(hdrSize),xdta:new IndexedByteArray(hdrSize)};elements.forEach((el,i)=>el.write(hdrData,zoneIndexes[i]));if(isPreset){writeBinaryStringIndexed(hdrData.pdta,"EOP",20);hdrData.pdta.currentIndex+=4;writeWord(hdrData.pdta,zoneIndex&65535);hdrData.pdta.currentIndex+=12;writeBinaryStringIndexed(hdrData.xdta,"",20);hdrData.xdta.currentIndex+=4;writeWord(hdrData.xdta,zoneIndex>>16);hdrData.xdta.currentIndex+=12;}else{writeBinaryStringIndexed(hdrData.pdta,"EOI",20);writeWord(hdrData.pdta,zoneIndex&65535);writeBinaryStringIndexed(hdrData.xdta,"",20);writeWord(hdrData.xdta,zoneIndex>>16);}return{writeXdta:Math.max(currentGenIndex,currentModIndex,zoneIndex)>65535,gen:{pdta:writeRIFFChunkRaw(genHeader,genData),// Same as pmod, this chunk includes only the terminal generator record to allow reuse of the pdta parser.
xdta:writeRIFFChunkRaw(modHeader,new IndexedByteArray(GEN_BYTE_SIZE))},mod:{pdta:writeRIFFChunkRaw(modHeader,modData),// This chunk exists solely to preserve parser compatibility and contains only the terminal modulator record.
xdta:writeRIFFChunkRaw(modHeader,new IndexedByteArray(MOD_BYTE_SIZE))},bag:{pdta:writeRIFFChunkRaw(bagHeader,bagData.pdta),xdta:writeRIFFChunkRaw(bagHeader,bagData.xdta)},hdr:{pdta:writeRIFFChunkRaw(hdrHeader,hdrData.pdta),xdta:writeRIFFChunkRaw(hdrHeader,hdrData.xdta)}};}var DEFAULT_SF2_WRITE_OPTIONS={compress:false,compressionFunction:void 0,progressFunction:void 0,writeDefaultModulators:true,writeExtendedLimits:true,decompress:false};async function writeSF2Internal(bank,writeOptions=DEFAULT_SF2_WRITE_OPTIONS){var _bank$soundBankInfo;const options=fillWithDefaults(writeOptions,DEFAULT_SF2_WRITE_OPTIONS);if(options!==null&&options!==void 0&&options.compress){if(typeof(options===null||options===void 0?void 0:options.compressionFunction)!=="function"){throw new Error("No compression function supplied but compression enabled.");}if(options!==null&&options!==void 0&&options.decompress){throw new Error("Decompressed and compressed at the same time.");}}SpessaSynthGroupCollapsed("%cSaving soundbank...",consoleColors.info);SpessaSynthInfo(`%cCompression: %c${(options===null||options===void 0?void 0:options.compress)||"false"}%c`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);SpessaSynthGroup("%cWriting INFO...",consoleColors.info);const infoArrays=[];bank.soundBankInfo.software="SpessaSynth";if(options!==null&&options!==void 0&&options.compress||bank.samples.some(s=>s.isCompressed)){bank.soundBankInfo.version.major=3;bank.soundBankInfo.version.minor=0;}if(options!==null&&options!==void 0&&options.decompress){bank.soundBankInfo.version.major=2;bank.soundBankInfo.version.minor=4;}const writeSF2Info=(type,data)=>{infoArrays.push(writeRIFFChunkRaw(type,getStringBytes(data,true,true)// Pad with zero and ensure even length
));};const ifilData=new IndexedByteArray(4);writeWord(ifilData,bank.soundBankInfo.version.major);writeWord(ifilData,bank.soundBankInfo.version.minor);infoArrays.push(writeRIFFChunkRaw("ifil",ifilData));if(bank.soundBankInfo.romVersion){const ifilData2=new IndexedByteArray(4);writeWord(ifilData2,bank.soundBankInfo.romVersion.major);writeWord(ifilData2,bank.soundBankInfo.romVersion.minor);infoArrays.push(writeRIFFChunkRaw("iver",ifilData2));}const commentText=(((_bank$soundBankInfo=bank.soundBankInfo)===null||_bank$soundBankInfo===void 0?void 0:_bank$soundBankInfo.comment)??"")+(bank.soundBankInfo.subject?`
${bank.soundBankInfo.subject}`:"");for(const[t,d]of Object.entries(bank.soundBankInfo)){const type=t;const data=d;if(!data){continue;}switch(type){case"name":writeSF2Info("INAM",data);break;case"comment":writeSF2Info("ICMT",commentText);break;case"copyright":writeSF2Info("ICOP",data);break;case"creationDate":writeSF2Info("ICRD",data.toISOString());break;case"engineer":writeSF2Info("IENG",data);break;case"product":writeSF2Info("IPRD",data);break;case"romInfo":writeSF2Info("irom",data);break;case"software":writeSF2Info("ISFT",data);break;case"soundEngine":writeSF2Info("isng",data);break;case"subject":break;}}const unchangedDefaultModulators=bank.defaultModulators.some(mod=>SPESSASYNTH_DEFAULT_MODULATORS.findIndex(m=>Modulator.isIdentical(m,mod,true))===-1);if(unchangedDefaultModulators&&options!==null&&options!==void 0&&options.writeDefaultModulators){const mods=bank.defaultModulators;SpessaSynthInfo(`%cWriting %c${mods.length}%c default modulators...`,consoleColors.info,consoleColors.recognized,consoleColors.info);const dmodSize=MOD_BYTE_SIZE+mods.length*MOD_BYTE_SIZE;const dmodData=new IndexedByteArray(dmodSize);for(const mod of mods){mod.write(dmodData);}writeLittleEndianIndexed(dmodData,0,MOD_BYTE_SIZE);infoArrays.push(writeRIFFChunkRaw("DMOD",dmodData));}SpessaSynthGroupEnd();SpessaSynthInfo("%cWriting SDTA...",consoleColors.info);const smplStartOffsets=[];const smplEndOffsets=[];const sdtaChunk=await getSDTA(bank,smplStartOffsets,smplEndOffsets,options.compress,options.decompress,options===null||options===void 0?void 0:options.compressionFunction,options===null||options===void 0?void 0:options.progressFunction);SpessaSynthInfo("%cWriting PDTA...",consoleColors.info);SpessaSynthInfo("%cWriting SHDR...",consoleColors.info);const shdrChunk=getSHDR(bank,smplStartOffsets,smplEndOffsets);SpessaSynthGroup("%cWriting instruments...",consoleColors.info);const instData=writeSF2Elements(bank,false);SpessaSynthGroupEnd();SpessaSynthGroup("%cWriting presets...",consoleColors.info);const presData=writeSF2Elements(bank,true);SpessaSynthGroupEnd();const chunks=[presData.hdr,presData.bag,presData.mod,presData.gen,instData.hdr,instData.bag,instData.mod,instData.gen,shdrChunk];const pdtaChunk=writeRIFFChunkParts("pdta",chunks.map(c=>c.pdta),true);const writeXdta=options.writeExtendedLimits&&(instData.writeXdta||presData.writeXdta||bank.presets.some(p=>p.name.length>20)||bank.instruments.some(i=>i.name.length>20)||bank.samples.some(s=>s.name.length>20));if(writeXdta){SpessaSynthInfo(`%cWriting the xdta chunk as writeExendedLimits is enabled and at least one condition was met.`,consoleColors.info,consoleColors.value);const xpdtaChunk=writeRIFFChunkParts("xdta",chunks.map(c=>c.xdta),true);infoArrays.push(xpdtaChunk);}const infoChunk=writeRIFFChunkParts("INFO",infoArrays,true);SpessaSynthInfo("%cWriting the output file...",consoleColors.info);const main=writeRIFFChunkParts("RIFF",[getStringBytes("sfbk"),infoChunk,sdtaChunk,pdtaChunk]);SpessaSynthInfo(`%cSaved succesfully! Final file size: %c${main.length}`,consoleColors.info,consoleColors.recognized);SpessaSynthGroupEnd();return main.buffer;}var DLSVerifier=class{/**
     * @param chunk
     * @param expected
     * @throws error if the check doesn't pass
     */static verifyHeader(chunk,...expected){for(const expect of expected){if(chunk.header.toLowerCase()===expect.toLowerCase()){return;}}this.parsingError(`Invalid DLS chunk header! Expected "${expected.join(", or ")}" got "${chunk.header.toLowerCase()}"`);}/**
     * @param text {string}
     * @param expected {string}
     * @throws error if the check doesn't pass
     */static verifyText(text,...expected){for(const expect of expected){if(text.toLowerCase()===expect.toLowerCase()){return;}}this.parsingError(`FourCC error: Expected "${expected.join(", or ")}" got "${text.toLowerCase()}"`);}/**
     * @throws error if the check doesn't pass
     */static parsingError(error){SpessaSynthGroupEnd();throw new Error(`DLS parse error: ${error} The file may be corrupted.`);}static verifyAndReadList(chunk,...type){this.verifyHeader(chunk,"LIST");chunk.data.currentIndex=0;this.verifyText(readBinaryStringIndexed(chunk.data,4),...type);const chunks=[];while(chunk.data.length>chunk.data.currentIndex){chunks.push(readRIFFChunk(chunk.data));}return chunks;}};var WSMP_SIZE=20;var WSMP_LOOP_SIZE=16;var WaveSample=class _WaveSample extends DLSVerifier{/**
     * Specifies the gain to be applied to this sample in 32 bit relative gain units.
     * Each unit of gain represents 1/655360 dB.
     */gain=0;/**
     * Specifies the MIDI note which will replay the sample at original pitch. This value ranges
     * from 0 to 127 (a value of 60 represents Middle C, as defined by the MIDI specification).
     */unityNote=60;/**
     * Specifies the tuning offset from the usUnityNote in 16 bit relative pitch. (cents)
     */fineTune=0;/**
     * Specifies the number (count) of <wavesample-loop> records that are contained in the
     * <wsmp-ck> chunk. The <wavesample-loop> records are stored immediately following the
     * cSampleLoops data field. One shot sounds will have the cSampleLoops field set to 0.
     * Looped sounds will have the cSampleLoops field set to 1. Values greater than 1 are not yet
     * defined at this time.
     */loops=new Array();/**
     * Specifies flag options for the digital audio sample.
     * Default to F_WSMP_NO_COMPRESSION,
     * according to all DLS files I have.
     */fulOptions=2;static copyFrom(inputWaveSample){const outputWaveSample=new _WaveSample();outputWaveSample.unityNote=inputWaveSample.unityNote;outputWaveSample.gain=inputWaveSample.gain;outputWaveSample.fineTune=inputWaveSample.fineTune;outputWaveSample.loops=inputWaveSample.loops.map(l=>{return{...l};});outputWaveSample.fulOptions=inputWaveSample.fulOptions;return outputWaveSample;}static read(chunk){this.verifyHeader(chunk,"wsmp");const waveSample=new _WaveSample();const cbSize=readLittleEndianIndexed(chunk.data,4);if(cbSize!==WSMP_SIZE){SpessaSynthWarn(`Wsmp cbSize mismatch: got ${cbSize}, expected ${WSMP_SIZE}.`);}waveSample.unityNote=readLittleEndianIndexed(chunk.data,2);waveSample.fineTune=signedInt16(chunk.data[chunk.data.currentIndex++],chunk.data[chunk.data.currentIndex++]);waveSample.gain=readLittleEndianIndexed(chunk.data,4)|0;waveSample.fulOptions=readLittleEndianIndexed(chunk.data,4);const loopsAmount=readLittleEndianIndexed(chunk.data,4);if(loopsAmount===0){}else{const cbSize2=readLittleEndianIndexed(chunk.data,4);if(cbSize2!==WSMP_LOOP_SIZE){SpessaSynthWarn(`CbSize for loop in wsmp mismatch. Expected ${WSMP_SIZE}, got ${cbSize2}.`);}const loopType=readLittleEndianIndexed(chunk.data,4);const loopStart=readLittleEndianIndexed(chunk.data,4);const loopLength=readLittleEndianIndexed(chunk.data,4);waveSample.loops.push({loopStart,loopLength,loopType});}return waveSample;}static fromSFSample(sample){const waveSample=new _WaveSample();waveSample.unityNote=sample.originalKey;waveSample.fineTune=sample.pitchCorrection;if(sample.loopEnd!==0||sample.loopStart!==0){waveSample.loops.push({loopStart:sample.loopStart,loopLength:sample.loopEnd-sample.loopStart,loopType:DLSLoopTypes.forward});}return waveSample;}static fromSFZone(zone){const waveSample=new _WaveSample();waveSample.unityNote=zone.getGenerator(generatorTypes.overridingRootKey,zone.sample.originalKey);if(zone.getGenerator(generatorTypes.scaleTuning,100)===0&&zone.keyRange.max-zone.keyRange.min===0){waveSample.unityNote=zone.keyRange.min;}waveSample.fineTune=zone.fineTuning+zone.sample.pitchCorrection;const attenuationCb=zone.getGenerator(generatorTypes.initialAttenuation,0)*0.4;waveSample.gain=-attenuationCb<<16;const loopingMode=zone.getGenerator(generatorTypes.sampleModes,0);if(loopingMode!==0){const loopStart=zone.sample.loopStart+zone.getGenerator(generatorTypes.startloopAddrsOffset,0)+zone.getGenerator(generatorTypes.startloopAddrsCoarseOffset,0)*32768;const loopEnd=zone.sample.loopEnd+zone.getGenerator(generatorTypes.endloopAddrsOffset,0)+zone.getGenerator(generatorTypes.endloopAddrsCoarseOffset,0)*32768;let dlsLoopType;switch(loopingMode){case 1:default:dlsLoopType=0;break;case 3:dlsLoopType=1;}waveSample.loops.push({loopType:dlsLoopType,loopStart,loopLength:loopEnd-loopStart});}return waveSample;}/**
     * Converts the wsmp data into an SF zone.
     */toSFZone(zone,sample){let loopingMode=0;const loop=this.loops[0];if(loop){loopingMode=loop.loopType===DLSLoopTypes.loopAndRelease?3:1;}if(loopingMode!==0){zone.setGenerator(generatorTypes.sampleModes,loopingMode);}const wsmpGain16=this.gain>>16;const wsmpAttenuation=-wsmpGain16;const wsmpAttenuationCorrected=wsmpAttenuation/0.4;if(wsmpAttenuationCorrected!==0){zone.setGenerator(generatorTypes.initialAttenuation,wsmpAttenuationCorrected);}zone.fineTuning=this.fineTune-sample.pitchCorrection;if(this.unityNote!==sample.originalKey){zone.setGenerator(generatorTypes.overridingRootKey,this.unityNote);}if(loop){const diffStart=loop.loopStart-sample.loopStart;const loopEnd=loop.loopStart+loop.loopLength;const diffEnd=loopEnd-sample.loopEnd;if(diffStart!==0){const fine=diffStart%32768;zone.setGenerator(generatorTypes.startloopAddrsOffset,fine);const coarse=Math.trunc(diffStart/32768);if(coarse!==0){zone.setGenerator(generatorTypes.startloopAddrsCoarseOffset,coarse);}}if(diffEnd!==0){const fine=diffEnd%32768;zone.setGenerator(generatorTypes.endloopAddrsOffset,fine);const coarse=Math.trunc(diffEnd/32768);if(coarse!==0){zone.setGenerator(generatorTypes.endloopAddrsCoarseOffset,coarse);}}}}write(){const wsmpData=new IndexedByteArray(WSMP_SIZE+this.loops.length*WSMP_LOOP_SIZE);writeDword(wsmpData,WSMP_SIZE);writeWord(wsmpData,this.unityNote);writeWord(wsmpData,this.fineTune);writeDword(wsmpData,this.gain);writeDword(wsmpData,this.fulOptions);writeDword(wsmpData,this.loops.length);this.loops.forEach(loop=>{writeDword(wsmpData,WSMP_LOOP_SIZE);writeDword(wsmpData,loop.loopType);writeDword(wsmpData,loop.loopStart);writeDword(wsmpData,loop.loopLength);});return writeRIFFChunkRaw("wsmp",wsmpData);}};var W_FORMAT_TAG={PCM:1,ALAW:6};function readPCM(data,bytesPerSample){const maxSampleValue=Math.pow(2,bytesPerSample*8-1);const maxUnsigned=Math.pow(2,bytesPerSample*8);let normalizationFactor;let isUnsigned=false;if(bytesPerSample===1){normalizationFactor=255;isUnsigned=true;}else{normalizationFactor=maxSampleValue;}const sampleLength=data.length/bytesPerSample;const sampleData=new Float32Array(sampleLength);if(bytesPerSample===2){const s16=new Int16Array(data.buffer);for(let i=0;i<s16.length;i++){sampleData[i]=s16[i]/32768;}}else{for(let i=0;i<sampleData.length;i++){let sample=readLittleEndianIndexed(data,bytesPerSample);if(isUnsigned){sampleData[i]=sample/normalizationFactor-0.5;}else{if(sample>=maxSampleValue){sample-=maxUnsigned;}sampleData[i]=sample/normalizationFactor;}}}return sampleData;}function readALAW(data,bytesPerSample){const sampleLength=data.length/bytesPerSample;const sampleData=new Float32Array(sampleLength);for(let i=0;i<sampleData.length;i++){const input=readLittleEndianIndexed(data,bytesPerSample);let sample=input^85;sample&=127;const exponent=sample>>4;let mantissa=sample&15;if(exponent>0){mantissa+=16;}mantissa=(mantissa<<4)+8;if(exponent>1){mantissa=mantissa<<exponent-1;}const s16sample=input>127?mantissa:-mantissa;sampleData[i]=s16sample/32678;}return sampleData;}var DLSSample=class extends BasicSample{wFormatTag;bytesPerSample;/**
     * Sample's raw data before decoding it, for faster writing
     */rawData;/**
     * @param name
     * @param rate
     * @param pitch
     * @param pitchCorrection
     * @param loopStart sample data points
     * @param loopEnd sample data points
     * @param dataChunk
     * @param wFormatTag
     * @param bytesPerSample
     */constructor(name,rate,pitch,pitchCorrection,loopStart,loopEnd,dataChunk,wFormatTag,bytesPerSample){super(name,rate,pitch,pitchCorrection,sampleTypes.monoSample,loopStart,loopEnd);this.dataOverridden=false;this.rawData=dataChunk.data;this.wFormatTag=wFormatTag;this.bytesPerSample=bytesPerSample;}getAudioData(){if(!this.rawData){return new Float32Array(0);}if(!this.audioData){let sampleData;switch(this.wFormatTag){default:SpessaSynthWarn(`Failed to decode sample. Unknown wFormatTag: ${this.wFormatTag}`);sampleData=new Float32Array(this.rawData.length/this.bytesPerSample);break;case W_FORMAT_TAG.PCM:sampleData=readPCM(this.rawData,this.bytesPerSample);break;case W_FORMAT_TAG.ALAW:sampleData=readALAW(this.rawData,this.bytesPerSample);break;}this.setAudioData(sampleData,this.sampleRate);}return this.audioData??new Float32Array(0);}getRawData(allowVorbis){if(this.dataOverridden||this.isCompressed){return super.getRawData(allowVorbis);}if(this.wFormatTag===W_FORMAT_TAG.PCM&&this.bytesPerSample===2){return this.rawData;}return this.encodeS16LE();}};var DownloadableSoundsSample=class _DownloadableSoundsSample extends DLSVerifier{waveSample=new WaveSample();wFormatTag;bytesPerSample;sampleRate;dataChunk;name="Unnamed sample";constructor(wFormatTag,bytesPerSample,sampleRate,dataChunk){super();this.wFormatTag=wFormatTag;this.bytesPerSample=bytesPerSample;this.sampleRate=sampleRate;this.dataChunk=dataChunk;}static read(waveChunk){const chunks=this.verifyAndReadList(waveChunk,"wave");const fmtChunk=chunks.find(c=>c.header==="fmt ");if(!fmtChunk){throw new Error("No fmt chunk in the wave file!");}const wFormatTag=readLittleEndianIndexed(fmtChunk.data,2);const channelsAmount=readLittleEndianIndexed(fmtChunk.data,2);if(channelsAmount!==1){throw new Error(`Only mono samples are supported. Fmt reports ${channelsAmount} channels.`);}const sampleRate=readLittleEndianIndexed(fmtChunk.data,4);readLittleEndianIndexed(fmtChunk.data,4);readLittleEndianIndexed(fmtChunk.data,2);const wBitsPerSample=readLittleEndianIndexed(fmtChunk.data,2);const bytesPerSample=wBitsPerSample/8;const dataChunk=chunks.find(c=>c.header==="data");if(!dataChunk){throw new Error("No data chunk in the WAVE chunk!");}const sample=new _DownloadableSoundsSample(wFormatTag,bytesPerSample,sampleRate,dataChunk);const waveInfo=findRIFFListType(chunks,"INFO");if(waveInfo){let infoChunk=readRIFFChunk(waveInfo.data);while(infoChunk.header!=="INAM"&&waveInfo.data.currentIndex<waveInfo.data.length){infoChunk=readRIFFChunk(waveInfo.data);}if(infoChunk.header==="INAM"){sample.name=readBinaryStringIndexed(infoChunk.data,infoChunk.size).trim();}}const wsmpChunk=chunks.find(c=>c.header==="wsmp");if(wsmpChunk){sample.waveSample=WaveSample.read(wsmpChunk);}return sample;}static fromSFSample(sample){const raw=sample.getRawData(false);const dlsSample=new _DownloadableSoundsSample(1,// PCM
2,// 2 bytes per sample
sample.sampleRate,// Get the s16le data
new RIFFChunk("data",raw.length,new IndexedByteArray(raw.buffer)));dlsSample.name=sample.name;dlsSample.waveSample=WaveSample.fromSFSample(sample);return dlsSample;}toSFSample(soundBank){var _this$waveSample$loop;let originalKey=this.waveSample.unityNote;let pitchCorrection=this.waveSample.fineTune;const samplePitchSemitones=Math.trunc(pitchCorrection/100);originalKey+=samplePitchSemitones;pitchCorrection-=samplePitchSemitones*100;let loopStart=0;let loopEnd=0;const loop=(_this$waveSample$loop=this.waveSample.loops)===null||_this$waveSample$loop===void 0?void 0:_this$waveSample$loop[0];if(loop){loopStart=loop.loopStart;loopEnd=loop.loopStart+loop.loopLength;}const sample=new DLSSample(this.name,this.sampleRate,originalKey,pitchCorrection,loopStart,loopEnd,this.dataChunk,this.wFormatTag,this.bytesPerSample);soundBank.addSamples(sample);}write(){const fmt=this.writeFmt();const wsmp=this.waveSample.write();const data=writeRIFFChunkRaw("data",this.dataChunk.data);const inam=writeRIFFChunkRaw("INAM",getStringBytes(this.name,true));const info=writeRIFFChunkRaw("INFO",inam,false,true);SpessaSynthInfo(`%cSaved %c${this.name}%c successfully!`,consoleColors.recognized,consoleColors.value,consoleColors.recognized);return writeRIFFChunkParts("wave",[fmt,wsmp,data,info],true);}writeFmt(){const fmtData=new IndexedByteArray(18);writeWord(fmtData,this.wFormatTag);writeWord(fmtData,1);writeDword(fmtData,this.sampleRate);writeDword(fmtData,this.sampleRate*2);writeWord(fmtData,2);writeWord(fmtData,this.bytesPerSample*8);return writeRIFFChunkRaw("fmt ",fmtData);}};var DEFAULT_DLS_REVERB=new DecodedModulator(219,0,generatorTypes.reverbEffectsSend,1e3,0);var DEFAULT_DLS_CHORUS=new DecodedModulator(221,0,generatorTypes.chorusEffectsSend,1e3,0);var DLS_1_NO_VIBRATO_MOD=new DecodedModulator(129,0,generatorTypes.vibLfoToPitch,0,0);var DLS_1_NO_VIBRATO_PRESSURE=new DecodedModulator(13,0,generatorTypes.vibLfoToPitch,0,0);var ConnectionSource=class _ConnectionSource{source;transform;bipolar;invert;constructor(source=dlsSources.none,transform=modulatorCurveTypes.linear,bipolar=false,invert=false){this.source=source;this.transform=transform;this.bipolar=bipolar;this.invert=invert;}get sourceName(){return Object.keys(dlsSources).find(k=>dlsSources[k]===this.source)??this.source.toString();}get transformName(){return Object.keys(modulatorCurveTypes).find(k=>modulatorCurveTypes[k]===this.transform)??this.transform.toString();}static copyFrom(inputSource){return new _ConnectionSource(inputSource.source,inputSource.transform,inputSource.bipolar,inputSource.invert);}static fromSFSource(source){let sourceEnum=void 0;if(source.isCC){switch(source.index){case midiControllers.modulationWheel:sourceEnum=dlsSources.modulationWheel;break;case midiControllers.mainVolume:sourceEnum=dlsSources.volume;break;case midiControllers.pan:sourceEnum=dlsSources.pan;break;case midiControllers.expressionController:sourceEnum=dlsSources.expression;break;case midiControllers.chorusDepth:sourceEnum=dlsSources.chorus;break;case midiControllers.reverbDepth:sourceEnum=dlsSources.reverb;break;}}else{switch(source.index){case modulatorSources.noController:sourceEnum=dlsSources.none;break;case modulatorSources.noteOnKeyNum:sourceEnum=dlsSources.keyNum;break;case modulatorSources.noteOnVelocity:sourceEnum=dlsSources.velocity;break;case modulatorSources.pitchWheel:sourceEnum=dlsSources.pitchWheel;break;case modulatorSources.pitchWheelRange:sourceEnum=dlsSources.pitchWheelRange;break;case modulatorSources.polyPressure:sourceEnum=dlsSources.polyPressure;break;case modulatorSources.channelPressure:sourceEnum=dlsSources.channelPressure;}}if(sourceEnum===void 0){return void 0;}return new _ConnectionSource(sourceEnum,source.curveType,source.isBipolar,source.isNegative);}toString(){return`${this.sourceName} ${this.transformName} ${this.bipolar?"bipolar":"unipolar"} ${this.invert?"inverted":"positive"}`;}toTransformFlag(){return this.transform|(this.bipolar?1:0)<<4|(this.invert?1:0)<<5;}toSFSource(){let sourceEnum=void 0;let isCC=false;switch(this.source){default:case dlsSources.modLfo:case dlsSources.vibratoLfo:case dlsSources.coarseTune:case dlsSources.fineTune:case dlsSources.modEnv:return void 0;// Cannot be this in sf2
case dlsSources.keyNum:sourceEnum=modulatorSources.noteOnKeyNum;break;case dlsSources.none:sourceEnum=modulatorSources.noController;break;case dlsSources.modulationWheel:sourceEnum=midiControllers.modulationWheel;isCC=true;break;case dlsSources.pan:sourceEnum=midiControllers.pan;isCC=true;break;case dlsSources.reverb:sourceEnum=midiControllers.reverbDepth;isCC=true;break;case dlsSources.chorus:sourceEnum=midiControllers.chorusDepth;isCC=true;break;case dlsSources.expression:sourceEnum=midiControllers.expressionController;isCC=true;break;case dlsSources.volume:sourceEnum=midiControllers.mainVolume;isCC=true;break;case dlsSources.velocity:sourceEnum=modulatorSources.noteOnVelocity;break;case dlsSources.polyPressure:sourceEnum=modulatorSources.polyPressure;break;case dlsSources.channelPressure:sourceEnum=modulatorSources.channelPressure;break;case dlsSources.pitchWheel:sourceEnum=modulatorSources.pitchWheel;break;case dlsSources.pitchWheelRange:sourceEnum=modulatorSources.pitchWheelRange;break;}if(sourceEnum===void 0){return void 0;}return new ModulatorSource(sourceEnum,this.transform,isCC,this.bipolar,this.invert);}};var invalidGeneratorTypes=/* @__PURE__ */new Set([generatorTypes.sampleModes,// Set in wave sample
generatorTypes.initialAttenuation,// Set in wave sample
generatorTypes.keyRange,// Set in region header
generatorTypes.velRange,// Set in region header
generatorTypes.sampleID,// Set in wave link
generatorTypes.fineTune,// Set in wave sample
generatorTypes.coarseTune,// Set in wave sample
generatorTypes.startAddrsOffset,// Does not exist in DLS
generatorTypes.startAddrsCoarseOffset,// Does not exist in DLS
generatorTypes.endAddrOffset,// Does not exist in DLS
generatorTypes.endAddrsCoarseOffset,// Set in wave sample
generatorTypes.startloopAddrsOffset,// Set in wave sample
generatorTypes.startloopAddrsCoarseOffset,// Set in wave sample
generatorTypes.endloopAddrsOffset,// Set in wave sample
generatorTypes.endloopAddrsCoarseOffset,// Set in wave sample
generatorTypes.overridingRootKey,// Set in wave sample
generatorTypes.exclusiveClass// Set in region header
]);var ConnectionBlock=class _ConnectionBlock{/**
     * Like SF2 modulator source.
     */source;/**
     * Like SF2 modulator secondary source.
     */control;/**
     * Like SF2 destination.
     */destination;/**
     * Like SF2 amount, but long (32-bit) instead of short.
     */scale;/**
     * Like SF2 source transforms.
     */transform;constructor(source=new ConnectionSource(),control=new ConnectionSource(),destination,transform,scale){this.source=source;this.control=control;this.destination=destination;this.transform=transform;this.scale=scale;}get isStaticParameter(){return this.source.source===dlsSources.none&&this.control.source===dlsSources.none;}get shortScale(){return this.scale>>16;}get transformName(){return Object.keys(modulatorCurveTypes).find(k=>modulatorCurveTypes[k]===this.transform)??this.transform.toString();}get destinationName(){return Object.keys(dlsDestinations).find(k=>dlsDestinations[k]===this.destination)??this.destination.toString();}static read(artData){const usSource=readLittleEndianIndexed(artData,2);const usControl=readLittleEndianIndexed(artData,2);const usDestination=readLittleEndianIndexed(artData,2);const usTransform=readLittleEndianIndexed(artData,2);const lScale=readLittleEndianIndexed(artData,4)|0;const transform=usTransform&15;const controlTransform=usTransform>>4&15;const controlBipolar=bitMaskToBool(usTransform,8);const controlInvert=bitMaskToBool(usTransform,9);const control=new ConnectionSource(usControl,controlTransform,controlBipolar,controlInvert);const sourceTransform=usTransform>>10&15;const sourceBipolar=bitMaskToBool(usTransform,14);const sourceInvert=bitMaskToBool(usTransform,15);const source=new ConnectionSource(usSource,sourceTransform,sourceBipolar,sourceInvert);return new _ConnectionBlock(source,control,usDestination,transform,lScale);}static fromSFModulator(m,articulation){const failed=msg=>{SpessaSynthWarn(`Failed converting SF modulator into DLS:
 ${m.toString()} 
(${msg})`);};if(m.transformType!==0){failed("Absolute transform type is not supported");return;}if(Modulator.isIdentical(m,DEFAULT_DLS_CHORUS,true)||Modulator.isIdentical(m,DEFAULT_DLS_REVERB,true)){return;}let source=ConnectionSource.fromSFSource(m.primarySource);if(!source){failed("Invalid primary source");return;}let control=ConnectionSource.fromSFSource(m.secondarySource);if(!control){failed("Invalid secondary source");return;}const dlsDestination=_ConnectionBlock.fromSFDestination(m.destination,m.transformAmount);if(dlsDestination===void 0){failed("Invalid destination");return;}let amount=m.transformAmount;let destination;if(typeof dlsDestination==="number"){destination=dlsDestination;}else{destination=dlsDestination.destination;amount=dlsDestination.amount;if(dlsDestination.source!==dlsSources.none){if(control.source!==dlsSources.none&&source.source!==dlsSources.none){failed("Articulation generators with secondary source are not supported");return;}if(source.source!==dlsSources.none){control=source;}source=new ConnectionSource(dlsDestination.source,modulatorCurveTypes.linear,dlsDestination.isBipolar);}}const bloc=new _ConnectionBlock(source,control,destination,0,amount<<16);articulation.connectionBlocks.push(bloc);}static copyFrom(inputBlock){return new _ConnectionBlock(ConnectionSource.copyFrom(inputBlock.source),ConnectionSource.copyFrom(inputBlock.control),inputBlock.destination,inputBlock.transform,inputBlock.scale);}static fromSFGenerator(generator,articulation){if(invalidGeneratorTypes.has(generator.generatorType)){return;}const failed=msg=>{SpessaSynthWarn(`Failed converting SF2 generator into DLS:
 ${generator.toString()} 
(${msg})`);};const dlsDestination=_ConnectionBlock.fromSFDestination(generator.generatorType,generator.generatorValue);if(dlsDestination===void 0){failed("Invalid type");return;}const source=new ConnectionSource();let destination;let amount=generator.generatorValue;if(typeof dlsDestination==="number"){destination=dlsDestination;}else{destination=dlsDestination.destination;amount=dlsDestination.amount;source.source=dlsDestination.source;source.bipolar=dlsDestination.isBipolar;}articulation.connectionBlocks.push(new _ConnectionBlock(source,new ConnectionSource(),destination,0,amount<<16));}static fromSFDestination(dest,amount){switch(dest){default:return void 0;case generatorTypes.initialAttenuation:return{destination:dlsDestinations.gain,amount:-amount,isBipolar:false,source:dlsSources.none};case generatorTypes.fineTune:return dlsDestinations.pitch;case generatorTypes.pan:return dlsDestinations.pan;case generatorTypes.keyNum:return dlsDestinations.keyNum;case generatorTypes.reverbEffectsSend:return dlsDestinations.reverbSend;case generatorTypes.chorusEffectsSend:return dlsDestinations.chorusSend;case generatorTypes.freqModLFO:return dlsDestinations.modLfoFreq;case generatorTypes.delayModLFO:return dlsDestinations.modLfoDelay;case generatorTypes.delayVibLFO:return dlsDestinations.vibLfoDelay;case generatorTypes.freqVibLFO:return dlsDestinations.vibLfoFreq;case generatorTypes.delayVolEnv:return dlsDestinations.volEnvDelay;case generatorTypes.attackVolEnv:return dlsDestinations.volEnvAttack;case generatorTypes.holdVolEnv:return dlsDestinations.volEnvHold;case generatorTypes.decayVolEnv:return dlsDestinations.volEnvDecay;case generatorTypes.sustainVolEnv:return{destination:dlsDestinations.volEnvSustain,amount:1e3-amount,isBipolar:false,source:dlsSources.none};case generatorTypes.releaseVolEnv:return dlsDestinations.volEnvRelease;case generatorTypes.delayModEnv:return dlsDestinations.modEnvDelay;case generatorTypes.attackModEnv:return dlsDestinations.modEnvAttack;case generatorTypes.holdModEnv:return dlsDestinations.modEnvHold;case generatorTypes.decayModEnv:return dlsDestinations.modEnvDecay;case generatorTypes.sustainModEnv:return{destination:dlsDestinations.modEnvSustain,amount:1e3-amount,isBipolar:false,source:dlsSources.none};case generatorTypes.releaseModEnv:return dlsDestinations.modEnvRelease;case generatorTypes.initialFilterFc:return dlsDestinations.filterCutoff;case generatorTypes.initialFilterQ:return dlsDestinations.filterQ;// Mod env
case generatorTypes.modEnvToFilterFc:return{source:dlsSources.modEnv,destination:dlsDestinations.filterCutoff,amount,isBipolar:false};case generatorTypes.modEnvToPitch:return{source:dlsSources.modEnv,destination:dlsDestinations.pitch,amount,isBipolar:false};// Mod lfo
case generatorTypes.modLfoToFilterFc:return{source:dlsSources.modLfo,destination:dlsDestinations.filterCutoff,amount,isBipolar:true};case generatorTypes.modLfoToVolume:return{source:dlsSources.modLfo,destination:dlsDestinations.gain,amount,isBipolar:true};case generatorTypes.modLfoToPitch:return{source:dlsSources.modLfo,destination:dlsDestinations.pitch,amount,isBipolar:true};// Vib lfo
case generatorTypes.vibLfoToPitch:return{source:dlsSources.vibratoLfo,destination:dlsDestinations.pitch,amount,isBipolar:true};// Key to something
case generatorTypes.keyNumToVolEnvHold:return{source:dlsSources.keyNum,destination:dlsDestinations.volEnvHold,amount,isBipolar:true};case generatorTypes.keyNumToVolEnvDecay:return{source:dlsSources.keyNum,destination:dlsDestinations.volEnvDecay,amount,isBipolar:true};case generatorTypes.keyNumToModEnvHold:return{source:dlsSources.keyNum,destination:dlsDestinations.modEnvHold,amount,isBipolar:true};case generatorTypes.keyNumToModEnvDecay:return{source:dlsSources.keyNum,destination:dlsDestinations.modEnvDecay,amount,isBipolar:true};case generatorTypes.scaleTuning:return{source:dlsSources.keyNum,destination:dlsDestinations.pitch,amount:amount*128,isBipolar:false// According to table 4, this should be false.
};}}toString(){return`Source: ${this.source.toString()},
Control: ${this.control.toString()},
Scale: ${this.scale} >> 16 = ${this.shortScale},
Output transform: ${this.transformName}
Destination: ${this.destinationName}`;}write(){const out=new IndexedByteArray(12);writeWord(out,this.source.source);writeWord(out,this.control.source);writeWord(out,this.destination);const transformEnum=this.transform|this.control.toTransformFlag()<<4|this.source.toTransformFlag()<<10;writeWord(out,transformEnum);writeDword(out,this.scale);return out;}toSFGenerator(zone){const destination=this.destination;const value=this.shortScale;switch(destination){default:SpessaSynthInfo(`%cFailed converting DLS articulator into SF generator: %c${this.toString()}%c
(invalid destination)`,consoleColors.warn,consoleColors.value,consoleColors.unrecognized);return;case dlsDestinations.pan:zone.setGenerator(generatorTypes.pan,value);break;case dlsDestinations.gain:zone.addToGenerator(generatorTypes.initialAttenuation,-value/0.4);break;case dlsDestinations.filterCutoff:zone.setGenerator(generatorTypes.initialFilterFc,value);break;case dlsDestinations.filterQ:zone.setGenerator(generatorTypes.initialFilterQ,value);break;// Mod LFO raw values it seems
case dlsDestinations.modLfoFreq:zone.setGenerator(generatorTypes.freqModLFO,value);break;case dlsDestinations.modLfoDelay:zone.setGenerator(generatorTypes.delayModLFO,value);break;case dlsDestinations.vibLfoFreq:zone.setGenerator(generatorTypes.freqVibLFO,value);break;case dlsDestinations.vibLfoDelay:zone.setGenerator(generatorTypes.delayVibLFO,value);break;// Vol. env: all times are timecents like sf2
case dlsDestinations.volEnvDelay:zone.setGenerator(generatorTypes.delayVolEnv,value);break;case dlsDestinations.volEnvAttack:zone.setGenerator(generatorTypes.attackVolEnv,value);break;case dlsDestinations.volEnvHold:zone.setGenerator(generatorTypes.holdVolEnv,value);break;case dlsDestinations.volEnvDecay:zone.setGenerator(generatorTypes.decayVolEnv,value);break;case dlsDestinations.volEnvRelease:zone.setGenerator(generatorTypes.releaseVolEnv,value);break;case dlsDestinations.volEnvSustain:zone.setGenerator(generatorTypes.sustainVolEnv,1e3-value);break;// Mod env
case dlsDestinations.modEnvDelay:zone.setGenerator(generatorTypes.delayModEnv,value);break;case dlsDestinations.modEnvAttack:zone.setGenerator(generatorTypes.attackModEnv,value);break;case dlsDestinations.modEnvHold:zone.setGenerator(generatorTypes.holdModEnv,value);break;case dlsDestinations.modEnvDecay:zone.setGenerator(generatorTypes.decayModEnv,value);break;case dlsDestinations.modEnvRelease:zone.setGenerator(generatorTypes.releaseModEnv,value);break;case dlsDestinations.modEnvSustain:zone.setGenerator(generatorTypes.sustainModEnv,1e3-value);break;case dlsDestinations.reverbSend:zone.setGenerator(generatorTypes.reverbEffectsSend,value);break;case dlsDestinations.chorusSend:zone.setGenerator(generatorTypes.chorusEffectsSend,value);break;case dlsDestinations.pitch:zone.fineTuning+=value;break;}}toSFModulator(zone){let amount=this.shortScale;let modulatorDestination;let primarySource;let secondarySource=new ModulatorSource();const failed=msg=>{SpessaSynthInfo(`%cFailed converting DLS articulator into SF2:
 %c${this.toString()}%c
(${msg})`,consoleColors.warn,consoleColors.value,consoleColors.unrecognized);};const specialDestination=this.toCombinedSFDestination();if(specialDestination){modulatorDestination=specialDestination;const controlSF=this.control.toSFSource();if(!controlSF){failed("Invalid control");return;}primarySource=controlSF;}else{const convertedDestination=this.toSFDestination();if(!convertedDestination){failed("Invalid destination");return;}if(typeof convertedDestination==="object"){amount=convertedDestination.newAmount;modulatorDestination=convertedDestination.gen;}else{modulatorDestination=convertedDestination;}const convertedPrimary=this.source.toSFSource();if(!convertedPrimary){failed("Invalid source");return;}primarySource=convertedPrimary;const convertedSecondary=this.control.toSFSource();if(!convertedSecondary){failed("Invalid control");return;}secondarySource=convertedSecondary;}if(this.transform!==modulatorCurveTypes.linear&&primarySource.curveType===modulatorCurveTypes.linear){primarySource.curveType=this.transform;}if(modulatorDestination===generatorTypes.initialAttenuation){if(this.source.source===dlsSources.velocity||this.source.source===dlsSources.volume||this.source.source===dlsSources.expression){primarySource.isNegative=true;}amount=Math.min(960,Math.max(0,amount));}const mod=new Modulator(primarySource,secondarySource,modulatorDestination,amount,0);zone.addModulators(mod);}/**
     * Checks for an SF generator that consists of DLS source and destination (such as mod LFO and pitch)
     * @returns either a matching SF generator or nothing.
     */toCombinedSFDestination(){const source=this.source.source;const destination=this.destination;if(source===dlsSources.vibratoLfo&&destination===dlsDestinations.pitch){return generatorTypes.vibLfoToPitch;}else if(source===dlsSources.modLfo&&destination===dlsDestinations.pitch){return generatorTypes.modLfoToPitch;}else if(source===dlsSources.modLfo&&destination===dlsDestinations.filterCutoff){return generatorTypes.modLfoToFilterFc;}else if(source===dlsSources.modLfo&&destination===dlsDestinations.gain){return generatorTypes.modLfoToVolume;}else if(source===dlsSources.modEnv&&destination===dlsDestinations.filterCutoff){return generatorTypes.modEnvToFilterFc;}else if(source===dlsSources.modEnv&&destination===dlsDestinations.pitch){return generatorTypes.modEnvToPitch;}else{return void 0;}}/**
     * Converts DLS destination of this block to an SF2 one, also with the correct amount.
     * @private
     */toSFDestination(){const amount=this.shortScale;switch(this.destination){default:case dlsDestinations.none:return void 0;case dlsDestinations.pan:return generatorTypes.pan;case dlsDestinations.gain:return{// DLS uses gain, SF uses attenuation
gen:generatorTypes.initialAttenuation,newAmount:-amount};case dlsDestinations.pitch:return generatorTypes.fineTune;case dlsDestinations.keyNum:return generatorTypes.overridingRootKey;// Vol env
case dlsDestinations.volEnvDelay:return generatorTypes.delayVolEnv;case dlsDestinations.volEnvAttack:return generatorTypes.attackVolEnv;case dlsDestinations.volEnvHold:return generatorTypes.holdVolEnv;case dlsDestinations.volEnvDecay:return generatorTypes.decayVolEnv;case dlsDestinations.volEnvSustain:return{gen:generatorTypes.sustainVolEnv,newAmount:1e3-amount};case dlsDestinations.volEnvRelease:return generatorTypes.releaseVolEnv;// Mod env
case dlsDestinations.modEnvDelay:return generatorTypes.delayModEnv;case dlsDestinations.modEnvAttack:return generatorTypes.attackModEnv;case dlsDestinations.modEnvHold:return generatorTypes.holdModEnv;case dlsDestinations.modEnvDecay:return generatorTypes.decayModEnv;case dlsDestinations.modEnvSustain:return{gen:generatorTypes.sustainModEnv,newAmount:1e3-amount};case dlsDestinations.modEnvRelease:return generatorTypes.releaseModEnv;case dlsDestinations.filterCutoff:return generatorTypes.initialFilterFc;case dlsDestinations.filterQ:return generatorTypes.initialFilterQ;case dlsDestinations.chorusSend:return generatorTypes.chorusEffectsSend;case dlsDestinations.reverbSend:return generatorTypes.reverbEffectsSend;// Lfo
case dlsDestinations.modLfoFreq:return generatorTypes.freqModLFO;case dlsDestinations.modLfoDelay:return generatorTypes.delayModLFO;case dlsDestinations.vibLfoFreq:return generatorTypes.freqVibLFO;case dlsDestinations.vibLfoDelay:return generatorTypes.delayVibLFO;}}};var DownloadableSoundsArticulation=class _DownloadableSoundsArticulation extends DLSVerifier{connectionBlocks=new Array();mode="dls2";get length(){return this.connectionBlocks.length;}copyFrom(inputArticulation){this.mode=inputArticulation.mode;inputArticulation.connectionBlocks.forEach(block=>{this.connectionBlocks.push(ConnectionBlock.copyFrom(block));});}fromSFZone(z){this.mode="dls2";const zone=new BasicZone();zone.copyFrom(z);for(const relativeGenerator of zone.generators){let absoluteCounterpart=void 0;switch(relativeGenerator.generatorType){default:continue;case generatorTypes.keyNumToVolEnvDecay:absoluteCounterpart=generatorTypes.decayVolEnv;break;case generatorTypes.keyNumToVolEnvHold:absoluteCounterpart=generatorTypes.holdVolEnv;break;case generatorTypes.keyNumToModEnvDecay:absoluteCounterpart=generatorTypes.decayModEnv;break;case generatorTypes.keyNumToModEnvHold:absoluteCounterpart=generatorTypes.holdModEnv;}const absoluteValue=zone.getGenerator(absoluteCounterpart,void 0);const dlsRelative=relativeGenerator.generatorValue*-128;if(absoluteValue===void 0){continue;}const subtraction=60/128*dlsRelative;const newAbsolute=absoluteValue-subtraction;zone.setGenerator(relativeGenerator.generatorType,dlsRelative,false);zone.setGenerator(absoluteCounterpart,newAbsolute,false);}for(const generator of zone.generators){ConnectionBlock.fromSFGenerator(generator,this);}for(const modulator of zone.modulators){ConnectionBlock.fromSFModulator(modulator,this);}}/**
     * Chunk list for the region/instrument (containing lar2 or lart)
     * @param chunks
     */read(chunks){const lart=findRIFFListType(chunks,"lart");const lar2=findRIFFListType(chunks,"lar2");if(lart){this.mode="dls1";while(lart.data.currentIndex<lart.data.length){const art1=readRIFFChunk(lart.data);_DownloadableSoundsArticulation.verifyHeader(art1,"art1","art2");const artData=art1.data;const cbSize=readLittleEndianIndexed(artData,4);if(cbSize!==8){SpessaSynthWarn(`CbSize in articulation mismatch. Expected 8, got ${cbSize}`);}const connectionsAmount=readLittleEndianIndexed(artData,4);for(let i=0;i<connectionsAmount;i++){this.connectionBlocks.push(ConnectionBlock.read(artData));}}}else if(lar2){this.mode="dls2";while(lar2.data.currentIndex<lar2.data.length){const art2=readRIFFChunk(lar2.data);_DownloadableSoundsArticulation.verifyHeader(art2,"art2","art1");const artData=art2.data;const cbSize=readLittleEndianIndexed(artData,4);if(cbSize!==8){SpessaSynthWarn(`CbSize in articulation mismatch. Expected 8, got ${cbSize}`);}const connectionsAmount=readLittleEndianIndexed(artData,4);for(let i=0;i<connectionsAmount;i++){this.connectionBlocks.push(ConnectionBlock.read(artData));}}}}/**
     * Note: this writes "lar2", not just "art2"
     */write(){const art2Data=new IndexedByteArray(8);writeDword(art2Data,8);writeDword(art2Data,this.connectionBlocks.length);const out=this.connectionBlocks.map(a=>a.write());const art2=writeRIFFChunkParts(this.mode==="dls2"?"art2":"art1",[art2Data,...out]);return writeRIFFChunkRaw(this.mode==="dls2"?"lar2":"lart",art2,false,true);}/**
     * Converts DLS articulation into an SF zone.
     * @param zone The zone to write to.
     */toSFZone(zone){const applyKeyToCorrection=(value,keyToGen,realGen,dlsDestination)=>{const keyToGenValue=value/-128;zone.setGenerator(keyToGen,keyToGenValue);if(keyToGenValue<=120){const correction=Math.round(60/128*value);const realValueConnection=this.connectionBlocks.find(block=>block.isStaticParameter&&block.destination===dlsDestination);if(realValueConnection){zone.setGenerator(realGen,correction+realValueConnection.shortScale);}}};for(const connection of this.connectionBlocks){const amount=connection.shortScale;const source=connection.source.source;const control=connection.control.source;const destination=connection.destination;if(connection.isStaticParameter){connection.toSFGenerator(zone);continue;}if(control===dlsSources.none){if(source===dlsSources.keyNum){if(destination===dlsDestinations.pitch){zone.setGenerator(generatorTypes.scaleTuning,amount/128);continue;}if(destination===dlsDestinations.modEnvHold||destination===dlsDestinations.modEnvDecay||destination===dlsDestinations.volEnvHold||destination==dlsDestinations.volEnvDecay){continue;}}else{const specialGen=connection.toCombinedSFDestination();if(specialGen){zone.setGenerator(specialGen,amount);continue;}}}connection.toSFModulator(zone);}if(this.mode==="dls1"){zone.addModulators(// Modulation to vibrato
Modulator.copyFrom(DLS_1_NO_VIBRATO_MOD),Modulator.copyFrom(DLS_1_NO_VIBRATO_PRESSURE)// Pressure to vibrato
);}for(const connection of this.connectionBlocks){if(connection.source.source!==dlsSources.keyNum){continue;}const generatorAmount=connection.shortScale;switch(connection.destination){default:continue;case dlsDestinations.volEnvHold:applyKeyToCorrection(generatorAmount,generatorTypes.keyNumToVolEnvHold,generatorTypes.holdVolEnv,dlsDestinations.volEnvHold);break;case dlsDestinations.volEnvDecay:applyKeyToCorrection(generatorAmount,generatorTypes.keyNumToVolEnvDecay,generatorTypes.decayVolEnv,dlsDestinations.volEnvDecay);break;case dlsDestinations.modEnvHold:applyKeyToCorrection(generatorAmount,generatorTypes.keyNumToModEnvHold,generatorTypes.holdModEnv,dlsDestinations.modEnvHold);break;case dlsDestinations.modEnvDecay:applyKeyToCorrection(generatorAmount,generatorTypes.keyNumToModEnvDecay,generatorTypes.decayModEnv,dlsDestinations.modEnvDecay);break;}}}};var WaveLink=class _WaveLink{/**
     * Specifies the channel placement of the sample. This is used to place mono sounds within a
     * stereo pair or for multi-track placement. Each bit position within the ulChannel field specifies
     * a channel placement with bit 0 specifying a mono sample or the left channel of a stereo file.
     */channel=1;/**
     * Specifies the 0 based index of the cue entry in the wave pool table.
     */tableIndex;/**
     * Specifies flag options for this wave link. All bits not defined must be set to 0.
     */fusOptions=0;/**
     * Specifies a group number for samples which are phase locked. All waves in a set of wave
     * links with the same group are phase locked and follow the wave in the group with the
     * F_WAVELINK_PHASE_MASTER flag set. If a wave is not a member of a phase locked
     * group, this value should be set to 0.
     */phaseGroup=0;constructor(tableIndex){this.tableIndex=tableIndex;}static copyFrom(waveLink){const wlnk=new _WaveLink(waveLink.tableIndex);wlnk.channel=waveLink.channel;wlnk.phaseGroup=waveLink.phaseGroup;wlnk.fusOptions=waveLink.fusOptions;return wlnk;}static read(chunk){const fusOptions=readLittleEndianIndexed(chunk.data,2);const phaseGroup=readLittleEndianIndexed(chunk.data,2);const ulChannel=readLittleEndianIndexed(chunk.data,4);const ulTableIndex=readLittleEndianIndexed(chunk.data,4);const wlnk=new _WaveLink(ulTableIndex);wlnk.channel=ulChannel;wlnk.fusOptions=fusOptions;wlnk.phaseGroup=phaseGroup;return wlnk;}static fromSFZone(samples,zone){const index=samples.indexOf(zone.sample);if(index<0){throw new Error(`Wave link error: Sample ${zone.sample.name} does not exist in the sample list.`);}const waveLink=new _WaveLink(index);switch(zone.sample.sampleType){default:case sampleTypes.leftSample:case sampleTypes.monoSample:waveLink.channel=1<<0;break;case sampleTypes.rightSample:waveLink.channel=1<<1;}return waveLink;}write(){const wlnkData=new IndexedByteArray(12);writeWord(wlnkData,this.fusOptions);writeWord(wlnkData,this.phaseGroup);writeDword(wlnkData,this.channel);writeDword(wlnkData,this.tableIndex);return writeRIFFChunkRaw("wlnk",wlnkData);}};var DownloadableSoundsRegion=class _DownloadableSoundsRegion extends DLSVerifier{articulation=new DownloadableSoundsArticulation();/**
     * Specifies the key range for this region.
     */keyRange={min:0,max:127};/**
     * Specifies the velocity range for this region.
     */velRange={min:0,max:127};/**
     * Specifies the key group for a drum instrument. Key group values allow multiple regions
     * within a drum instrument to belong to the same "key group." If a synthesis engine is
     * instructed to play a note with a key group setting and any other notes are currently playing
     * with this same key group, then the synthesis engine should turn off all notes with the same
     * key group value as soon as possible.
     */keyGroup=0;/**
     * Specifies flag options for the synthesis of this region.
     */fusOptions=0;/**
     * Indicates the layer of this region for editing purposes. This field facilitates the
     * organization of overlapping regions into layers for display to the user of a DLS sound editor.
     * For example, if a piano sound and a string section are overlapped to create a piano/string pad,
     * all the regions of the piano might be labeled as layer 1, and all the regions of the string
     * section might be labeled as layer 2
     */usLayer=0;waveSample;waveLink;constructor(waveLink,waveSample){super();this.waveSample=waveSample;this.waveLink=waveLink;}static copyFrom(inputRegion){const outputRegion=new _DownloadableSoundsRegion(WaveLink.copyFrom(inputRegion.waveLink),WaveSample.copyFrom(inputRegion.waveSample));outputRegion.keyGroup=inputRegion.keyGroup;outputRegion.keyRange={...inputRegion.keyRange};outputRegion.velRange={...inputRegion.velRange};outputRegion.usLayer=inputRegion.usLayer;outputRegion.fusOptions=inputRegion.fusOptions;outputRegion.articulation.copyFrom(inputRegion.articulation);return outputRegion;}static read(samples,chunk){const regionChunks=this.verifyAndReadList(chunk,"rgn ","rgn2");const waveSampleChunk=regionChunks.find(c=>c.header==="wsmp");let waveSample=waveSampleChunk?WaveSample.read(waveSampleChunk):void 0;const waveLinkChunk=regionChunks.find(c=>c.header==="wlnk");if(!waveLinkChunk){SpessaSynthWarn("Invalid DLS region: missing 'wlnk' chunk! Discarding...");return;}const waveLink=WaveLink.read(waveLinkChunk);const regionHeader=regionChunks.find(c=>c.header==="rgnh");if(!regionHeader){SpessaSynthWarn("Invalid DLS region: missing 'rgnh' chunk! Discarding...");return;}const sample=samples[waveLink.tableIndex];if(!sample){_DownloadableSoundsRegion.parsingError(`Invalid sample index: ${waveLink.tableIndex}. Samples available: ${samples.length}`);}waveSample??=sample.waveSample;const region=new _DownloadableSoundsRegion(waveLink,waveSample);const keyMin=readLittleEndianIndexed(regionHeader.data,2);const keyMax=readLittleEndianIndexed(regionHeader.data,2);let velMin=readLittleEndianIndexed(regionHeader.data,2);let velMax=readLittleEndianIndexed(regionHeader.data,2);if(velMin===0&&velMax===0){velMax=127;velMin=0;}region.keyRange.max=keyMax;region.keyRange.min=keyMin;region.velRange.max=velMax;region.velRange.min=velMin;region.fusOptions=readLittleEndianIndexed(regionHeader.data,2);region.keyGroup=readLittleEndianIndexed(regionHeader.data,2);if(regionHeader.data.length-regionHeader.data.currentIndex>=2){region.usLayer=readLittleEndianIndexed(regionHeader.data,2);}region.articulation.read(regionChunks);return region;}static fromSFZone(zone,samples){const waveSample=WaveSample.fromSFZone(zone);const waveLink=WaveLink.fromSFZone(samples,zone);const region=new _DownloadableSoundsRegion(waveLink,waveSample);region.keyRange.min=Math.max(zone.keyRange.min,0);region.keyRange.max=zone.keyRange.max;region.velRange.min=Math.max(zone.velRange.min,0);region.velRange.max=zone.velRange.max;region.keyGroup=zone.getGenerator(generatorTypes.exclusiveClass,0);region.articulation.fromSFZone(zone);return region;}write(){const chunks=[this.writeHeader(),this.waveSample.write(),this.waveLink.write(),this.articulation.write()];return writeRIFFChunkParts("rgn2",chunks,true);}toSFZone(instrument,samples){const sample=samples[this.waveLink.tableIndex];if(!sample){_DownloadableSoundsRegion.parsingError(`Invalid sample index: ${this.waveLink.tableIndex}`);}const zone=instrument.createZone(sample);zone.keyRange=this.keyRange;zone.velRange=this.velRange;if(this.keyRange.max===127&&this.keyRange.min===0){zone.keyRange.min=-1;}if(this.velRange.max===127&&this.velRange.min===0){zone.velRange.min=-1;}if(this.keyGroup!==0){zone.setGenerator(generatorTypes.exclusiveClass,this.keyGroup);}this.waveSample.toSFZone(zone,sample);this.articulation.toSFZone(zone);zone.generators=zone.generators.filter(g=>g.generatorValue!==generatorLimits[g.generatorType].def);return zone;}writeHeader(){const rgnhData=new IndexedByteArray(12);writeWord(rgnhData,Math.max(this.keyRange.min,0));writeWord(rgnhData,this.keyRange.max);writeWord(rgnhData,Math.max(this.velRange.min,0));writeWord(rgnhData,this.velRange.max);writeWord(rgnhData,this.fusOptions);writeWord(rgnhData,this.keyGroup);writeWord(rgnhData,this.usLayer);return writeRIFFChunkRaw("rgnh",rgnhData);}};var DownloadableSoundsInstrument=class _DownloadableSoundsInstrument extends DLSVerifier{articulation=new DownloadableSoundsArticulation();regions=new Array();name="Unnamed";bankLSB=0;bankMSB=0;isGMGSDrum=false;program=0;static copyFrom(inputInstrument){const outputInstrument=new _DownloadableSoundsInstrument();outputInstrument.name=inputInstrument.name;outputInstrument.isGMGSDrum=inputInstrument.isGMGSDrum;outputInstrument.bankMSB=inputInstrument.bankMSB;outputInstrument.bankLSB=inputInstrument.bankLSB;outputInstrument.program=inputInstrument.program;outputInstrument.articulation.copyFrom(inputInstrument.articulation);inputInstrument.regions.forEach(region=>{outputInstrument.regions.push(DownloadableSoundsRegion.copyFrom(region));});return outputInstrument;}static read(samples,chunk){const chunks=this.verifyAndReadList(chunk,"ins ");const instrumentHeader=chunks.find(c=>c.header==="insh");if(!instrumentHeader){SpessaSynthGroupEnd();throw new Error("No instrument header!");}let instrumentName=``;const infoChunk=findRIFFListType(chunks,"INFO");if(infoChunk){let info=readRIFFChunk(infoChunk.data);while(info.header!=="INAM"){info=readRIFFChunk(infoChunk.data);}instrumentName=readBinaryStringIndexed(info.data,info.data.length).trim();}if(instrumentName.length<1){instrumentName=`Unnamed Instrument`;}const instrument=new _DownloadableSoundsInstrument();instrument.name=instrumentName;const regions=readLittleEndianIndexed(instrumentHeader.data,4);const ulBank=readLittleEndianIndexed(instrumentHeader.data,4);const ulInstrument=readLittleEndianIndexed(instrumentHeader.data,4);instrument.program=ulInstrument&127;instrument.bankMSB=ulBank>>>8&127;instrument.bankLSB=ulBank&127;instrument.isGMGSDrum=ulBank>>>31>0;SpessaSynthGroupCollapsed(`%cParsing %c"${instrumentName}"%c...`,consoleColors.info,consoleColors.recognized,consoleColors.info);const regionListChunk=findRIFFListType(chunks,"lrgn");if(!regionListChunk){SpessaSynthGroupEnd();throw new Error("No region list!");}instrument.articulation.read(chunks);for(let i=0;i<regions;i++){const chunk2=readRIFFChunk(regionListChunk.data);this.verifyHeader(chunk2,"LIST");const type=readBinaryStringIndexed(chunk2.data,4);if(type!=="rgn "&&type!=="rgn2"){SpessaSynthGroupEnd();this.parsingError(`Invalid DLS region! Expected "rgn " or "rgn2" got "${type}"`);}const region=DownloadableSoundsRegion.read(samples,chunk2);if(region){instrument.regions.push(region);}}SpessaSynthGroupEnd();return instrument;}static fromSFPreset(preset,samples){const instrument=new _DownloadableSoundsInstrument();instrument.name=preset.name;instrument.bankLSB=preset.bankLSB;instrument.bankMSB=preset.bankMSB;instrument.program=preset.program;instrument.isGMGSDrum=preset.isGMGSDrum;SpessaSynthGroup(`%cConverting %c${preset.toString()}%c to DLS...`,consoleColors.info,consoleColors.value,consoleColors.info);const inst=preset.toFlattenedInstrument();inst.zones.forEach(z=>{instrument.regions.push(DownloadableSoundsRegion.fromSFZone(z,samples));});SpessaSynthGroupEnd();return instrument;}write(){SpessaSynthGroupCollapsed(`%cWriting %c${this.name}%c...`,consoleColors.info,consoleColors.recognized,consoleColors.info);const chunks=[this.writeHeader()];const regionChunks=this.regions.map(r=>r.write());chunks.push(writeRIFFChunkParts("lrgn",regionChunks,true));if(this.articulation.length>0){chunks.push(this.articulation.write());}const inam=writeRIFFChunkRaw("INAM",getStringBytes(this.name,true));chunks.push(writeRIFFChunkRaw("INFO",inam,false,true));SpessaSynthGroupEnd();return writeRIFFChunkParts("ins ",chunks,true);}/**
     * Performs the full DLS to SF2 instrument conversion.
     */toSFPreset(soundBank){const preset=new BasicPreset(soundBank);preset.name=this.name;preset.bankMSB=this.bankMSB;preset.bankLSB=this.bankLSB;preset.isGMGSDrum=this.isGMGSDrum;preset.program=this.program;const instrument=new BasicInstrument();instrument.name=this.name;preset.createZone(instrument);this.articulation.toSFZone(instrument.globalZone);this.regions.forEach(region=>region.toSFZone(instrument,soundBank.samples));instrument.globalize();if(instrument.globalZone.modulators.find(m=>m.destination===generatorTypes.reverbEffectsSend)===void 0){instrument.globalZone.addModulators(Modulator.copyFrom(DEFAULT_DLS_REVERB));}if(instrument.globalZone.modulators.find(m=>m.destination===generatorTypes.chorusEffectsSend)===void 0){instrument.globalZone.addModulators(Modulator.copyFrom(DEFAULT_DLS_CHORUS));}instrument.globalZone.generators=instrument.globalZone.generators.filter(g=>g.generatorValue!==generatorLimits[g.generatorType].def);soundBank.addPresets(preset);soundBank.addInstruments(instrument);}writeHeader(){const inshData=new IndexedByteArray(12);writeDword(inshData,this.regions.length);let ulBank=(this.bankMSB&127)<<8|this.bankLSB&127;if(this.isGMGSDrum){ulBank|=1<<31;}writeDword(inshData,ulBank);writeDword(inshData,this.program&127);return writeRIFFChunkRaw("insh",inshData);}};var DEFAULT_DLS_OPTIONS={progressFunction:void 0};var DownloadableSounds=class _DownloadableSounds extends DLSVerifier{samples=new Array();instruments=new Array();soundBankInfo={name:"Unnamed",creationDate:/* @__PURE__ */new Date(),software:"SpessaSynth",soundEngine:"DLS Level 2.2",version:{major:2,minor:4}};static read(buffer){if(!buffer){throw new Error("No data provided!");}const dataArray=new IndexedByteArray(buffer);SpessaSynthGroup("%cParsing DLS file...",consoleColors.info);const firstChunk=readRIFFChunk(dataArray,false);this.verifyHeader(firstChunk,"RIFF");this.verifyText(readBinaryStringIndexed(dataArray,4).toLowerCase(),"dls ");const chunks=[];while(dataArray.currentIndex<dataArray.length){chunks.push(readRIFFChunk(dataArray));}const dls=new _DownloadableSounds();dls.soundBankInfo.name="Unnamed DLS";dls.soundBankInfo.product="SpessaSynth DLS";dls.soundBankInfo.comment="(no description)";const infoChunk=findRIFFListType(chunks,"INFO");if(infoChunk){while(infoChunk.data.currentIndex<infoChunk.data.length){const infoPart=readRIFFChunk(infoChunk.data);const headerTyped=infoPart.header;const text=readBinaryStringIndexed(infoPart.data,infoPart.size);switch(headerTyped){case"INAM":dls.soundBankInfo.name=text;break;case"ICRD":dls.soundBankInfo.creationDate=parseDateString(text);break;case"ICMT":dls.soundBankInfo.comment=text;break;case"ISBJ":dls.soundBankInfo.subject=text;break;case"ICOP":dls.soundBankInfo.copyright=text;break;case"IENG":dls.soundBankInfo.engineer=text;break;case"IPRD":dls.soundBankInfo.product=text;break;case"ISFT":dls.soundBankInfo.software=text;}}}this.printInfo(dls);const colhChunk=chunks.find(c=>c.header==="colh");if(!colhChunk){this.parsingError("No colh chunk!");return 5;}const instrumentAmount=readLittleEndianIndexed(colhChunk.data,4);SpessaSynthInfo(`%cInstruments amount: %c${instrumentAmount}`,consoleColors.info,consoleColors.recognized);const waveListChunk=findRIFFListType(chunks,"wvpl");if(!waveListChunk){this.parsingError("No wvpl chunk!");return 5;}const waveList=this.verifyAndReadList(waveListChunk,"wvpl");waveList.forEach(wave=>{dls.samples.push(DownloadableSoundsSample.read(wave));});const instrumentListChunk=findRIFFListType(chunks,"lins");if(!instrumentListChunk){this.parsingError("No lins chunk!");return 5;}const instruments=this.verifyAndReadList(instrumentListChunk,"lins");SpessaSynthGroupCollapsed("%cLoading instruments...",consoleColors.info);if(instruments.length!==instrumentAmount){SpessaSynthWarn(`Colh reported invalid amount of instruments. Detected ${instruments.length}, expected ${instrumentAmount}`);}instruments.forEach(ins=>{dls.instruments.push(DownloadableSoundsInstrument.read(dls.samples,ins));});SpessaSynthGroupEnd();const aliasingChunk=chunks.find(c=>c.header==="pgal");if(aliasingChunk){SpessaSynthInfo("%cFound the instrument aliasing chunk!",consoleColors.recognized);const pgalData=aliasingChunk.data;if(pgalData[0]!==0||pgalData[1]!==1||pgalData[2]!==2||pgalData[3]!==3){pgalData.currentIndex+=4;}const drumInstrument=dls.instruments.find(i=>BankSelectHacks.isXGDrums(i.bankMSB)||i.isGMGSDrum);if(!drumInstrument){SpessaSynthWarn("MobileBAE aliasing chunk without a drum preset. Aborting!");return dls;}const drumAliases=pgalData.slice(pgalData.currentIndex,pgalData.currentIndex+128);pgalData.currentIndex+=128;for(let keyNum=0;keyNum<128;keyNum++){const alias=drumAliases[keyNum];if(alias===keyNum){continue;}const region=drumInstrument.regions.find(r=>r.keyRange.max===alias&&r.keyRange.min===alias);if(!region){SpessaSynthWarn(`Invalid drum alias ${keyNum} to ${alias}: region does not exist.`);continue;}const copied=DownloadableSoundsRegion.copyFrom(region);copied.keyRange.max=keyNum;copied.keyRange.min=keyNum;drumInstrument.regions.push(copied);}pgalData.currentIndex+=4;while(pgalData.currentIndex<pgalData.length){const aliasBankNum=readLittleEndianIndexed(pgalData,2);const aliasBankLSB=aliasBankNum&127;const aliasBankMSB=aliasBankNum>>7&127;const aliasProgram=pgalData[pgalData.currentIndex++];let nullByte=pgalData[pgalData.currentIndex++];if(nullByte!==0){SpessaSynthWarn(`Invalid alias byte. Expected 0, got ${nullByte}`);}const inputBankNum=readLittleEndianIndexed(pgalData,2);const inputBankLSB=inputBankNum&127;const inputBankMSB=inputBankNum>>7&127;const inputProgram=pgalData[pgalData.currentIndex++];nullByte=pgalData[pgalData.currentIndex++];if(nullByte!==0){SpessaSynthWarn(`Invalid alias header. Expected 0, got ${nullByte}`);}const inputInstrument=dls.instruments.find(inst=>inst.bankLSB===inputBankLSB&&inst.bankMSB===inputBankMSB&&inst.program===inputProgram&&!inst.isGMGSDrum);if(!inputInstrument){SpessaSynthWarn(`Invalid alias. Missing instrument: ${inputBankLSB}:${inputBankMSB}:${inputProgram}`);continue;}const alias=DownloadableSoundsInstrument.copyFrom(inputInstrument);alias.bankMSB=aliasBankMSB;alias.bankLSB=aliasBankLSB;alias.program=aliasProgram;dls.instruments.push(alias);}}SpessaSynthInfo(`%cParsing finished! %c"${dls.soundBankInfo.name||"UNNAMED"}"%c has %c${dls.instruments.length}%c instruments and %c${dls.samples.length}%c samples.`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info);SpessaSynthGroupEnd();return dls;}/**
     * Performs a full conversion from BasicSoundBank to DownloadableSounds.
     */static fromSF(bank){SpessaSynthGroupCollapsed("%cSaving SF2 to DLS level 2...",consoleColors.info);const dls=new _DownloadableSounds();dls.soundBankInfo={...bank.soundBankInfo};dls.soundBankInfo.comment=(dls.soundBankInfo.comment??"(No description)")+"\nConverted from SF2 to DLS with SpessaSynth";bank.samples.forEach(s=>{dls.samples.push(DownloadableSoundsSample.fromSFSample(s));});bank.presets.forEach(p=>{dls.instruments.push(DownloadableSoundsInstrument.fromSFPreset(p,bank.samples));});SpessaSynthInfo("%cConversion complete!",consoleColors.recognized);SpessaSynthGroupEnd();return dls;}static printInfo(dls){for(const[info,value]of Object.entries(dls.soundBankInfo)){if(typeof value==="object"&&"major"in value){const v=value;SpessaSynthInfo(`%c${info}: %c"${v.major}.${v.minor}"`,consoleColors.info,consoleColors.recognized);}SpessaSynthInfo(`%c${info}: %c${value.toLocaleString()}`,consoleColors.info,consoleColors.recognized);}}/**
     * Writes an SF2 file
     * @param options
     */async write(options=DEFAULT_DLS_OPTIONS){SpessaSynthGroupCollapsed("%cSaving DLS...",consoleColors.info);const colhNum=new IndexedByteArray(4);writeDword(colhNum,this.instruments.length);const colh=writeRIFFChunkRaw("colh",colhNum);SpessaSynthGroupCollapsed("%cWriting instruments...",consoleColors.info);const lins=writeRIFFChunkParts("lins",this.instruments.map(i=>i.write()),true);SpessaSynthInfo("%cSuccess!",consoleColors.recognized);SpessaSynthGroupEnd();SpessaSynthGroupCollapsed("%cWriting WAVE samples...",consoleColors.info);let currentIndex=0;const ptblOffsets=[];const samples=[];let written=0;for(const s of this.samples){var _options$progressFunc;const out2=s.write();await(options===null||options===void 0||(_options$progressFunc=options.progressFunction)===null||_options$progressFunc===void 0?void 0:_options$progressFunc.call(options,s.name,written,this.samples.length));ptblOffsets.push(currentIndex);currentIndex+=out2.length;samples.push(out2);written++;}const wvpl=writeRIFFChunkParts("wvpl",samples,true);SpessaSynthInfo("%cSucceeded!",consoleColors.recognized);const ptblData=new IndexedByteArray(8+4*ptblOffsets.length);writeDword(ptblData,8);writeDword(ptblData,ptblOffsets.length);for(const offset of ptblOffsets){writeDword(ptblData,offset);}const ptbl=writeRIFFChunkRaw("ptbl",ptblData);this.soundBankInfo.software="SpessaSynth";const infos=[];const writeDLSInfo=(type,data)=>{infos.push(writeRIFFChunkRaw(type,getStringBytes(data,true)));};for(const[t,d]of Object.entries(this.soundBankInfo)){const type=t;const data=d;if(!data){continue;}switch(type){case"name":writeDLSInfo("INAM",data);break;case"comment":writeDLSInfo("ICMT",data);break;case"copyright":writeDLSInfo("ICOP",data);break;case"creationDate":writeDLSInfo("ICRD",data.toISOString());break;case"engineer":writeDLSInfo("IENG",data);break;case"product":writeDLSInfo("IPRD",data);break;case"romVersion":case"version":case"soundEngine":case"romInfo":break;case"software":writeDLSInfo("ISFT",data);break;case"subject":writeDLSInfo("ISBJ",data);}}const info=writeRIFFChunkParts("INFO",infos,true);SpessaSynthInfo("%cCombining everything...");const out=writeRIFFChunkParts("RIFF",[getStringBytes("DLS "),colh,lins,ptbl,wvpl,info]);SpessaSynthInfo("%cSaved successfully!",consoleColors.recognized);SpessaSynthGroupEnd();return out.buffer;}/**
     * Performs a full conversion from DownloadableSounds to BasicSoundBank.
     */toSF(){SpessaSynthGroup("%cConverting DLS to SF2...",consoleColors.info);const soundBank=new BasicSoundBank();soundBank.soundBankInfo.version.minor=4;soundBank.soundBankInfo.version.major=2;soundBank.soundBankInfo={...this.soundBankInfo};soundBank.soundBankInfo.comment=(soundBank.soundBankInfo.comment??"(No description)")+"\nConverted from DLS to SF2 with SpessaSynth";this.samples.forEach(sample=>{sample.toSFSample(soundBank);});this.instruments.forEach(instrument=>{instrument.toSFPreset(soundBank);});soundBank.flush();SpessaSynthInfo("%cConversion complete!",consoleColors.recognized);SpessaSynthGroupEnd();return soundBank;}};var BasicSoundBank=class _BasicSoundBank{/**
     * Indicates if the SF3/SF2Pack decoder is ready.
     */static isSF3DecoderReady=stb.isInitialized;/**
     * Sound bank's info.
     */soundBankInfo={name:"Unnamed",creationDate:/* @__PURE__ */new Date(),software:"SpessaSynth",soundEngine:"E-mu 10K2",version:{major:2,minor:4}};/**
     * The sound bank's presets.
     */presets=[];/**
     * The sound bank's samples.
     */samples=[];/**
     * The sound bank's instruments.
     */instruments=[];/**
     * Sound bank's default modulators.
     */defaultModulators=SPESSASYNTH_DEFAULT_MODULATORS.map(Modulator.copyFrom.bind(Modulator));/**
     * If the sound bank has custom default modulators (DMOD).
     */customDefaultModulators=false;_isXGBank=false;/**
     * Checks for XG drum sets and considers if this sound bank is XG.
     */get isXGBank(){return this._isXGBank;}/**
     * Merges sound banks with the given order. Keep in mind that the info read is copied from the first one
     * @param soundBanks the sound banks to merge, the first overwrites the last
     */static mergeSoundBanks(...soundBanks){const mainSf=soundBanks.shift();if(!mainSf){throw new Error("No sound banks provided!");}const presets=mainSf.presets;while(soundBanks.length){var _soundBanks$shift;const newPresets=soundBanks===null||soundBanks===void 0||(_soundBanks$shift=soundBanks.shift())===null||_soundBanks$shift===void 0?void 0:_soundBanks$shift.presets;if(newPresets){newPresets.forEach(newPreset=>{if(presets.find(existingPreset=>newPreset.matches(existingPreset))===void 0){presets.push(newPreset);}});}}const b=new _BasicSoundBank();b.addCompletePresets(presets);b.soundBankInfo={...mainSf.soundBankInfo};return b;}/**
     * Creates a simple sound bank with one saw wave preset.
     */static async getSampleSoundBankFile(){const font=new _BasicSoundBank();const sampleData=new Float32Array(128);for(let i=0;i<128;i++){sampleData[i]=i/128*2-1;}const sample=new EmptySample();sample.name="Saw";sample.originalKey=65;sample.pitchCorrection=20;sample.loopEnd=127;sample.setAudioData(sampleData,44100);font.addSamples(sample);const inst=new BasicInstrument();inst.name="Saw Wave";inst.globalZone.addGenerators(new Generator(generatorTypes.initialAttenuation,375),new Generator(generatorTypes.releaseVolEnv,-1e3),new Generator(generatorTypes.sampleModes,1));inst.createZone(sample);const zone2=inst.createZone(sample);zone2.addGenerators(new Generator(generatorTypes.fineTune,-9));font.addInstruments(inst);const preset=new BasicPreset(font);preset.name="Saw Wave";preset.createZone(inst);font.addPresets(preset);font.soundBankInfo.name="Dummy";font.flush();return await font.writeSF2();}/**
     * Copies a given sound bank.
     * @param bank The sound bank to copy.
     */static copyFrom(bank){const copied=new _BasicSoundBank();bank.presets.forEach(p=>copied.clonePreset(p));copied.soundBankInfo={...bank.soundBankInfo};return copied;}/**
     * Adds complete presets along with their instruments and samples.
     * @param presets The presets to add.
     */addCompletePresets(presets){this.addPresets(...presets);const instrumentList=[];for(const preset of presets){for(const zone of preset.zones){if(zone.instrument&&!instrumentList.includes(zone.instrument)){instrumentList.push(zone.instrument);}}}this.addInstruments(...instrumentList);const sampleList=[];for(const instrument of instrumentList){for(const zone of instrument.zones){if(zone.sample&&!sampleList.includes(zone.sample)){sampleList.push(zone.sample);}}}this.addSamples(...sampleList);}/**
     * Write the sound bank as a .dls file. This may not be 100% accurate.
     * @param options - options for writing the file.
     * @returns the binary file.
     */async writeDLS(options=DEFAULT_DLS_OPTIONS){const dls=DownloadableSounds.fromSF(this);return dls.write(options);}/**
     * Writes the sound bank as an SF2 file.
     * @param writeOptions the options for writing.
     * @returns the binary file data.
     */async writeSF2(writeOptions=DEFAULT_SF2_WRITE_OPTIONS){return writeSF2Internal(this,writeOptions);}addPresets(...presets){this.presets.push(...presets);}addInstruments(...instruments){this.instruments.push(...instruments);}addSamples(...samples){this.samples.push(...samples);}/**
     * Clones a sample into this bank.
     * @param sample The sample to copy.
     * @returns the copied sample, if a sample exists with that name, it is returned instead
     */cloneSample(sample){const duplicate=this.samples.find(s=>s.name===sample.name);if(duplicate){return duplicate;}const newSample=new BasicSample(sample.name,sample.sampleRate,sample.originalKey,sample.pitchCorrection,sample.sampleType,sample.loopStart,sample.loopEnd);if(sample.isCompressed){newSample.setCompressedData(sample.getRawData(true));}else{newSample.setAudioData(sample.getAudioData(),sample.sampleRate);}this.addSamples(newSample);if(sample.linkedSample){const clonedLinked=this.cloneSample(sample.linkedSample);if(!clonedLinked.linkedSample){newSample.setLinkedSample(clonedLinked,newSample.sampleType);}}return newSample;}/**
     * Recursively clones an instrument into this sound bank, as well as its samples.
     * @returns the copied instrument, if an instrument exists with that name, it is returned instead.
     */cloneInstrument(instrument){const duplicate=this.instruments.find(i=>i.name===instrument.name);if(duplicate){return duplicate;}const newInstrument=new BasicInstrument();newInstrument.name=instrument.name;newInstrument.globalZone.copyFrom(instrument.globalZone);for(const zone of instrument.zones){const copiedZone=newInstrument.createZone(this.cloneSample(zone.sample));copiedZone.copyFrom(zone);}this.addInstruments(newInstrument);return newInstrument;}// noinspection JSUnusedGlobalSymbols
/**
     * Recursively clones a preset into this sound bank, as well as its instruments and samples.
     * @returns the copied preset, if a preset exists with that name, it is returned instead.
     */clonePreset(preset){const duplicate=this.presets.find(p=>p.name===preset.name);if(duplicate){return duplicate;}const newPreset=new BasicPreset(this);newPreset.name=preset.name;newPreset.bankMSB=preset.bankMSB;newPreset.bankLSB=preset.bankLSB;newPreset.isGMGSDrum=preset.isGMGSDrum;newPreset.program=preset.program;newPreset.library=preset.library;newPreset.genre=preset.genre;newPreset.morphology=preset.morphology;newPreset.globalZone.copyFrom(preset.globalZone);for(const zone of preset.zones){const copiedZone=newPreset.createZone(this.cloneInstrument(zone.instrument));copiedZone.copyFrom(zone);}this.addPresets(newPreset);return newPreset;}/**
     * Updates internal values.
     */flush(){this.presets.sort(MIDIPatchTools.sorter.bind(MIDIPatchTools));this.parseInternal();}/**
     * Trims a sound bank to only contain samples in a given MIDI file.
     * @param mid - the MIDI file
     */trimSoundBank(mid){const trimInstrumentZones=(instrument,combos)=>{let trimmedIZones=0;for(let iZoneIndex=0;iZoneIndex<instrument.zones.length;iZoneIndex++){const iZone=instrument.zones[iZoneIndex];const iKeyRange=iZone.keyRange;const iVelRange=iZone.velRange;let isIZoneUsed=false;for(const iCombo of combos){if(iCombo.key>=iKeyRange.min&&iCombo.key<=iKeyRange.max&&iCombo.velocity>=iVelRange.min&&iCombo.velocity<=iVelRange.max){isIZoneUsed=true;break;}}if(!isIZoneUsed&&iZone.sample){SpessaSynthInfo(`%c${iZone.sample.name}%c removed from %c${instrument.name}%c.`,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info);if(instrument.deleteZone(iZoneIndex)){trimmedIZones++;iZoneIndex--;SpessaSynthInfo(`%c${iZone.sample.name}%c deleted`,consoleColors.recognized,consoleColors.info);}if(iZone.sample.useCount<1){this.deleteSample(iZone.sample);}}}return trimmedIZones;};SpessaSynthGroup("%cTrimming sound bank...",consoleColors.info);const usedProgramsAndKeys=mid.getUsedProgramsAndKeys(this);SpessaSynthGroupCollapsed("%cModifying sound bank...",consoleColors.info);SpessaSynthInfo("Detected keys for midi:",usedProgramsAndKeys);for(let presetIndex=0;presetIndex<this.presets.length;presetIndex++){const p=this.presets[presetIndex];const used=usedProgramsAndKeys.get(p);if(used===void 0){SpessaSynthInfo(`%cDeleting preset %c${p.name}%c and its zones`,consoleColors.info,consoleColors.recognized,consoleColors.info);this.deletePreset(p);presetIndex--;}else{const combos=[...used].map(s=>{const split=s.split("-");return{key:parseInt(split[0]),velocity:parseInt(split[1])};});SpessaSynthGroupCollapsed(`%cTrimming %c${p.name}`,consoleColors.info,consoleColors.recognized);SpessaSynthInfo(`Keys for ${p.name}:`,combos);let trimmedZones=0;for(let zoneIndex=0;zoneIndex<p.zones.length;zoneIndex++){const zone=p.zones[zoneIndex];const keyRange=zone.keyRange;const velRange=zone.velRange;let isZoneUsed=false;for(const combo of combos){if(combo.key>=keyRange.min&&combo.key<=keyRange.max&&combo.velocity>=velRange.min&&combo.velocity<=velRange.max&&zone.instrument){isZoneUsed=true;const trimmedIZones=trimInstrumentZones(zone.instrument,combos);SpessaSynthInfo(`%cTrimmed off %c${trimmedIZones}%c zones from %c${zone.instrument.name}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);break;}}if(!isZoneUsed&&zone.instrument){trimmedZones++;p.deleteZone(zoneIndex);if(zone.instrument.useCount<1){this.deleteInstrument(zone.instrument);}zoneIndex--;}}SpessaSynthInfo(`%cTrimmed off %c${trimmedZones}%c zones from %c${p.name}`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized);SpessaSynthGroupEnd();}}this.removeUnusedElements();SpessaSynthInfo("%cSound bank modified!",consoleColors.recognized);SpessaSynthGroupEnd();SpessaSynthGroupEnd();}removeUnusedElements(){this.instruments=this.instruments.filter(i=>{i.deleteUnusedZones();const deletable=i.useCount<1;if(deletable){i.delete();}return!deletable;});this.samples=this.samples.filter(s=>{const deletable=s.useCount<1;if(deletable){s.unlinkSample();}return!deletable;});}deleteInstrument(instrument){instrument.delete();this.instruments.splice(this.instruments.indexOf(instrument),1);}deletePreset(preset){preset.delete();this.presets.splice(this.presets.indexOf(preset),1);}deleteSample(sample){sample.unlinkSample();this.samples.splice(this.samples.indexOf(sample),1);}/**
     * Get the appropriate preset.
     */getPreset(patch,system){return selectPreset(this.presets,patch,system);}destroySoundBank(){this.presets.length=0;this.instruments.length=0;this.samples.length=0;}parsingError(error){throw new Error(`SF parsing error: ${error} The file may be corrupted.`);}/**
     * Parses the bank after loading is done
     * @protected
     */parseInternal(){this._isXGBank=false;const allowedPrograms=/* @__PURE__ */new Set([0,1,2,3,4,5,6,7,8,9,16,17,24,25,26,27,28,29,30,31,32,33,40,41,48,56,57,58,64,65,66,126,127]);for(const preset of this.presets){if(BankSelectHacks.isXGDrums(preset.bankMSB)){this._isXGBank=true;if(!allowedPrograms.has(preset.program)){this._isXGBank=false;SpessaSynthInfo(`%cThis bank is not valid XG. Preset %c${preset.toString()}%c is not a valid XG drum. XG mode will use presets on bank 128.`,consoleColors.info,consoleColors.value,consoleColors.info);break;}}}}printInfo(){for(const[info,value]of Object.entries(this.soundBankInfo)){if(typeof value==="object"&&"major"in value){const v=value;SpessaSynthInfo(`%c${info}: %c"${v.major}.${v.minor}"`,consoleColors.info,consoleColors.recognized);}SpessaSynthInfo(`%c${info}: %c${value.toLocaleString()}`,consoleColors.info,consoleColors.recognized);}}};var ReadGenerator=class extends Generator{/**
     * Creates a generator
     */constructor(dataArray){const i=dataArray.currentIndex;const generatorType=dataArray[i+1]<<8|dataArray[i];const generatorValue=signedInt16(dataArray[i+2],dataArray[i+3]);dataArray.currentIndex+=4;super(generatorType,generatorValue,false);}};function readGenerators(generatorChunk){const gens=[];while(generatorChunk.data.length>generatorChunk.data.currentIndex){gens.push(new ReadGenerator(generatorChunk.data));}gens.pop();return gens;}var SoundFontPresetZone=class extends BasicPresetZone{/**
     * Creates a zone (preset)
     */constructor(preset,modulators,generators,instruments){const instrumentID=generators.find(g=>g.generatorType===generatorTypes.instrument);let instrument=void 0;if(instrumentID){instrument=instruments[instrumentID.generatorValue];}else{throw new Error("No instrument ID found in preset zone.");}if(!instrument){throw new Error(`Invalid instrument ID: ${instrumentID.generatorValue}, available instruments: ${instruments.length}`);}super(preset,instrument);this.addGenerators(...generators);this.addModulators(...modulators);}};function applyPresetZones(indexes,presetGens,presetMods,instruments,presets){const genStartIndexes=indexes.gen;const modStartIndexes=indexes.mod;let modIndex=0;let genIndex=0;for(const preset of presets){for(let i=0;i<preset.zonesCount;i++){const gensStart=genStartIndexes[genIndex++];const gensEnd=genStartIndexes[genIndex];const gens=presetGens.slice(gensStart,gensEnd);const modsStart=modStartIndexes[modIndex++];const modsEnd=modStartIndexes[modIndex];const mods=presetMods.slice(modsStart,modsEnd);if(gens.find(g=>g.generatorType===generatorTypes.instrument)!==void 0){preset.createSoundFontZone(mods,gens,instruments);}else{preset.globalZone.addGenerators(...gens);preset.globalZone.addModulators(...mods);}}}}var SoundFontPreset=class extends BasicPreset{zoneStartIndex;zonesCount=0;/**
     * Creates a preset
     */constructor(presetChunk,sf2){super(sf2);this.name=readBinaryStringIndexed(presetChunk.data,20).replace(/\d{3}:\d{3}/,"");this.program=readLittleEndianIndexed(presetChunk.data,2);const wBank=readLittleEndianIndexed(presetChunk.data,2);this.bankMSB=wBank&127;this.isGMGSDrum=(wBank&128)>0;this.bankLSB=wBank>>8;this.zoneStartIndex=readLittleEndianIndexed(presetChunk.data,2);this.library=readLittleEndianIndexed(presetChunk.data,4);this.genre=readLittleEndianIndexed(presetChunk.data,4);this.morphology=readLittleEndianIndexed(presetChunk.data,4);}createSoundFontZone(modulators,generators,instruments){const z=new SoundFontPresetZone(this,modulators,generators,instruments);this.zones.push(z);return z;}};function readPresets(presetChunk,parent){const presets=[];while(presetChunk.data.length>presetChunk.data.currentIndex){const preset=new SoundFontPreset(presetChunk,parent);if(presets.length>0){const previous=presets[presets.length-1];previous.zonesCount=preset.zoneStartIndex-previous.zoneStartIndex;}presets.push(preset);}presets.pop();return presets;}var SoundFontInstrumentZone=class extends BasicInstrumentZone{/**
     * Creates a zone (instrument)
     */constructor(inst,modulators,generators,samples){const sampleID=generators.find(g=>g.generatorType===generatorTypes.sampleID);let sample=void 0;if(sampleID){sample=samples[sampleID.generatorValue];}else{throw new Error("No sample ID found in instrument zone.");}if(!sample){throw new Error(`Invalid sample ID: ${sampleID.generatorValue}, available samples: ${samples.length}`);}super(inst,sample);this.addGenerators(...generators);this.addModulators(...modulators);}};function applyInstrumentZones(indexes,instrumentGenerators,instrumentModulators,samples,instruments){const genStartIndexes=indexes.gen;const modStartIndexes=indexes.mod;let modIndex=0;let genIndex=0;for(const instrument of instruments){for(let i=0;i<instrument.zonesCount;i++){const gensStart=genStartIndexes[genIndex++];const gensEnd=genStartIndexes[genIndex];const gens=instrumentGenerators.slice(gensStart,gensEnd);const modsStart=modStartIndexes[modIndex++];const modsEnd=modStartIndexes[modIndex];const mods=instrumentModulators.slice(modsStart,modsEnd);if(gens.find(g=>g.generatorType===generatorTypes.sampleID)){instrument.createSoundFontZone(mods,gens,samples);}else{instrument.globalZone.addGenerators(...gens);instrument.globalZone.addModulators(...mods);}}}}var SoundFontInstrument=class extends BasicInstrument{zoneStartIndex;zonesCount=0;/**
     * Creates an instrument
     */constructor(instrumentChunk){super();this.name=readBinaryStringIndexed(instrumentChunk.data,20);this.zoneStartIndex=readLittleEndianIndexed(instrumentChunk.data,2);}createSoundFontZone(modulators,generators,samples){const z=new SoundFontInstrumentZone(this,modulators,generators,samples);this.zones.push(z);return z;}};function readInstruments(instrumentChunk){const instruments=[];while(instrumentChunk.data.length>instrumentChunk.data.currentIndex){const instrument=new SoundFontInstrument(instrumentChunk);if(instruments.length>0){const previous=instruments[instruments.length-1];previous.zonesCount=instrument.zoneStartIndex-previous.zoneStartIndex;}instruments.push(instrument);}instruments.pop();return instruments;}function readModulators(modulatorChunk){const mods=[];while(modulatorChunk.data.length>modulatorChunk.data.currentIndex){const dataArray=modulatorChunk.data;const sourceEnum=readLittleEndianIndexed(dataArray,2);const destination=readLittleEndianIndexed(dataArray,2);const amount=signedInt16(dataArray[dataArray.currentIndex++],dataArray[dataArray.currentIndex++]);const secondarySourceEnum=readLittleEndianIndexed(dataArray,2);const transformType=readLittleEndianIndexed(dataArray,2);mods.push(new DecodedModulator(sourceEnum,secondarySourceEnum,destination,amount,transformType));}mods.pop();return mods;}function readZoneIndexes(zonesChunk){const modStartIndexes=[];const genStartIndexes=[];while(zonesChunk.data.length>zonesChunk.data.currentIndex){genStartIndexes.push(readLittleEndianIndexed(zonesChunk.data,2));modStartIndexes.push(readLittleEndianIndexed(zonesChunk.data,2));}return{mod:modStartIndexes,gen:genStartIndexes};}var SoundFont2=class extends BasicSoundBank{sampleDataStartIndex=0;/**
     * Initializes a new SoundFont2 Parser and parses the given data array
     */constructor(arrayBuffer,warnDeprecated=true){super();if(warnDeprecated){throw new Error("Using the constructor directly is deprecated. Use SoundBankLoader.fromArrayBuffer() instead.");}const mainFileArray=new IndexedByteArray(arrayBuffer);SpessaSynthGroup("%cParsing a SoundFont2 file...",consoleColors.info);if(!mainFileArray){SpessaSynthGroupEnd();this.parsingError("No data provided!");}const firstChunk=readRIFFChunk(mainFileArray,false);this.verifyHeader(firstChunk,"riff");const type=readBinaryStringIndexed(mainFileArray,4).toLowerCase();if(type!=="sfbk"&&type!=="sfpk"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid soundFont! Expected "sfbk" or "sfpk" got "${type}"`);}const isSF2Pack=type==="sfpk";const infoChunk=readRIFFChunk(mainFileArray);this.verifyHeader(infoChunk,"list");const infoString=readBinaryStringIndexed(infoChunk.data,4);if(infoString!=="INFO"){SpessaSynthGroupEnd();throw new SyntaxError(`Invalid soundFont! Expected "INFO" or "${infoString}"`);}let xdtaChunk=void 0;while(infoChunk.data.length>infoChunk.data.currentIndex){const chunk=readRIFFChunk(infoChunk.data);const text=readBinaryString(chunk.data,chunk.data.length);const headerTyped=chunk.header;switch(headerTyped){case"ifil":case"iver":const major=readLittleEndianIndexed(chunk.data,2);const minor=readLittleEndianIndexed(chunk.data,2);if(headerTyped==="ifil"){this.soundBankInfo.version={major,minor};}else{this.soundBankInfo.romVersion={major,minor};}break;// Dmod: default modulators
case"DMOD":{this.defaultModulators=readModulators(chunk);this.customDefaultModulators=true;break;}case"LIST":{const listType=readBinaryStringIndexed(chunk.data,4);if(listType==="xdta"){SpessaSynthInfo("%cExtended SF2 found!",consoleColors.recognized);xdtaChunk=chunk;}break;}case"ICRD":this.soundBankInfo.creationDate=parseDateString(readBinaryStringIndexed(chunk.data,chunk.data.length));break;case"ISFT":this.soundBankInfo.software=text;break;case"IPRD":this.soundBankInfo.product=text;break;case"IENG":this.soundBankInfo.engineer=text;break;case"ICOP":this.soundBankInfo.copyright=text;break;case"INAM":this.soundBankInfo.name=text;break;case"ICMT":this.soundBankInfo.comment=text;break;case"irom":this.soundBankInfo.romInfo=text;break;case"isng":this.soundBankInfo.soundEngine=text;}}this.printInfo();const xChunks={};if(xdtaChunk!==void 0){xChunks.phdr=readRIFFChunk(xdtaChunk.data);xChunks.pbag=readRIFFChunk(xdtaChunk.data);xChunks.pmod=readRIFFChunk(xdtaChunk.data);xChunks.pgen=readRIFFChunk(xdtaChunk.data);xChunks.inst=readRIFFChunk(xdtaChunk.data);xChunks.ibag=readRIFFChunk(xdtaChunk.data);xChunks.imod=readRIFFChunk(xdtaChunk.data);xChunks.igen=readRIFFChunk(xdtaChunk.data);xChunks.shdr=readRIFFChunk(xdtaChunk.data);}const sdtaChunk=readRIFFChunk(mainFileArray,false);this.verifyHeader(sdtaChunk,"list");this.verifyText(readBinaryStringIndexed(mainFileArray,4),"sdta");SpessaSynthInfo("%cVerifying smpl chunk...",consoleColors.warn);const sampleDataChunk=readRIFFChunk(mainFileArray,false);this.verifyHeader(sampleDataChunk,"smpl");let sampleData;if(isSF2Pack){SpessaSynthInfo("%cSF2Pack detected, attempting to decode the smpl chunk...",consoleColors.info);try{sampleData=stb.decode(mainFileArray.buffer.slice(mainFileArray.currentIndex,mainFileArray.currentIndex+sdtaChunk.size-12)).data[0];}catch(e){SpessaSynthGroupEnd();throw new Error(`SF2Pack Ogg Vorbis decode error: ${e}`);}SpessaSynthInfo(`%cDecoded the smpl chunk! Length: %c${sampleData.length}`,consoleColors.info,consoleColors.value);}else{sampleData=mainFileArray;this.sampleDataStartIndex=mainFileArray.currentIndex;}SpessaSynthInfo(`%cSkipping sample chunk, length: %c${sdtaChunk.size-12}`,consoleColors.info,consoleColors.value);mainFileArray.currentIndex+=sdtaChunk.size-12;SpessaSynthInfo("%cLoading preset data chunk...",consoleColors.warn);const presetChunk=readRIFFChunk(mainFileArray);this.verifyHeader(presetChunk,"list");readBinaryStringIndexed(presetChunk.data,4);const phdrChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(phdrChunk,"phdr");const pbagChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(pbagChunk,"pbag");const pmodChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(pmodChunk,"pmod");const pgenChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(pgenChunk,"pgen");const instChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(instChunk,"inst");const ibagChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(ibagChunk,"ibag");const imodChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(imodChunk,"imod");const igenChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(igenChunk,"igen");const shdrChunk=readRIFFChunk(presetChunk.data);this.verifyHeader(shdrChunk,"shdr");SpessaSynthInfo("%cParsing samples...",consoleColors.info);mainFileArray.currentIndex=this.sampleDataStartIndex;const samples=readSamples(shdrChunk,sampleData,xdtaChunk===void 0);if(xdtaChunk&&xChunks.shdr){const xSamples=readSamples(xChunks.shdr,new Float32Array(1),false);if(xSamples.length===samples.length){samples.forEach((s,i)=>{s.name+=xSamples[i].name;s.linkedSampleIndex|=xSamples[i].linkedSampleIndex<<16;});}}samples.forEach(s=>s.name=s.name.trim());this.samples.push(...samples);const instrumentGenerators=readGenerators(igenChunk);const instrumentModulators=readModulators(imodChunk);const instruments=readInstruments(instChunk);if(xdtaChunk&&xChunks.inst){const xInst=readInstruments(xChunks.inst);if(xInst.length===instruments.length){instruments.forEach((inst,i)=>{inst.name+=xInst[i].name;inst.zoneStartIndex|=xInst[i].zoneStartIndex;});instruments.forEach((inst,i)=>{if(i<instruments.length-1){inst.zonesCount=instruments[i+1].zoneStartIndex-inst.zoneStartIndex;}});}}instruments.forEach(i=>i.name=i.name.trim());this.instruments.push(...instruments);const ibagIndexes=readZoneIndexes(ibagChunk);if(xdtaChunk&&xChunks.ibag){const extraIndexes=readZoneIndexes(xChunks.ibag);for(let i=0;i<ibagIndexes.mod.length;i++){ibagIndexes.mod[i]|=extraIndexes.mod[i]<<16;}for(let i=0;i<ibagIndexes.gen.length;i++){ibagIndexes.gen[i]|=extraIndexes.gen[i]<<16;}}applyInstrumentZones(ibagIndexes,instrumentGenerators,instrumentModulators,this.samples,instruments);const presetGenerators=readGenerators(pgenChunk);const presetModulators=readModulators(pmodChunk);const presets=readPresets(phdrChunk,this);if(xdtaChunk&&xChunks.phdr){const xPreset=readPresets(xChunks.phdr,this);if(xPreset.length===presets.length){presets.forEach((pres,i)=>{pres.name+=xPreset[i].name;pres.zoneStartIndex|=xPreset[i].zoneStartIndex;});presets.forEach((preset,i)=>{if(i<presets.length-1){preset.zonesCount=presets[i+1].zoneStartIndex-preset.zoneStartIndex;}});}}presets.forEach(p=>p.name===p.name.trim());this.addPresets(...presets);const pbagIndexes=readZoneIndexes(pbagChunk);if(xdtaChunk&&xChunks.pbag){const extraIndexes=readZoneIndexes(xChunks.pbag);for(let i=0;i<pbagIndexes.mod.length;i++){pbagIndexes.mod[i]|=extraIndexes.mod[i]<<16;}for(let i=0;i<pbagIndexes.gen.length;i++){pbagIndexes.gen[i]|=extraIndexes.gen[i]<<16;}}applyPresetZones(pbagIndexes,presetGenerators,presetModulators,this.instruments,presets);this.flush();SpessaSynthInfo(`%cParsing finished! %c"${this.soundBankInfo.name}"%c has %c${this.presets.length}%c presets,
        %c${this.instruments.length}%c instruments and %c${this.samples.length}%c samples.`,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info,consoleColors.recognized,consoleColors.info);SpessaSynthGroupEnd();}verifyHeader(chunk,expected){if(chunk.header.toLowerCase()!==expected.toLowerCase()){SpessaSynthGroupEnd();this.parsingError(`Invalid chunk header! Expected "${expected.toLowerCase()}" got "${chunk.header.toLowerCase()}"`);}}verifyText(text,expected){if(text.toLowerCase()!==expected.toLowerCase()){SpessaSynthGroupEnd();this.parsingError(`Invalid FourCC: Expected "${expected.toLowerCase()}" got "${text.toLowerCase()}"\``);}}};var SoundBankLoader=class{/**
     * Loads a sound bank from a file buffer.
     * @param buffer The binary file buffer to load.
     * @returns The loaded sound bank, a BasicSoundBank instance.
     */static fromArrayBuffer(buffer){const check=buffer.slice(8,12);const a=new IndexedByteArray(check);const id=readBinaryStringIndexed(a,4).toLowerCase();if(id==="dls "){return this.loadDLS(buffer);}return new SoundFont2(buffer,false);}static loadDLS(buffer){const dls=DownloadableSounds.read(buffer);return dls.toSF();}};var SpessaSynthProcessor3=class{// The sound bank manager, which manages all sound banks and presets.
soundBankManager=new SoundBankManager(this.updatePresetList.bind(this));/**
     * All MIDI channels of the synthesizer.
     */midiChannels=[];/**
     * Handles the custom key overrides: velocity and preset
     */keyModifierManager=new KeyModifierManager();/**
     * Current total amount of voices that are currently playing.
     */totalVoicesAmount=0;/**
     * Controls if the processor is fully initialized.
     */processorInitialized=stb.isInitialized;/**
     * The current time of the synthesizer, in seconds. You probably should not modify this directly.
     */currentSynthTime=0;/**
     * Sample rate in Hertz.
     */sampleRate;/**
     * Are the chorus and reverb effects enabled?
     */enableEffects=true;/**
     * Is the event system enabled?
     */enableEventSystem;/**
     * Calls when an event occurs.
     * @param event The event that occurred.
     */onEventCall;/**
     * Executes a system exclusive message for the synthesizer.
     * @param syx The system exclusive message as an array of bytes.
     * @param channelOffset The channel offset to apply (default is 0).
     */systemExclusive=systemExclusiveInternal.bind(this);/**
     * Executes a full system reset of all controllers.
     * This will reset all controllers to their default values,
     * except for the locked controllers.
     */resetAllControllers=resetAllControllersInternal.bind(this);/**
     * Sets a master parameter of the synthesizer.
     * @param type The type of the master parameter to set.
     * @param value The value to set for the master parameter.
     */setMasterParameter=setMasterParameterInternal.bind(this);// noinspection JSUnusedGlobalSymbols
/**
     * Gets a master parameter of the synthesizer.
     * @param type The type of the master parameter to get.
     * @returns The value of the master parameter.
     */getMasterParameter=getMasterParameterInternal.bind(this);/**
     * Gets all master parameters of the synthesizer.
     * @returns All the master parameters.
     */getAllMasterParameters=getAllMasterParametersInternal.bind(this);/**
     * Gets voices for a preset.
     * @param preset The preset to get voices for.
     * @param bankMSB The bank to cache the voices in.
     * @param program Program to cache the voices in.
     * @param midiNote The MIDI note to use.
     * @param velocity The velocity to use.
     * @param realKey The real MIDI note if the "midiNote" was changed by MIDI Tuning Standard.
     * @returns Output is an array of voices.
     * @remarks
     * This is a public method, but it is only intended to be used by the sequencer.
     */getVoicesForPreset=getVoicesForPresetInternal.bind(this);/**
     * Kills the specified number of voices based on their priority.
     * @param amount The number of voices to remove.
     */killVoices=killVoicesIntenral.bind(this);// Protected methods
getVoices=getVoicesInternal.bind(this);// This contains the properties that have to be accessed from the MIDI channels.
privateProps;/**
     * Tor applying the snapshot after an override sound bank too.
     */savedSnapshot;/**
     * Synth's event queue from the main thread
     */eventQueue=[];// The time of a single sample, in seconds.
sampleTime;/**
     * Creates a new synthesizer engine.
     * @param sampleRate sample rate, in Hertz.
     * @param opts the processor's options.
     */constructor(sampleRate,opts=DEFAULT_SYNTH_OPTIONS){const options=fillWithDefaults(opts,DEFAULT_SYNTH_OPTIONS);this.enableEffects=options.enableEffects;this.enableEventSystem=options.enableEventSystem;this.currentSynthTime=options.initialTime;this.sampleRate=sampleRate;this.sampleTime=1/sampleRate;if(isNaN(options.initialTime)||isNaN(sampleRate)){throw new Error("Initial time or sample rate is NaN!");}this.privateProps=new ProtectedSynthValues(this.callEvent.bind(this),this.getVoices.bind(this),this.killVoices.bind(this),// These smoothing factors were tested on 44,100 Hz, adjust them to target sample rate here
// Volume envelope smoothing factor
VOLUME_ENVELOPE_SMOOTHING_FACTOR*(44100/sampleRate),// Pan smoothing factor
PAN_SMOOTHING_FACTOR*(44100/sampleRate),// Filter smoothing factor
FILTER_SMOOTHING_FACTOR*(44100/sampleRate));for(let i=0;i<MIDI_CHANNEL_COUNT;i++){this.createMIDIChannelInternal(false);}void this.processorInitialized.then(()=>{SpessaSynthInfo("%cSpessaSynth is ready!",consoleColors.recognized);});}/**
     * Applies the snapshot to the synth
     */applySynthesizerSnapshot(snapshot){this.savedSnapshot=snapshot;snapshot.apply(this);SpessaSynthInfo("%cFinished applying snapshot!",consoleColors.info);this.resetAllControllers();}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a synthesizer snapshot from this processor instance.
     */getSnapshot(){return SynthesizerSnapshot.create(this);}/**
     * Sets the embedded sound bank.
     * @param bank The sound bank file to set.
     * @param offset The bank offset of the embedded sound bank.
     */setEmbeddedSoundBank(bank,offset){const loadedFont=SoundBankLoader.fromArrayBuffer(bank);this.soundBankManager.addSoundBank(loadedFont,EMBEDDED_SOUND_BANK_ID,offset);const order=this.soundBankManager.priorityOrder;order.pop();order.unshift(EMBEDDED_SOUND_BANK_ID);this.soundBankManager.priorityOrder=order;if(this.savedSnapshot!==void 0){this.applySynthesizerSnapshot(this.savedSnapshot);}SpessaSynthInfo(`%cEmbedded sound bank set at offset %c${offset}`,consoleColors.recognized,consoleColors.value);}// Removes the embedded sound bank from the synthesizer.
clearEmbeddedBank(){if(this.soundBankManager.soundBankList.some(s=>s.id===EMBEDDED_SOUND_BANK_ID)){this.soundBankManager.deleteSoundBank(EMBEDDED_SOUND_BANK_ID);}}// Creates a new MIDI channel for the synthesizer.
createMIDIChannel(){this.createMIDIChannelInternal(true);}/**
     * Stops all notes on all channels.
     * @param force if true, all notes are stopped immediately, otherwise they are stopped gracefully.
     */stopAllChannels(force=false){SpessaSynthInfo("%cStop all received!",consoleColors.info);for(const channel of this.midiChannels){channel.stopAllNotes(force);}}// noinspection JSUnusedGlobalSymbols
/**
     * Renders float32 audio data to stereo outputs; buffer size of 128 is recommended.
     * All float arrays must have the same length.
     * @param outputs output stereo channels (L, R).
     * @param reverb reverb stereo channels (L, R).
     * @param chorus chorus stereo channels (L, R).
     * @param startIndex start offset of the passed arrays, rendering starts at this index, defaults to 0.
     * @param sampleCount the length of the rendered buffer, defaults to float32array length - startOffset.
     */renderAudio(outputs,reverb,chorus,startIndex=0,sampleCount=0){this.renderAudioSplit(reverb,chorus,Array(16).fill(outputs),startIndex,sampleCount);}/**
     * Renders the float32 audio data of each channel; buffer size of 128 is recommended.
     * All float arrays must have the same length.
     * @param reverbChannels reverb stereo channels (L, R).
     * @param chorusChannels chorus stereo channels (L, R).
     * @param separateChannels a total of 16 stereo pairs (L, R) for each MIDI channel.
     * @param startIndex start offset of the passed arrays, rendering starts at this index, defaults to 0.
     * @param sampleCount the length of the rendered buffer, defaults to float32array length - startOffset.
     */renderAudioSplit(reverbChannels,chorusChannels,separateChannels,startIndex=0,sampleCount=0){const time=this.currentSynthTime;while(((_this$eventQueue$=this.eventQueue[0])===null||_this$eventQueue$===void 0?void 0:_this$eventQueue$.time)<=time){var _this$eventQueue$,_this$eventQueue$shif;(_this$eventQueue$shif=this.eventQueue.shift())===null||_this$eventQueue$shif===void 0||_this$eventQueue$shif.callback();}const revL=reverbChannels[0];const revR=reverbChannels[1];const chrL=chorusChannels[0];const chrR=chorusChannels[1];startIndex=Math.max(startIndex,0);const quantumSize=sampleCount||separateChannels[0][0].length-startIndex;this.totalVoicesAmount=0;this.midiChannels.forEach((channel,index)=>{if(channel.voices.length<1||channel.isMuted){return;}const voiceCount=channel.voices.length;const ch=index%16;channel.renderAudio(separateChannels[ch][0],separateChannels[ch][1],revL,revR,chrL,chrR,startIndex,quantumSize);this.totalVoicesAmount+=channel.voices.length;if(channel.voices.length!==voiceCount){channel.sendChannelProperty();}});this.currentSynthTime+=quantumSize*this.sampleTime;}// noinspection JSUnusedGlobalSymbols
/**
     *  Destroy the synthesizer processor, clearing all channels and voices.
     *  This is irreversible, so use with caution.
     */destroySynthProcessor(){this.midiChannels.forEach(c=>{c.voices.length=0;c.sustainedVoices.length=0;c.lockedControllers=[];c.preset=void 0;});this.clearCache();this.midiChannels.length=0;this.soundBankManager.destroy();}/**
     * Executes a MIDI controller change message on the specified channel.
     * @param channel The MIDI channel to change the controller on.
     * @param controllerNumber The MIDI controller number to change.
     * @param controllerValue The value to set the controller to.
     */controllerChange(channel,controllerNumber,controllerValue){this.midiChannels[channel].controllerChange(controllerNumber,controllerValue);}/**
     * Executes a MIDI Note-on message on the specified channel.
     * @param channel The MIDI channel to send the note on.
     * @param midiNote The MIDI note number to play.
     * @param velocity The velocity of the note, from 0 to 127.
     * @remarks
     * If the velocity is 0, it will be treated as a Note-off message.
     */noteOn(channel,midiNote,velocity){this.midiChannels[channel].noteOn(midiNote,velocity);}/**
     * Executes a MIDI Note-off message on the specified channel.
     * @param channel The MIDI channel to send the note off.
     * @param midiNote The MIDI note number to stop playing.
     */noteOff(channel,midiNote){this.midiChannels[channel].noteOff(midiNote);}/**
     * Executes a MIDI Poly Pressure (Aftertouch) message on the specified channel.
     * @param channel The MIDI channel to send the poly pressure on.
     * @param midiNote The MIDI note number to apply the pressure to.
     * @param pressure The pressure value, from 0 to 127.
     */polyPressure(channel,midiNote,pressure){this.midiChannels[channel].polyPressure(midiNote,pressure);}/**
     * Executes a MIDI Channel Pressure (Aftertouch) message on the specified channel.
     * @param channel The MIDI channel to send the channel pressure on.
     * @param pressure The pressure value, from 0 to 127.
     */channelPressure(channel,pressure){this.midiChannels[channel].channelPressure(pressure);}/**
     * Executes a MIDI Pitch Wheel message on the specified channel.
     * @param channel The MIDI channel to send the pitch wheel on.
     * @param pitch The new pitch value: 0-16384
     */pitchWheel(channel,pitch){this.midiChannels[channel].pitchWheel(pitch);}/**
     * Executes a MIDI Program Change message on the specified channel.
     * @param channel The MIDI channel to send the program change on.
     * @param programNumber The program number to change to, from 0 to 127.
     */programChange(channel,programNumber){this.midiChannels[channel].programChange(programNumber);}// noinspection JSUnusedGlobalSymbols
/**
     * Processes a raw MIDI message.
     * @param message The message to process.
     * @param channelOffset The channel offset for the message.
     * @param force If true, forces the message to be processed.
     * @param options Additional options for scheduling the message.
     */processMessage(message,channelOffset=0,force=false,options=DEFAULT_SYNTH_METHOD_OPTIONS){const call=()=>{const statusByteData=getEvent(message[0]);const channel=statusByteData.channel+channelOffset;switch(statusByteData.status){case midiMessageTypes.noteOn:{const velocity=message[2];if(velocity>0){this.noteOn(channel,message[1],velocity);}else{this.noteOff(channel,message[1]);}break;}case midiMessageTypes.noteOff:if(force){this.midiChannels[channel].killNote(message[1]);}else{this.noteOff(channel,message[1]);}break;case midiMessageTypes.pitchWheel:this.pitchWheel(channel,message[2]<<7|message[1]);break;case midiMessageTypes.controllerChange:this.controllerChange(channel,message[1],message[2]);break;case midiMessageTypes.programChange:this.programChange(channel,message[1]);break;case midiMessageTypes.polyPressure:this.polyPressure(channel,message[0],message[1]);break;case midiMessageTypes.channelPressure:this.channelPressure(channel,message[1]);break;case midiMessageTypes.systemExclusive:this.systemExclusive(new IndexedByteArray(message.slice(1)),channelOffset);break;case midiMessageTypes.reset:this.stopAllChannels(true);this.resetAllControllers();break;default:break;}};const time=options.time;if(time>this.currentSynthTime){this.eventQueue.push({callback:call.bind(this),time});this.eventQueue.sort((e1,e2)=>e1.time-e2.time);}else{call();}}// Clears the synthesizer's voice cache.
clearCache(){this.privateProps.cachedVoices=[];}/**
     * @param volume {number} 0 to 1
     */setMIDIVolume(volume){this.privateProps.midiVolume=Math.pow(volume,Math.E);}/**
     * Sets the synth's primary tuning.
     * @param cents
     */setMasterTuning(cents){cents=Math.round(cents);for(const channel of this.midiChannels){channel.setCustomController(customControllers.masterTuning,cents);}}/**
     * Calls synth event
     * @param eventName the event name
     * @param eventData the event data
     */callEvent(eventName,eventData){var _this$onEventCall2;(_this$onEventCall2=this.onEventCall)===null||_this$onEventCall2===void 0||_this$onEventCall2.call(this,{type:eventName,data:eventData});}getCachedVoice(patch,midiNote,velocity){var _this$privateProps$ca;let bankMSB=patch.bankMSB;let bankLSB=patch.bankLSB;const{isGMGSDrum,program}=patch;if(isGMGSDrum){bankMSB=128;bankLSB=0;}return(_this$privateProps$ca=this.privateProps.cachedVoices)===null||_this$privateProps$ca===void 0||(_this$privateProps$ca=_this$privateProps$ca[bankMSB])===null||_this$privateProps$ca===void 0||(_this$privateProps$ca=_this$privateProps$ca[bankLSB])===null||_this$privateProps$ca===void 0||(_this$privateProps$ca=_this$privateProps$ca[program])===null||_this$privateProps$ca===void 0||(_this$privateProps$ca=_this$privateProps$ca[midiNote])===null||_this$privateProps$ca===void 0?void 0:_this$privateProps$ca[velocity];}setCachedVoice(patch,midiNote,velocity,voices){let bankMSB=patch.bankMSB;let bankLSB=patch.bankLSB;const{isGMGSDrum,program}=patch;if(isGMGSDrum){bankMSB=128;bankLSB=0;}if(!this.privateProps.cachedVoices[bankMSB]){this.privateProps.cachedVoices[bankMSB]=[];}if(!this.privateProps.cachedVoices[bankMSB][bankLSB]){this.privateProps.cachedVoices[bankMSB][bankLSB]=[];}if(!this.privateProps.cachedVoices[bankMSB][bankLSB][program]){this.privateProps.cachedVoices[bankMSB][bankLSB][program]=[];}if(!this.privateProps.cachedVoices[bankMSB][bankLSB][program][midiNote]){this.privateProps.cachedVoices[bankMSB][bankLSB][program][midiNote]=[];}this.privateProps.cachedVoices[bankMSB][bankLSB][program][midiNote][velocity]=voices;}createMIDIChannelInternal(sendEvent){const channel=new MIDIChannel(this,this.privateProps,this.privateProps.defaultPreset,this.midiChannels.length);this.midiChannels.push(channel);if(sendEvent){this.callEvent("newChannel",void 0);channel.sendChannelProperty();this.midiChannels[this.midiChannels.length-1].setDrums(true);}}updatePresetList(){const mainFont=this.soundBankManager.presetList;this.clearCache();this.privateProps.callEvent("presetListChange",mainFont);this.getDefaultPresets();this.midiChannels.forEach(c=>{c.setPresetLock(false);});this.resetAllControllers(false);}getDefaultPresets(){this.privateProps.defaultPreset=this.soundBankManager.getPreset({bankLSB:0,bankMSB:0,program:0,isGMGSDrum:false},"xg");this.privateProps.drumPreset=this.soundBankManager.getPreset({bankLSB:0,bankMSB:0,program:0,isGMGSDrum:true},"gs");}};// src/utils/fill_with_defaults.ts
function fillWithDefaults2(obj,defObj){return{...defObj,...(obj??{})};}// src/synthesizer/basic/key_modifier_manager.ts
var WorkletKeyModifierManagerWrapper=class{// The velocity override mappings for MIDI keys
keyModifiers=[];synth;constructor(synth){this.synth=synth;}// noinspection JSUnusedGlobalSymbols
/**
     * Modifies a single key.
     * @param channel The channel affected. Usually 0-15.
     * @param midiNote The MIDI note to change. 0-127.
     * @param options The key's modifiers.
     */addModifier(channel,midiNote,options){const mod=new KeyModifier();mod.gain=(options===null||options===void 0?void 0:options.gain)??1;mod.velocity=(options===null||options===void 0?void 0:options.velocity)??-1;mod.patch=fillWithDefaults2(options.patch??{},{isGMGSDrum:false,bankLSB:-1,bankMSB:-1,program:-1});this.keyModifiers[channel]??=[];this.keyModifiers[channel][midiNote]=mod;this.sendToWorklet("addMapping",{channel,midiNote,mapping:mod});}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a key modifier.
     * @param channel The channel affected. Usually 0-15.
     * @param midiNote The MIDI note to change. 0-127.
     * @returns The key modifier if it exists.
     */getModifier(channel,midiNote){var _this$keyModifiers;return(_this$keyModifiers=this.keyModifiers)===null||_this$keyModifiers===void 0||(_this$keyModifiers=_this$keyModifiers[channel])===null||_this$keyModifiers===void 0?void 0:_this$keyModifiers[midiNote];}// noinspection JSUnusedGlobalSymbols
/**
     * Deletes a key modifier.
     * @param channel The channel affected. Usually 0-15.
     * @param midiNote The MIDI note to change. 0-127.
     */deleteModifier(channel,midiNote){var _this$keyModifiers$ch;this.sendToWorklet("deleteMapping",{channel,midiNote});if(((_this$keyModifiers$ch=this.keyModifiers[channel])===null||_this$keyModifiers$ch===void 0?void 0:_this$keyModifiers$ch[midiNote])===void 0){return;}this.keyModifiers[channel][midiNote]=void 0;}// noinspection JSUnusedGlobalSymbols
/**
     * Clears ALL Modifiers
     */clearModifiers(){this.sendToWorklet("clearMappings",null);this.keyModifiers=[];}sendToWorklet(type,data){const msg={type,data};this.synth.post({type:"keyModifierManager",channelNumber:-1,data:msg});}};// src/synthesizer/basic/sound_bank_manager.ts
var SoundBankManager2=class{/**
     * All the sound banks, ordered from the most important to the least.
     */soundBankList;synth;/**
     * Creates a new instance of the sound bank manager.
     */constructor(synth){this.soundBankList=[];this.synth=synth;}// noinspection JSUnusedGlobalSymbols
/**
     * The current sound bank priority order.
     * @returns The IDs of the sound banks in the current order.
     */get priorityOrder(){return this.soundBankList.map(s=>s.id);}// noinspection JSUnusedGlobalSymbols
/**
     * Rearranges the sound banks in a given order.
     * @param newList The order of sound banks, a list of identifiers, first overwrites second.
     */set priorityOrder(newList){this.sendToWorklet("rearrangeSoundBanks",newList);this.soundBankList.sort((a,b)=>newList.indexOf(a.id)-newList.indexOf(b.id));}// noinspection JSUnusedGlobalSymbols
/**
     * Adds a new sound bank buffer with a given ID.
     * @param soundBankBuffer The sound bank's buffer
     * @param id The sound bank's unique identifier.
     * @param bankOffset The sound bank's bank offset. Default is 0.
     */async addSoundBank(soundBankBuffer,id,bankOffset=0){this.sendToWorklet("addSoundBank",{soundBankBuffer,bankOffset,id},[soundBankBuffer]);await this.awaitResponse();const found=this.soundBankList.find(s=>s.id===id);if(found!==void 0){found.bankOffset=bankOffset;}else{this.soundBankList.push({id,bankOffset});}}// noinspection JSUnusedGlobalSymbols
/**
     * Deletes a sound bank with the given ID.
     * @param id The sound bank to delete.
     */async deleteSoundBank(id){if(this.soundBankList.length<2){SpessaSynthCoreUtils.SpessaSynthWarn("1 sound bank left. Aborting!");return;}if(this.soundBankList.findIndex(s=>s.id===id)===-1){SpessaSynthCoreUtils.SpessaSynthWarn(`No sound banks with id of "${id}" found. Aborting!`);return;}this.sendToWorklet("deleteSoundBank",id);this.soundBankList=this.soundBankList.filter(s=>s.id!==id);await this.awaitResponse();}async awaitResponse(){return new Promise(r=>this.synth.awaitWorkerResponse("soundBankManager",r));}sendToWorklet(type,data,transferable=[]){const msg={type:"soundBankManager",channelNumber:-1,data:{type,data}};this.synth.post(msg,transferable);}};// src/synthesizer/basic/synth_event_handler.ts
var SynthEventHandler=class{/**
     * The time delay before an event is called.
     * Set to 0 to disable it.
     */timeDelay=0;/**
     * The main list of events.
     * @private
     */events={noteOff:/* @__PURE__ */new Map(),// Called on a note off message
noteOn:/* @__PURE__ */new Map(),// Called on a note on message
pitchWheel:/* @__PURE__ */new Map(),// Called on a pitch-wheel change
controllerChange:/* @__PURE__ */new Map(),// Called on a controller change
programChange:/* @__PURE__ */new Map(),// Called on a program change
channelPressure:/* @__PURE__ */new Map(),// Called on a channel pressure message
polyPressure:/* @__PURE__ */new Map(),// Called on a poly pressure message
drumChange:/* @__PURE__ */new Map(),// Called when a channel type changes
stopAll:/* @__PURE__ */new Map(),// Called when the synth receives stop all command
newChannel:/* @__PURE__ */new Map(),// Called when a new channel is created
muteChannel:/* @__PURE__ */new Map(),// Called when a channel is muted/unmuted
presetListChange:/* @__PURE__ */new Map(),// Called when the preset list changes (soundfont gets reloaded)
allControllerReset:/* @__PURE__ */new Map(),// Called when all controllers are reset
soundBankError:/* @__PURE__ */new Map(),// Called when a sound bank parsing error occurs
synthDisplay:/* @__PURE__ */new Map(),// Called when there's a SysEx message to display some text
masterParameterChange:/* @__PURE__ */new Map(),// Called when a master parameter changes
channelPropertyChange:/* @__PURE__ */new Map()// Called when a channel property changes
};/**
     * Adds a new event listener.
     * @param event The event to listen to.
     * @param id The unique identifier for the event. It can be used to overwrite existing callback with the same ID.
     * @param callback The callback for the event.
     */addEvent(event,id,callback){this.events[event].set(id,callback);}// noinspection JSUnusedGlobalSymbols
/**
     * Removes an event listener
     * @param name The event to remove a listener from.
     * @param id The unique identifier for the event to remove.
     */removeEvent(name,id){this.events[name].delete(id);}/**
     * Calls the given event.
     * INTERNAL USE ONLY!
     */callEventInternal(name,eventData){const eventList=this.events[name];const callback=()=>{eventList.forEach(callback2=>{try{callback2(eventData);}catch(e){console.error(`Error while executing an event callback for ${name}:`,e);}});};if(this.timeDelay>0){setTimeout(callback.bind(this),this.timeDelay*1e3);}else{callback();}}};// src/synthesizer/audio_effects/basic_effects_processor.ts
var BasicEffectsProcessor=class{// The input of the processor.
input;output;constructor(input,output){this.input=input;this.output=output;}/**
     * Connects the processor to a given node.
     * @param destinationNode The node to connect to.
     */connect(destinationNode){return this.output.connect(destinationNode);}/**
     * Disconnects the processor from a given node.
     * @param destinationNode The node to disconnect from.
     */disconnect(destinationNode){if(!destinationNode){return this.output.disconnect();}return this.output.disconnect(destinationNode);}/**
     * Disconnects the effect processor.
     */delete(){this.input.disconnect();this.output.disconnect();}};// src/synthesizer/audio_effects/chorus.ts
var NODES_AMOUNT=4;var DEFAULT_DELAY=0.03;var DELAY_VARIATION=0.013;var STEREO_DIFF=0.03;var OSC_FREQ=0.2;var OSC_FREQ_VARIATION=0.05;var OSC_GAIN=3e-3;var DEFAULT_CHORUS_CONFIG={nodesAmount:NODES_AMOUNT,defaultDelay:DEFAULT_DELAY,delayVariation:DELAY_VARIATION,stereoDifference:STEREO_DIFF,oscillatorFrequency:OSC_FREQ,oscillatorFrequencyVariation:OSC_FREQ_VARIATION,oscillatorGain:OSC_GAIN};var ChorusProcessor=class extends BasicEffectsProcessor{chorusLeft=[];chorusRight=[];/**
     * Creates a fancy chorus effect.
     * @param context The audio context.
     * @param config The configuration for the chorus.
     */constructor(context,config=DEFAULT_CHORUS_CONFIG){super(context.createChannelSplitter(2),context.createChannelMerger(2));this.update(config);}_config=DEFAULT_CHORUS_CONFIG;get config(){return this._config;}/**
     * Updates the chorus with a given config.
     * @param chorusConfig The config to use.
     */update(chorusConfig){this.deleteNodes();const config=fillWithDefaults2(chorusConfig,DEFAULT_CHORUS_CONFIG);this._config=config;let freq=config.oscillatorFrequency;let delay=config.defaultDelay;for(let i=0;i<config.nodesAmount;i++){this.createChorusNode(freq,delay,this.chorusLeft,0,this.output,0,config);this.createChorusNode(freq,delay+config.stereoDifference,this.chorusRight,1,this.output,1,config);freq+=config.oscillatorFrequencyVariation;delay+=config.delayVariation;}}// noinspection JSUnusedGlobalSymbols
/**
     * Disconnects and deletes the chorus effect.
     */delete(){super.delete();this.deleteNodes();}deleteNodes(){this.input.disconnect();for(const node of this.chorusLeft){node.delay.disconnect();node.oscillator.disconnect();node.oscillator.stop();node.oscillatorGain.disconnect();}for(const node of this.chorusRight){node.delay.disconnect();node.oscillator.disconnect();node.oscillator.stop();node.oscillatorGain.disconnect();}this.chorusLeft.length=0;this.chorusRight.length=0;}createChorusNode(freq,delay,list,input,output,outputNum,config){const context=output.context;const oscillator=context.createOscillator();oscillator.type="sine";oscillator.frequency.value=freq;const gainNode=context.createGain();gainNode.gain.value=config.oscillatorGain;const delayNode=context.createDelay();delayNode.delayTime.value=delay;oscillator.connect(gainNode);gainNode.connect(delayNode.delayTime);oscillator.start(context.currentTime/*+ delay*/);this.input.connect(delayNode,input);delayNode.connect(output,0,outputNum);list.push({oscillator,oscillatorGain:gainNode,delay:delayNode});}};// src/synthesizer/audio_effects/effects_config.ts
var DEFAULT_SYNTH_CONFIG={enableEventSystem:true,oneOutput:false,audioNodeCreators:void 0,initializeChorusProcessor:true,initializeReverbProcessor:true};// src/utils/other.ts
var consoleColors2=SpessaSynthCoreUtils.consoleColors;// src/synthesizer/audio_effects/rb_compressed.min.js
var rbCompressed=``;// src/synthesizer/audio_effects/compressed_reverb_decoder.ts
var binaryString=atob(rbCompressed);var binary=new Uint8Array(binaryString.length);for(let i=0;i<binaryString.length;i++){binary[i]=binaryString.charCodeAt(i);}var reverbBufferBinary=SpessaSynthCoreUtils.inflateSync(binary).buffer;// src/synthesizer/audio_effects/reverb.ts
var DEFAULT_REVERB_CONFIG={impulseResponse:void 0// Will load the integrated one
};var ReverbProcessor=class extends BasicEffectsProcessor{/**
     * Indicates that the reverb is ready.
     */isReady;conv;/**
     * Creates a new reverb processor.
     * @param context The context to use.
     * @param config The reverb configuration.
     */constructor(context,config=DEFAULT_REVERB_CONFIG){const fullConfig=fillWithDefaults2(config,DEFAULT_REVERB_CONFIG);const convolver=context.createConvolver();super(convolver,convolver);this.conv=convolver;const reverbBuffer=fullConfig.impulseResponse;if(reverbBuffer){convolver.buffer=reverbBuffer;this.isReady=new Promise(r=>r(reverbBuffer));}else{this.isReady=context.decodeAudioData(reverbBufferBinary.slice(0));void this.isReady.then(b=>{convolver.buffer=b;});}this._config=fullConfig;}_config;get config(){return this._config;}// noinspection JSUnusedGlobalSymbols
/**
     * Updates the reverb with a given config.
     * @param config The config to use.
     */update(config){const fullConfig=fillWithDefaults2(config,DEFAULT_REVERB_CONFIG);if(fullConfig.impulseResponse){this.conv.buffer=fullConfig.impulseResponse;}this._config=fullConfig;}};// src/synthesizer/basic/snapshot.ts
var LibSynthesizerSnapshot=class extends SynthesizerSnapshot{/**
     * Chorus configuration of this synthesizer.
     */chorusConfig;/**
     * Reverb configuration of this synthesizer.
     */reverbConfig;constructor(channelSnapshots,masterParameters,keyMappings,chorusConfig=DEFAULT_CHORUS_CONFIG,reverbConfig=DEFAULT_REVERB_CONFIG){super(channelSnapshots.map(c=>ChannelSnapshot.copyFrom(c)),masterParameters,keyMappings);this.reverbConfig={...reverbConfig};this.chorusConfig={...chorusConfig};}// noinspection JSUnusedGlobalSymbols
/**
     * Retrieves the SynthesizerSnapshot from the lib snapshot.
     */getCoreSnapshot(){return new SynthesizerSnapshot([...this.channelSnapshots],{...this.masterParameters},[...this.keyMappings]);}};// src/synthesizer/basic/basic_synthesizer.ts
var DEFAULT_SYNTH_METHOD_OPTIONS2={time:0};var BasicSynthesizer=class{/**
     * Allows managing the sound bank list.
     */soundBankManager=new SoundBankManager2(this);/**
     * Allows managing key modifications.
     */keyModifierManager=new WorkletKeyModifierManagerWrapper(this);/**
     * Allows setting up custom event listeners for the synthesizer.
     */eventHandler=new SynthEventHandler();/**
     * Synthesizer's parent AudioContext instance.
     */context;/**
     * Synth's current channel properties.
     */channelProperties=[];/**
     * The current preset list.
     */presetList=[];/**
     * INTERNAL USE ONLY!
     */sequencerCallbackFunction;/**
     * Resolves when the synthesizer is ready.
     */isReady;/**
     * Synthesizer's reverb processor.
     * Undefined if reverb is disabled.
     */reverbProcessor;/**
     * Synthesizer's chorus processor.
     * Undefined if chorus is disabled.
     */chorusProcessor;/**
     * INTERNAL USE ONLY!
     */post;worklet;/**
     * The new channels will have their audio sent to the modulated output by this constant.
     * what does that mean?
     * e.g., if outputsAmount is 16, then channel's 16 audio data will be sent to channel 0
     */_outputsAmount=16;/**
     * The current amount of MIDI channels the synthesizer has.
     */channelsAmount=this._outputsAmount;masterParameters={...DEFAULT_MASTER_PARAMETERS};// Resolve map, waiting for the worklet to confirm the operation
resolveMap=/* @__PURE__ */new Map();renderingProgressTracker=/* @__PURE__ */new Map();/**
     * Creates a new instance of a synthesizer.
     * @param worklet The AudioWorkletNode to use.
     * @param postFunction The internal post function.
     * @param config Optional configuration for the synthesizer.
     */constructor(worklet,postFunction,config){SpessaSynthCoreUtils.SpessaSynthInfo("%cInitializing SpessaSynth synthesizer...",consoleColors2.info);this.context=worklet.context;this.worklet=worklet;this.post=postFunction;this.isReady=new Promise(resolve=>this.awaitWorkerResponse("sf3Decoder",resolve));const synthConfig=fillWithDefaults2(config,DEFAULT_SYNTH_CONFIG);this.worklet.port.onmessage=e=>this.handleMessage(e.data);if(synthConfig.initializeReverbProcessor){this.reverbProcessor=new ReverbProcessor(this.context);this.isReady=Promise.all([this.isReady,this.reverbProcessor.isReady]);this.worklet.connect(this.reverbProcessor.input,0);}if(synthConfig.initializeChorusProcessor){this.chorusProcessor=new ChorusProcessor(this.context);this.worklet.connect(this.chorusProcessor.input,1);}for(let i=0;i<this.channelsAmount;i++){this.addNewChannelInternal(false);}this.channelProperties[DEFAULT_PERCUSSION].isDrum=true;this.eventHandler.addEvent("newChannel",`synth-new-channel-${Math.random()}`,()=>{this.channelsAmount++;});this.eventHandler.addEvent("presetListChange",`synth-preset-list-change-${Math.random()}`,e=>{this.presetList=[...e];});this.eventHandler.addEvent("masterParameterChange",`synth-master-parameter-change-${Math.random()}`,e=>{this.masterParameters[e.parameter]=e.value;});this.eventHandler.addEvent("channelPropertyChange",`synth-channel-property-change-${Math.random()}`,e=>{this.channelProperties[e.channel]=e.property;this._voicesAmount=this.channelProperties.reduce((sum,voices)=>sum+voices.voicesAmount,0);});}/**
     * Current voice amount
     */_voicesAmount=0;// noinspection JSUnusedGlobalSymbols
/**
     * The current number of voices playing.
     */get voicesAmount(){return this._voicesAmount;}/**
     * The audioContext's current time.
     */get currentTime(){return this.context.currentTime;}/**
     * Connects from a given node.
     * @param destinationNode The node to connect to.
     */connect(destinationNode){var _this$reverbProcessor,_this$chorusProcessor;(_this$reverbProcessor=this.reverbProcessor)===null||_this$reverbProcessor===void 0||_this$reverbProcessor.connect(destinationNode);(_this$chorusProcessor=this.chorusProcessor)===null||_this$chorusProcessor===void 0||_this$chorusProcessor.connect(destinationNode);for(let i=2;i<this.channelsAmount+2;i++){this.worklet.connect(destinationNode,i);}return destinationNode;}// noinspection JSUnusedGlobalSymbols
/**
     * Disconnects from a given node.
     * @param destinationNode The node to disconnect from.
     */disconnect(destinationNode){var _this$reverbProcessor3,_this$chorusProcessor3;if(!destinationNode){var _this$reverbProcessor2,_this$chorusProcessor2;(_this$reverbProcessor2=this.reverbProcessor)===null||_this$reverbProcessor2===void 0||_this$reverbProcessor2.disconnect();(_this$chorusProcessor2=this.chorusProcessor)===null||_this$chorusProcessor2===void 0||_this$chorusProcessor2.disconnect();this.worklet.disconnect();return void 0;}(_this$reverbProcessor3=this.reverbProcessor)===null||_this$reverbProcessor3===void 0||_this$reverbProcessor3.disconnect(destinationNode);(_this$chorusProcessor3=this.chorusProcessor)===null||_this$chorusProcessor3===void 0||_this$chorusProcessor3.disconnect(destinationNode);for(let i=2;i<this.channelsAmount+2;i++){this.worklet.disconnect(destinationNode,i);}return destinationNode;}// noinspection JSUnusedGlobalSymbols
/**
     * Sets the SpessaSynth's log level in the processor.
     * @param enableInfo Enable info (verbose)
     * @param enableWarning Enable warnings (unrecognized messages)
     * @param enableGroup Enable groups (to group a lot of logs)
     */setLogLevel(enableInfo,enableWarning,enableGroup){this.post({channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,type:"setLogLevel",data:{enableInfo,enableWarning,enableGroup}});}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a master parameter from the synthesizer.
     * @param type The parameter to get.
     * @returns The parameter value.
     */getMasterParameter(type){return this.masterParameters[type];}// noinspection JSUnusedGlobalSymbols
/**
     * Sets a master parameter to a given value.
     * @param type The parameter to set.
     * @param value The value to set.
     */setMasterParameter(type,value){this.masterParameters[type]=value;this.post({type:"setMasterParameter",channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,data:{type,data:value}});}// noinspection JSUnusedGlobalSymbols
/**
     * Gets a complete snapshot of the synthesizer, effects.
     */async getSnapshot(){return new Promise(resolve=>{this.awaitWorkerResponse("synthesizerSnapshot",s=>{var _this$chorusProcessor4,_this$reverbProcessor4;const snapshot=new LibSynthesizerSnapshot(s.channelSnapshots,s.masterParameters,s.keyMappings,(_this$chorusProcessor4=this.chorusProcessor)===null||_this$chorusProcessor4===void 0?void 0:_this$chorusProcessor4.config,(_this$reverbProcessor4=this.reverbProcessor)===null||_this$reverbProcessor4===void 0?void 0:_this$reverbProcessor4.config);resolve(snapshot);});this.post({type:"requestSynthesizerSnapshot",data:null,channelNumber:-1});});}// noinspection JSUnusedGlobalSymbols
/**
     * Adds a new channel to the synthesizer.
     */addNewChannel(){this.addNewChannelInternal(true);}/**
     * Sets custom vibrato for the channel.
     * @param channel The channel number.
     * @param value The vibrato parameters.
     */setVibrato(channel,value){this.post({channelNumber:channel,type:"setChannelVibrato",data:value});}/**
     * Connects the individual audio outputs to the given audio nodes. In the app, it's used by the renderer.
     * @param audioNodes Exactly 16 outputs.
     */connectIndividualOutputs(audioNodes){if(audioNodes.length!==this._outputsAmount){throw new Error(`input nodes amount differs from the system's outputs amount!
            Expected ${this._outputsAmount} got ${audioNodes.length}`);}for(let outputNumber=0;outputNumber<this._outputsAmount;outputNumber++){this.worklet.connect(audioNodes[outputNumber],outputNumber+2);}}/**
     * Disconnects the individual audio outputs to the given audio nodes. In the app, it's used by the renderer.
     * @param audioNodes Exactly 16 outputs.
     */disconnectIndividualOutputs(audioNodes){if(audioNodes.length!==this._outputsAmount){throw new Error(`input nodes amount differs from the system's outputs amount!
            Expected ${this._outputsAmount} got ${audioNodes.length}`);}for(let outputNumber=0;outputNumber<this._outputsAmount;outputNumber++){this.worklet.disconnect(audioNodes[outputNumber],outputNumber+2);}}// noinspection JSUnusedGlobalSymbols
/**
     * Disables the GS NRPN parameters like vibrato or drum key tuning.
     */disableGSNPRNParams(){this.setVibrato(ALL_CHANNELS_OR_DIFFERENT_ACTION,{depth:0,rate:-1,delay:0});}/**
     * Sends a raw MIDI message to the synthesizer.
     * @param message the midi message, each number is a byte.
     * @param channelOffset the channel offset of the message.
     * @param eventOptions additional options for this command.
     */sendMessage(message,channelOffset=0,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){this._sendInternal(message,channelOffset,false,eventOptions);}/**
     * Starts playing a note
     * @param channel Usually 0-15: the channel to play the note.
     * @param midiNote 0-127 the key number of the note.
     * @param velocity 0-127 the velocity of the note (generally controls loudness).
     * @param eventOptions Additional options for this command.
     */noteOn(channel,midiNote,velocity,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){const ch=channel%16;const offset=channel-ch;midiNote%=128;velocity%=128;this.sendMessage([midiMessageTypes.noteOn|ch,midiNote,velocity],offset,eventOptions);}/**
     * Stops playing a note.
     * @param channel Usually 0-15: the channel of the note.
     * @param midiNote {number} 0-127 the key number of the note.
     * @param force Instantly kills the note if true.
     * @param eventOptions Additional options for this command.
     */noteOff(channel,midiNote,force=false,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){midiNote%=128;const ch=channel%16;const offset=channel-ch;this._sendInternal([midiMessageTypes.noteOff|ch,midiNote],offset,force,eventOptions);}/**
     * Stops all notes.
     * @param force If the notes should immediately be stopped, defaults to false.
     */stopAll(force=false){this.post({channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,type:"stopAll",data:force?1:0});}/**
     * Changes the given controller
     * @param channel Usually 0-15: the channel to change the controller.
     * @param controllerNumber 0-127 the MIDI CC number.
     * @param controllerValue 0-127 the controller value.
     * @param force Forces the controller-change message, even if it's locked or gm system is set and the cc is bank select.
     * @param eventOptions Additional options for this command.
     */controllerChange(channel,controllerNumber,controllerValue,force=false,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){if(controllerNumber>127||controllerNumber<0){throw new Error(`Invalid controller number: ${controllerNumber}`);}controllerValue=Math.floor(controllerValue)%128;controllerNumber=Math.floor(controllerNumber)%128;const ch=channel%16;const offset=channel-ch;this._sendInternal([midiMessageTypes.controllerChange|ch,controllerNumber,controllerValue],offset,force,eventOptions);}// noinspection JSUnusedGlobalSymbols
/**
     * Resets all controllers (for every channel)
     */resetControllers(){this.post({channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,type:"ccReset",data:null});}/**
     * Causes the given midi channel to ignore controller messages for the given controller number.
     * @param channel Usually 0-15: the channel to lock.
     * @param controllerNumber 0-127 MIDI CC number.
     * @param isLocked True if locked, false if unlocked.
     * @remarks
     *  Controller number -1 locks the preset.
     */lockController(channel,controllerNumber,isLocked){this.post({channelNumber:channel,type:"lockController",data:{controllerNumber,isLocked}});}/**
     * Applies pressure to a given channel.
     * @param channel Usually 0-15: the channel to change the controller.
     * @param pressure 0-127: the pressure to apply.
     * @param eventOptions Additional options for this command.
     */channelPressure(channel,pressure,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){const ch=channel%16;const offset=channel-ch;pressure%=128;this.sendMessage([midiMessageTypes.channelPressure|ch,pressure],offset,eventOptions);}/**
     * Applies pressure to a given note.
     * @param channel Usually 0-15: the channel to change the controller.
     * @param midiNote 0-127: the MIDI note.
     * @param pressure 0-127: the pressure to apply.
     * @param eventOptions Additional options for this command.
     */polyPressure(channel,midiNote,pressure,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){const ch=channel%16;const offset=channel-ch;midiNote%=128;pressure%=128;this.sendMessage([midiMessageTypes.polyPressure|ch,midiNote,pressure],offset,eventOptions);}/**
     * Sets the pitch of the given channel.
     * @param channel Usually 0-15: the channel to change pitch.
     * @param value The bend of the MIDI pitch wheel message. 0 - 16384
     * @param eventOptions Additional options for this command.
     */pitchWheel(channel,value,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){const ch=channel%16;const offset=channel-ch;this.sendMessage([midiMessageTypes.pitchWheel|ch,value&127,value>>7],offset,eventOptions);}// noinspection JSUnusedGlobalSymbols
/**
     * Sets the channel's pitch wheel range, in semitones.
     * @param channel Usually 0-15: the channel to change.
     * @param range The bend range in semitones.
     */pitchWheelRange(channel,range){this.controllerChange(channel,midiControllers.registeredParameterMSB,0);this.controllerChange(channel,midiControllers.registeredParameterLSB,0);this.controllerChange(channel,midiControllers.dataEntryMSB,range);this.controllerChange(channel,midiControllers.registeredParameterMSB,127);this.controllerChange(channel,midiControllers.registeredParameterLSB,127);this.controllerChange(channel,midiControllers.dataEntryMSB,0);}/**
     * Changes the program for a given channel
     * @param channel Usually 0-15: the channel to change.
     * @param programNumber 0-127 the MIDI patch number.
     * defaults to false
     */programChange(channel,programNumber){const ch=channel%16;const offset=channel-ch;programNumber%=128;this.sendMessage([midiMessageTypes.programChange|ch,programNumber],offset);}// noinspection JSUnusedGlobalSymbols
/**
     * Transposes the channel by given number of semitones.
     * @param channel The channel number.
     * @param semitones The transposition of the channel, it can be a float.
     * @param force Defaults to false, if true transposes the channel even if it's a drum channel.
     */transposeChannel(channel,semitones,force=false){this.post({channelNumber:channel,type:"transposeChannel",data:{semitones,force}});}// noinspection JSUnusedGlobalSymbols
/**
     * Mutes or unmutes the given channel.
     * @param channel Usually 0-15: the channel to mute.
     * @param isMuted Indicates if the channel is muted.
     */muteChannel(channel,isMuted){this.post({channelNumber:channel,type:"muteChannel",data:isMuted});}/**
     * Sends a MIDI Sysex message to the synthesizer.
     * @param messageData The message's data, excluding the F0 byte, but including the F7 at the end.
     * @param channelOffset Channel offset for the system exclusive message, defaults to zero.
     * @param eventOptions Additional options for this command.
     */systemExclusive(messageData,channelOffset=0,eventOptions=DEFAULT_SYNTH_METHOD_OPTIONS2){this._sendInternal([midiMessageTypes.systemExclusive,...Array.from(messageData)],channelOffset,false,eventOptions);}// noinspection JSUnusedGlobalSymbols
/**
     * Tune MIDI keys of a given program using the MIDI Tuning Standard.
     * @param program  0 - 127 the MIDI program number to use.
     * @param tunings The keys and their tunings.
     * TargetPitch of -1 sets the tuning for this key to be tuned regularly.
     */tuneKeys(program,tunings){if(tunings.length>127){throw new Error("Too many tunings. Maximum allowed is 127.");}const systemExclusive=[127,// Real-time
16,// Device id
8,// MIDI Tuning
2,// Note change
program,// Tuning program number
tunings.length// Number of changes
];for(const tuning of tunings){systemExclusive.push(tuning.sourceKey);if(tuning.targetPitch===-1){systemExclusive.push(127,127,127);}else{const midiNote=Math.floor(tuning.targetPitch);const fraction=Math.floor((tuning.targetPitch-midiNote)/61e-6);systemExclusive.push(midiNote,// Frequency data byte 1
fraction>>7&127,// Frequency data byte 2
fraction&127// Frequency data byte 3
);}}systemExclusive.push(247);this.systemExclusive(systemExclusive);}// noinspection JSUnusedGlobalSymbols
/**
     * Toggles drums on a given channel.
     * @param channel The channel number.
     * @param isDrum If the channel should be drums.
     */setDrums(channel,isDrum){this.post({channelNumber:channel,type:"setDrums",data:isDrum});}// noinspection JSUnusedGlobalSymbols
/**
     * Yes please!
     */reverbateEverythingBecauseWhyNot(){for(let i=0;i<this.channelsAmount;i++){this.controllerChange(i,midiControllers.reverbDepth,127);this.lockController(i,midiControllers.reverbDepth,true);}return"That's the spirit!";}/**
     * INTERNAL USE ONLY!
     * @param type INTERNAL USE ONLY!
     * @param resolve INTERNAL USE ONLY!
     */awaitWorkerResponse(type,resolve){this.resolveMap.set(type,resolve);}assignProgressTracker(type,progressFunction){if(this.renderingProgressTracker.get(type)){throw new Error("Something is already being rendered!");}this.renderingProgressTracker.set(type,progressFunction);}revokeProgressTracker(type){this.renderingProgressTracker.delete(type);}_sendInternal(message,channelOffset,force=false,eventOptions){const options=fillWithDefaults2(eventOptions,DEFAULT_SYNTH_METHOD_OPTIONS2);this.post({type:"midiMessage",channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,data:{messageData:new Uint8Array(message),channelOffset,force,options}//[new Uint8Array(message), offset, force, opts]
});}/**
     * Handles the messages received from the worklet.
     */handleMessage(m){var _this$sequencerCallba,_this$renderingProgre;switch(m.type){case"eventCall":this.eventHandler.callEventInternal(m.data.type,m.data.data);break;case"sequencerReturn":(_this$sequencerCallba=this.sequencerCallbackFunction)===null||_this$sequencerCallba===void 0||_this$sequencerCallba.call(this,m.data);break;case"isFullyInitialized":this.workletResponds(m.data.type,m.data.data);break;case"soundBankError":SpessaSynthCoreUtils.SpessaSynthWarn(m.data);this.eventHandler.callEventInternal("soundBankError",m.data);break;case"renderingProgress":(_this$renderingProgre=this.renderingProgressTracker.get(m.data.type))===null||_this$renderingProgre===void 0||_this$renderingProgre(// @ts-expect-error I can't use generics with map
m.data.data);}}addNewChannelInternal(post){this.channelProperties.push({voicesAmount:0,pitchWheel:0,pitchWheelRange:0,isMuted:false,isDrum:this.channelsAmount%16===DEFAULT_PERCUSSION,transposition:0});if(!post){return;}this.post({channelNumber:0,type:"addNewChannel",data:null});}workletResponds(type,data){var _this$resolveMap$get;(_this$resolveMap$get=this.resolveMap.get(type))===null||_this$resolveMap$get===void 0||_this$resolveMap$get(data);this.resolveMap.delete(type);}};// src/synthesizer/worklet/worklet_processor_name.ts
var WORKLET_PROCESSOR_NAME="spessasynth-worklet-processor";// src/synthesizer/worklet/worklet_synthesizer.ts
var WorkletSynthesizer=class extends BasicSynthesizer{/**
     * Creates a new instance of an AudioWorklet-based synthesizer.
     * @param context The audio context.
     * @param config Optional configuration for the synthesizer.
     */constructor(context,config=DEFAULT_SYNTH_CONFIG){const synthConfig=fillWithDefaults2(config,DEFAULT_SYNTH_CONFIG);let outputChannelCount=Array(18).fill(2);let numberOfOutputs=18;if(synthConfig.oneOutput){outputChannelCount=[36];numberOfOutputs=1;}let worklet;try{var _synthConfig$audioNod;const workletConstructor=(synthConfig===null||synthConfig===void 0||(_synthConfig$audioNod=synthConfig.audioNodeCreators)===null||_synthConfig$audioNod===void 0?void 0:_synthConfig$audioNod.worklet)??((context2,name,options)=>{return new AudioWorkletNode(context2,name,options);});worklet=workletConstructor(context,WORKLET_PROCESSOR_NAME,{outputChannelCount,numberOfOutputs,processorOptions:{oneOutput:synthConfig.oneOutput,enableEventSystem:synthConfig.enableEventSystem}});}catch(e){console.error(e);throw new Error("Could not create the AudioWorkletNode. Did you forget to addModule()?");}super(worklet,(data,transfer=[])=>{worklet.port.postMessage(data,transfer);},synthConfig);}/**
     * Starts an offline audio render.
     * @param config The configuration to use.
     * @remarks
     * Call this method immediately after you've set up the synthesizer.
     * Do NOT call any other methods after initializing before this one.
     * Chromium seems to ignore worklet messages for OfflineAudioContext.
     */async startOfflineRender(config){this.post({type:"startOfflineRender",data:config,channelNumber:-1},config.soundBankList.map(b=>b.soundBankBuffer));await new Promise(r=>this.awaitWorkerResponse("startOfflineRender",r));}// noinspection JSUnusedGlobalSymbols
/**
     * Destroys the synthesizer instance.
     */destroy(){var _this$reverbProcessor5,_this$chorusProcessor5;(_this$reverbProcessor5=this.reverbProcessor)===null||_this$reverbProcessor5===void 0||_this$reverbProcessor5.disconnect();(_this$chorusProcessor5=this.chorusProcessor)===null||_this$chorusProcessor5===void 0||_this$chorusProcessor5.delete();this.post({channelNumber:0,type:"destroyWorklet",data:null});this.worklet.disconnect();delete this.worklet;delete this.reverbProcessor;delete this.chorusProcessor;}};// src/synthesizer/worker/playback_worklet.ts
var PLAYBACK_WORKLET_PROCESSOR_NAME=`spessasynth-playback-worklet-processor`;function getPlaybackWorkletURL(maxQueuedChunks){const PLAYBACK_WORKLET_CODE=`
const BLOCK_SIZE = 128;

const MAX_QUEUED = ${maxQueuedChunks};

/**
 * An AudioWorkletProcessor that plays back 18 separate streams of stereo audio: reverb, and chorus and 16 dry channels.
 */
class PlaybackProcessor extends AudioWorkletProcessor
{
    
    
    /** @type {Float32Array[]} */
    data = [];
    
    updateRequested = false;
    
    alive = true;
    
    /**
     *
     * @type {MessagePort}
     */
    sentPort;
    
    constructor()
    {
        super();
        
        /**
         * @param e {MessageEvent}
         */
        this.port.onmessage = (e) =>
        {
            if (e.ports.length)
            {
                const sentPort = e.ports[0];
                this.sentPort = sentPort;
                sentPort.onmessage = (e) =>
                {
                    if(e.data === null)
                    {
                        // the worklet is dead
                        this.alive = false;
                    }
                    this.data.push(e.data);
                    this.updateRequested = false;
                    // if we need more, request immediately
                    if (this.data.length < MAX_QUEUED)
                    {
                        this.sentPort.postMessage(null);
                    }
                };
                
            }
        };
    }
    
    // noinspection JSUnusedGlobalSymbols
    /**
     * @param _inputs {[Float32Array, Float32Array][]}
     * @param outputs {[Float32Array, Float32Array][]}
     * @returns {boolean}
     */
    process(_inputs, outputs)
    {
        const data = this.data.shift();
        if (!data)
        {
            return this.alive;
        }
        let offset = 0;
        // decode the data nicely
        for (let i = 0; i < 18; i++)
        {
            outputs[i][0].set(data.subarray(offset, offset + BLOCK_SIZE));
            offset += BLOCK_SIZE;
            outputs[i][1].set(data.subarray(offset, offset + BLOCK_SIZE));
            offset += BLOCK_SIZE;
        }
        
        // if it has already been requested, we need to wait
        if (!this.updateRequested)
        {
            this.sentPort.postMessage(null);
            this.updateRequested = true;
        }
        
        // keep it online
        return this.alive;
    }
}
registerProcessor("${PLAYBACK_WORKLET_PROCESSOR_NAME}", PlaybackProcessor);
    `;const blob=new Blob([PLAYBACK_WORKLET_CODE],{type:"application/javascript"});return URL.createObjectURL(blob);}// src/synthesizer/worker/render_audio_worker.ts
var DEFAULT_WORKER_RENDER_AUDIO_OPTIONS={extraTime:2,separateChannels:false,loopCount:0,progressCallback:void 0,preserveSynthParams:true,enableEffects:true};var RENDER_BLOCKS_PER_PROGRESS=64;var BLOCK_SIZE=128;function renderAudioWorker(sampleRate,options){const rendererSynth=new SpessaSynthProcessor3(sampleRate,{enableEventSystem:false});const rendererSeq=new SpessaSynthSequencer(rendererSynth);this.synthesizer.soundBankManager.soundBankList.forEach(entry=>rendererSynth.soundBankManager.addSoundBank(entry.soundBank,entry.id,entry.bankOffset));rendererSynth.soundBankManager.priorityOrder=this.synthesizer.soundBankManager.priorityOrder;this.stopAudioLoop();const parsedMid=this.sequencer.midiData;if(!parsedMid){throw new Error("No MIDI is loaded!");}const playbackRate=this.sequencer.playbackRate;const loopStartAbsolute=parsedMid.midiTicksToSeconds(parsedMid.loop.start)/playbackRate;const loopEndAbsolute=parsedMid.midiTicksToSeconds(parsedMid.loop.end)/playbackRate;const loopDuration=loopEndAbsolute-loopStartAbsolute;const duration=parsedMid.duration/playbackRate+options.extraTime+loopDuration*options.loopCount;const sampleDuration=sampleRate*duration;rendererSeq.loopCount=options.loopCount;if(options.preserveSynthParams){rendererSeq.playbackRate=this.sequencer.playbackRate;const snapshot=this.synthesizer.getSnapshot();rendererSynth.applySynthesizerSnapshot(snapshot);}rendererSeq.loadNewSongList([parsedMid]);rendererSeq.play();const progressCallback=progress=>{this.postProgress("renderAudio",progress);};const reverb=[new Float32Array(sampleDuration),new Float32Array(sampleDuration)];const chorus=[new Float32Array(sampleDuration),new Float32Array(sampleDuration)];const returnedChunks={reverb,chorus,dry:[]};const sampleDurationNoLastQuantum=sampleDuration-BLOCK_SIZE;if(options.separateChannels){const dry=[];for(let i=0;i<16;i++){const d=[new Float32Array(sampleDuration),new Float32Array(sampleDuration)];dry.push(d);returnedChunks.dry.push(d);}let index=0;while(true){for(let i=0;i<RENDER_BLOCKS_PER_PROGRESS;i++){if(index>=sampleDurationNoLastQuantum){rendererSeq.processTick();rendererSynth.renderAudioSplit(reverb,chorus,dry,index,sampleDuration-index);this.startAudioLoop();return returnedChunks;}rendererSeq.processTick();rendererSynth.renderAudioSplit(reverb,chorus,dry,index,BLOCK_SIZE);index+=BLOCK_SIZE;}progressCallback(index/sampleDuration);}}else{const dry=[new Float32Array(sampleDuration),new Float32Array(sampleDuration)];returnedChunks.dry.push(dry);let index=0;while(true){for(let i=0;i<RENDER_BLOCKS_PER_PROGRESS;i++){if(index>=sampleDurationNoLastQuantum){rendererSeq.processTick();rendererSynth.renderAudio(dry,reverb,chorus,index,sampleDuration-index);this.startAudioLoop();return returnedChunks;}rendererSeq.processTick();rendererSynth.renderAudio(dry,reverb,chorus,index,BLOCK_SIZE);index+=BLOCK_SIZE;}progressCallback(index/sampleDuration);}}}// src/synthesizer/worker/worker_synthesizer.ts
var DEFAULT_BANK_WRITE_OPTIONS={trim:true,bankID:"",writeEmbeddedSoundBank:true};var DEFAULT_SF2_WRITE_OPTIONS2={...DEFAULT_BANK_WRITE_OPTIONS,writeDefaultModulators:true,writeExtendedLimits:true,compress:false,compressionQuality:1,decompress:false};var DEFAULT_RMIDI_WRITE_OPTIONS2={...DEFAULT_BANK_WRITE_OPTIONS,bankOffset:0,correctBankOffset:true,metadata:{},format:"sf2",...DEFAULT_SF2_WRITE_OPTIONS2};var DEFAULT_DLS_WRITE_OPTIONS={...DEFAULT_BANK_WRITE_OPTIONS};var WorkerSynthesizer=class extends BasicSynthesizer{/**
     * Time offset for syncing with the synth
     * @private
     */timeOffset=0;/**
     * Creates a new instance of a Worker-based synthesizer.
     * @param context The audio context.
     * @param workerPostMessage The postMessage for the worker containing the synthesizer core.
     * @param config Optional configuration for the synthesizer.
     */constructor(context,workerPostMessage,config=DEFAULT_SYNTH_CONFIG){const synthConfig=fillWithDefaults2(config,DEFAULT_SYNTH_CONFIG);if(synthConfig.oneOutput){throw new Error("One output mode is not supported in the WorkerSynthesizer.");}let worklet;try{var _synthConfig$audioNod2;const workletConstructor=(synthConfig===null||synthConfig===void 0||(_synthConfig$audioNod2=synthConfig.audioNodeCreators)===null||_synthConfig$audioNod2===void 0?void 0:_synthConfig$audioNod2.worklet)??((context2,name,options)=>{return new AudioWorkletNode(context2,name,options);});worklet=workletConstructor(context,PLAYBACK_WORKLET_PROCESSOR_NAME,{outputChannelCount:Array(18).fill(2),numberOfOutputs:18,processorOptions:{oneOutput:synthConfig.oneOutput,enableEventSystem:synthConfig.enableEventSystem}});}catch(e){console.error(e);throw new Error("Could not create the AudioWorkletNode. Did you forget to registerPlaybackWorklet()?");}super(worklet,workerPostMessage,synthConfig);const messageChannel=new MessageChannel();const workerPort=messageChannel.port1;const workletPort=messageChannel.port2;this.worklet.port.postMessage(null,[workletPort]);workerPostMessage({initialTime:this.context.currentTime,sampleRate:this.context.sampleRate},[workerPort]);}get currentTime(){return this.context.currentTime+this.timeOffset;}/**
     * Registers an audio worklet for the WorkerSynthesizer.
     * @param context The context to register the worklet for.
     * @param maxQueueSize The maximum amount of 128-sample chunks to store in the worklet. Higher values result in less breakups but higher latency.
     */static async registerPlaybackWorklet(context,maxQueueSize=20){if(!(context!==null&&context!==void 0&&context.audioWorklet.addModule)){throw new Error("Audio worklet is not supported.");}return context.audioWorklet.addModule(getPlaybackWorkletURL(maxQueueSize));}/**
     * Handles a return message from the Worker.
     * @param e The event received from the Worker.
     */handleWorkerMessage(e){this.timeOffset=e.currentTime-this.context.currentTime;this.handleMessage(e);}/**
     * Writes a DLS file directly in the worker.
     * @param options Options for writing the file.
     * @returns The file array buffer and its corresponding name.
     */async writeDLS(options=DEFAULT_DLS_WRITE_OPTIONS){const writeOptions=fillWithDefaults2(options,DEFAULT_DLS_WRITE_OPTIONS);return new Promise(resolve=>{this.assignProgressTracker("workerSynthWriteFile",p=>{var _options$progressFunc2;void((_options$progressFunc2=options.progressFunction)===null||_options$progressFunc2===void 0?void 0:_options$progressFunc2.call(options,p));});const postOptions={...writeOptions,progressFunction:null};this.awaitWorkerResponse("workerSynthWriteFile",data=>resolve(data));this.post({type:"writeDLS",data:postOptions,channelNumber:-1});});}/**
     * Writes an SF2/SF3 file directly in the worker.
     * @param options Options for writing the file.
     * @returns The file array buffer and its corresponding name.
     */async writeSF2(options=DEFAULT_SF2_WRITE_OPTIONS2){const writeOptions=fillWithDefaults2(options,DEFAULT_SF2_WRITE_OPTIONS2);return new Promise(resolve=>{this.assignProgressTracker("workerSynthWriteFile",p=>{var _options$progressFunc3;void((_options$progressFunc3=options.progressFunction)===null||_options$progressFunc3===void 0?void 0:_options$progressFunc3.call(options,p));});const postOptions={...writeOptions,progressFunction:null};this.awaitWorkerResponse("workerSynthWriteFile",data=>resolve(data));this.post({type:"writeSF2",data:postOptions,channelNumber:-1});});}/**
     * Writes an embedded MIDI (RMIDI) file directly in the worker.
     * @param options Options for writing the file.
     * @returns The file array buffer.
     */async writeRMIDI(options=DEFAULT_RMIDI_WRITE_OPTIONS2){const writeOptions=fillWithDefaults2(options,DEFAULT_RMIDI_WRITE_OPTIONS2);return new Promise(resolve=>{this.assignProgressTracker("workerSynthWriteFile",p=>{var _options$progressFunc4;void((_options$progressFunc4=options.progressFunction)===null||_options$progressFunc4===void 0?void 0:_options$progressFunc4.call(options,p));});const postOptions={...writeOptions,progressFunction:null};this.awaitWorkerResponse("workerSynthWriteFile",data=>resolve(data.binary));this.post({type:"writeRMIDI",data:postOptions,channelNumber:-1});});}/**
     * Renders the current song in the connected sequencer to Float32 buffers.
     * @param sampleRate The sample rate to use, in Hertz.
     * @param renderOptions Extra options for the render.
     * @returns A single audioBuffer if separate channels were not enabled, otherwise 16.
     * @remarks
     * This stops the synthesizer.
     */async renderAudio(sampleRate,renderOptions=DEFAULT_WORKER_RENDER_AUDIO_OPTIONS){const options=fillWithDefaults2(renderOptions,DEFAULT_WORKER_RENDER_AUDIO_OPTIONS);if(options.enableEffects&&options.separateChannels){throw new Error("Effects cannot be applied to separate channels.");}return new Promise(resolve=>{this.awaitWorkerResponse("renderAudio",async data=>{var _this$chorusProcessor6,_this$reverbProcessor6;this.revokeProgressTracker("renderAudio");const bufferLength=data.reverb[0].length;const dryChannels=data.dry.map(dryPair=>{const buffer=new AudioBuffer({sampleRate,numberOfChannels:2,length:bufferLength});buffer.copyToChannel(dryPair[0],0);buffer.copyToChannel(dryPair[1],1);return buffer;});if(!options.enableEffects){resolve(dryChannels);return;}const reverb=new AudioBuffer({sampleRate,numberOfChannels:2,length:bufferLength});reverb.copyToChannel(data.reverb[0],0);reverb.copyToChannel(data.reverb[1],1);const chorus=new AudioBuffer({sampleRate,numberOfChannels:2,length:bufferLength});chorus.copyToChannel(data.chorus[0],0);chorus.copyToChannel(data.chorus[1],1);const dry=dryChannels[0];const offline=new OfflineAudioContext({sampleRate,numberOfChannels:2,length:bufferLength});const dryPlayer=offline.createBufferSource();dryPlayer.buffer=dry;dryPlayer.connect(offline.destination);dryPlayer.start();const chorusProcessor=new ChorusProcessor(offline,this===null||this===void 0||(_this$chorusProcessor6=this.chorusProcessor)===null||_this$chorusProcessor6===void 0?void 0:_this$chorusProcessor6.config);const chorusPlayer=offline.createBufferSource();chorusPlayer.buffer=chorus;chorusPlayer.connect(chorusProcessor.input);chorusProcessor.connect(offline.destination);chorusPlayer.start();const reverbProcessor=new ReverbProcessor(offline,(_this$reverbProcessor6=this.reverbProcessor)===null||_this$reverbProcessor6===void 0?void 0:_this$reverbProcessor6.config);await reverbProcessor.isReady;const reverbPlayer=offline.createBufferSource();reverbPlayer.connect(reverbProcessor.input);reverbProcessor.connect(offline.destination);reverbPlayer.buffer=reverb;reverbPlayer.start();const realDuration=bufferLength/sampleRate;const updateInterval=setInterval(()=>{var _options$progressCall;options===null||options===void 0||(_options$progressCall=options.progressCallback)===null||_options$progressCall===void 0||_options$progressCall.call(options,offline.currentTime/realDuration,1);});const rendered=await offline.startRendering();clearInterval(updateInterval);resolve([rendered]);return;});this.assignProgressTracker("renderAudio",p=>{var _options$progressCall2;(_options$progressCall2=options.progressCallback)===null||_options$progressCall2===void 0||_options$progressCall2.call(options,p,0);});const strippedOptions={...options,progressCallback:void 0};this.post({type:"renderAudio",data:{sampleRate,options:strippedOptions},channelNumber:-1});});}};// src/sequencer/midi_data.ts
var MIDIDataTrack=class extends MIDITrack{/**
     * THIS DATA WILL BE EMPTY! USE sequencer.getMIDI() TO GET THE ACTUAL DATA!
     */events=[];constructor(track){super();super.copyFrom(track);this.events=[];}};var MIDIData=class _MIDIData extends BasicMIDI2{tracks;/**
     * THIS DATA WILL BE EMPTY! USE sequencer.getMIDI() TO GET THE ACTUAL DATA!
     */embeddedSoundBank=void 0;/**
     * The byte length of the sound bank if it exists.
     */embeddedSoundBankSize;constructor(mid){super();super.copyMetadataFrom(mid);this.tracks=mid.tracks.map(t=>new MIDIDataTrack(t));if(mid instanceof _MIDIData){this.embeddedSoundBankSize=mid.embeddedSoundBankSize;}else{var _mid$embeddedSoundBan2;this.embeddedSoundBankSize=mid===null||mid===void 0||(_mid$embeddedSoundBan2=mid.embeddedSoundBank)===null||_mid$embeddedSoundBan2===void 0?void 0:_mid$embeddedSoundBan2.byteLength;}}};// src/sequencer/enums.ts
var songChangeType={shuffleOn:1,// No additional data
shuffleOff:2,// No additional data
index:3// SongIndex<number>
};// src/synthesizer/basic/basic_synthesizer_core.ts
var BasicSynthesizerCore=class{synthesizer;sequencer;post;/**
     * Indicates if the processor is alive.
     * @protected
     */alive=false;constructor(sampleRate,options,postMessage){this.synthesizer=new SpessaSynthProcessor3(sampleRate,options);this.sequencer=new SpessaSynthSequencer(this.synthesizer);this.post=postMessage;this.synthesizer.onEventCall=event=>{this.post({type:"eventCall",data:event,currentTime:this.synthesizer.currentSynthTime});};this.sequencer.onEventCall=e=>{if(e.type==="songListChange"){const songs=e.data.newSongList;const midiDatas=songs.map(s=>{return new MIDIData(s);});this.post({type:"sequencerReturn",data:{type:e.type,data:{newSongList:midiDatas}},currentTime:this.synthesizer.currentSynthTime});return;}this.post({type:"sequencerReturn",data:e,currentTime:this.synthesizer.currentSynthTime});};}postReady(type,data,transferable=[]){this.post({type:"isFullyInitialized",data:{type,data},currentTime:this.synthesizer.currentSynthTime},transferable);}postProgress(type,data){this.post({type:"renderingProgress",data:{type,data},currentTime:this.synthesizer.currentSynthTime});}destroy(){this.synthesizer.destroySynthProcessor();delete this.synthesizer;delete this.sequencer;}handleMessage(m){var _channelObject,_channelObject6,_channelObject7,_channelObject8;const channel=m.channelNumber;let channelObject=void 0;if(channel>=0){channelObject=this.synthesizer.midiChannels[channel];if(channelObject===void 0){SpessaSynthCoreUtils.SpessaSynthWarn(`Trying to access channel ${channel} which does not exist... ignoring!`);return;}}switch(m.type){case"midiMessage":this.synthesizer.processMessage(m.data.messageData,m.data.channelOffset,m.data.force,m.data.options);break;case"customCcChange":(_channelObject=channelObject)===null||_channelObject===void 0||_channelObject.setCustomController(m.data.ccNumber,m.data.ccValue);break;case"ccReset":if(channel===ALL_CHANNELS_OR_DIFFERENT_ACTION){this.synthesizer.resetAllControllers();}else{var _channelObject2;(_channelObject2=channelObject)===null||_channelObject2===void 0||_channelObject2.resetControllers();}break;case"setChannelVibrato":if(channel===ALL_CHANNELS_OR_DIFFERENT_ACTION){for(const chan of this.synthesizer.midiChannels){if(m.data.rate===ALL_CHANNELS_OR_DIFFERENT_ACTION){chan.disableAndLockGSNRPN();}else{chan.setVibrato(m.data.depth,m.data.rate,m.data.delay);}}}else if(m.data.rate===ALL_CHANNELS_OR_DIFFERENT_ACTION){var _channelObject3;(_channelObject3=channelObject)===null||_channelObject3===void 0||_channelObject3.disableAndLockGSNRPN();}else{var _channelObject4;(_channelObject4=channelObject)===null||_channelObject4===void 0||_channelObject4.setVibrato(m.data.depth,m.data.rate,m.data.delay);}break;case"stopAll":if(channel===ALL_CHANNELS_OR_DIFFERENT_ACTION){this.synthesizer.stopAllChannels(m.data===1);}else{var _channelObject5;(_channelObject5=channelObject)===null||_channelObject5===void 0||_channelObject5.stopAllNotes(m.data===1);}break;case"killNotes":this.synthesizer.killVoices(m.data);break;case"muteChannel":(_channelObject6=channelObject)===null||_channelObject6===void 0||_channelObject6.muteChannel(m.data);break;case"addNewChannel":this.synthesizer.createMIDIChannel();break;case"setMasterParameter":this.synthesizer.setMasterParameter(m.data.type,m.data.data);break;case"setDrums":(_channelObject7=channelObject)===null||_channelObject7===void 0||_channelObject7.setDrums(m.data);break;case"transposeChannel":(_channelObject8=channelObject)===null||_channelObject8===void 0||_channelObject8.transposeChannel(m.data.semitones,m.data.force);break;case"lockController":if(m.data.controllerNumber===ALL_CHANNELS_OR_DIFFERENT_ACTION){var _channelObject9;(_channelObject9=channelObject)===null||_channelObject9===void 0||_channelObject9.setPresetLock(m.data.isLocked);}else{if(!channelObject){return;}channelObject.lockedControllers[m.data.controllerNumber]=m.data.isLocked;}break;case"sequencerSpecific":{if(!this.sequencer){return;}const seq=this.sequencer;const seqMsg=m.data;switch(seqMsg.type){default:break;case"loadNewSongList":try{const sList=seqMsg.data;const songMap=sList.map(s=>{if("duration"in s){return BasicMIDI2.copyFrom(s);}return BasicMIDI2.fromArrayBuffer(s.binary,s.fileName);});seq.loadNewSongList(songMap);}catch(e){console.error(e);this.post({type:"sequencerReturn",data:{type:"midiError",data:e},currentTime:this.synthesizer.currentSynthTime});}break;case"pause":seq.pause();break;case"play":seq.play();break;case"setTime":seq.currentTime=seqMsg.data;break;case"changeMIDIMessageSending":seq.externalMIDIPlayback=seqMsg.data;break;case"setPlaybackRate":seq.playbackRate=seqMsg.data;break;case"setLoopCount":seq.loopCount=seqMsg.data;break;case"changeSong":switch(seqMsg.data.changeType){case songChangeType.shuffleOff:seq.shuffleMode=false;break;case songChangeType.shuffleOn:seq.shuffleMode=true;break;case songChangeType.index:if(seqMsg.data.data!==void 0){console.log("INDEX",seqMsg.data);seq.songIndex=seqMsg.data.data;}break;}break;case"getMIDI":if(!seq.midiData){throw new Error("No MIDI is loaded!");}this.post({type:"sequencerReturn",data:{type:"getMIDI",data:seq.midiData},currentTime:this.synthesizer.currentSynthTime});break;case"setSkipToFirstNote":seq.skipToFirstNoteOn=seqMsg.data;break;}break;}case"soundBankManager":try{const sfManager=this.synthesizer.soundBankManager;const sfManMsg=m.data;let font;switch(sfManMsg.type){case"addSoundBank":font=SoundBankLoader.fromArrayBuffer(sfManMsg.data.soundBankBuffer);sfManager.addSoundBank(font,sfManMsg.data.id,sfManMsg.data.bankOffset);this.postReady("soundBankManager",null);break;case"deleteSoundBank":sfManager.deleteSoundBank(sfManMsg.data);this.postReady("soundBankManager",null);break;case"rearrangeSoundBanks":sfManager.priorityOrder=sfManMsg.data;this.postReady("soundBankManager",null);}}catch(e){this.post({type:"soundBankError",data:e,currentTime:this.synthesizer.currentSynthTime});}break;case"keyModifierManager":{const kmMsg=m.data;const man=this.synthesizer.keyModifierManager;switch(kmMsg.type){default:return;case"addMapping":man.addMapping(kmMsg.data.channel,kmMsg.data.midiNote,kmMsg.data.mapping);break;case"clearMappings":man.clearMappings();break;case"deleteMapping":man.deleteMapping(kmMsg.data.channel,kmMsg.data.midiNote);}break;}case"requestSynthesizerSnapshot":{const snapshot=SynthesizerSnapshot.create(this.synthesizer);this.postReady("synthesizerSnapshot",snapshot);break;}case"setLogLevel":SpessaSynthLogging(m.data.enableInfo,m.data.enableWarning,m.data.enableGroup);break;case"destroyWorklet":this.alive=false;this.synthesizer.destroySynthProcessor();this.destroy();break;default:SpessaSynthCoreUtils.SpessaSynthWarn("Unrecognized event!",m);break;}}};// src/synthesizer/worker/write_sf_worker.ts
async function writeSF2Worker(opts){let sf=this.getBank(opts);if(opts.compress&&!this.compressionFunction){const e=new Error(`Compression enabled but no compression has been provided to WorkerSynthesizerCore.`);this.post({type:"soundBankError",data:e,currentTime:this.synthesizer.currentSynthTime});throw e;}if(opts.trim){if(!this.sequencer.midiData){throw new Error("Sound bank MIDI trimming is enabled but no MIDI is loaded!");}const sfCopy=BasicSoundBank.copyFrom(sf);sfCopy.trimSoundBank(this.sequencer.midiData);sf=sfCopy;}let compressionFunction;if(this.compressionFunction!==void 0){compressionFunction=(audioData,sampleRate)=>this.compressionFunction(audioData,sampleRate,opts.compressionQuality);}const b=await sf.writeSF2({...opts,progressFunction:(sampleName,sampleIndex,sampleCount)=>{this.postProgress("workerSynthWriteFile",{sampleCount,sampleIndex,sampleName});return new Promise(r=>r());},compressionFunction});return{binary:b,bank:sf};}async function writeDLSWorker(opts){let sf=this.getBank(opts);if(opts.trim){if(!this.sequencer.midiData){throw new Error("Sound bank MIDI trimming is enabled but no MIDI is loaded!");}const sfCopy=BasicSoundBank.copyFrom(sf);sfCopy.trimSoundBank(this.sequencer.midiData);sf=sfCopy;}const b=await sf.writeDLS({...opts,progressFunction:(sampleName,sampleIndex,sampleCount)=>{this.postProgress("workerSynthWriteFile",{sampleCount,sampleIndex,sampleName});return new Promise(r=>r());}});return{binary:b,bank:sf};}// src/synthesizer/worker/write_rmi_worker.ts
async function writeRMIDIWorker(opts){if(!this.sequencer.midiData){throw new Error("No MIDI is loaded!");}let sf;let sfBin;if(opts.format==="sf2"){const bin=await writeSF2Worker.call(this,opts);sfBin=bin.binary;sf=bin.bank;}else{const bin=await writeDLSWorker.call(this,opts);sfBin=bin.binary;sf=bin.bank;}const mid=BasicMIDI2.copyFrom(this.sequencer.midiData);return mid.writeRMIDI(sfBin,{soundBank:sf,...opts});}// src/synthesizer/worker/worker_synthesizer_core.ts
var BLOCK_SIZE2=128;var WorkerSynthesizerCore=class extends BasicSynthesizerCore{/**
     * The message port to the playback audio worklet.
     */workletMessagePort;compressionFunction;/**
     * Creates a new worker synthesizer core: the synthesizer that runs in the worker.
     * Most parameters here are provided with the first message that is posted to the worker by the WorkerSynthesizer.
     * @param synthesizerConfiguration The data from the first message sent from WorkerSynthesizer.
     * Listen for the first event and use its data to initialize this class.
     * @param workletMessagePort The first port from the first message sent from WorkerSynthesizer.
     * @param mainThreadCallback postMessage function or similar.
     * @param compressionFunction Optional function for compressing SF3 banks.
     */constructor(synthesizerConfiguration,workletMessagePort,mainThreadCallback,compressionFunction){super(synthesizerConfiguration.sampleRate,{enableEventSystem:true,enableEffects:true,initialTime:synthesizerConfiguration.initialTime},mainThreadCallback);this.workletMessagePort=workletMessagePort;this.workletMessagePort.onmessage=this.renderAndSendChunk.bind(this);this.compressionFunction=compressionFunction;void this.synthesizer.processorInitialized.then(()=>{this.postReady("sf3Decoder",null);this.startAudioLoop();});}/**
     * Handles a message received from the main thread.
     * @param m The message received.
     */handleMessage(m){switch(m.type){case"renderAudio":const rendered=renderAudioWorker.call(this,m.data.sampleRate,m.data.options);const transferable=[];rendered.reverb.forEach(r=>transferable.push(r.buffer));rendered.chorus.forEach(c=>transferable.push(c.buffer));rendered.dry.forEach(d=>transferable.push(...d.map(c=>c.buffer)));this.postReady("renderAudio",rendered,transferable);break;case"writeRMIDI":this.stopAudioLoop();void writeRMIDIWorker.call(this,m.data).then(data=>{this.postReady("workerSynthWriteFile",{binary:data,fileName:""},[data]);this.startAudioLoop();});break;case"writeSF2":this.stopAudioLoop();void writeSF2Worker.call(this,m.data).then(data=>{this.postReady("workerSynthWriteFile",{binary:data.binary,fileName:data.bank.soundBankInfo.name+(data.bank.soundBankInfo.version.major===3?".sf3":".sf2")},[data.binary]);this.startAudioLoop();});break;case"writeDLS":this.stopAudioLoop();void writeDLSWorker.call(this,m.data).then(data=>{this.postReady("workerSynthWriteFile",{binary:data.binary,fileName:data.bank.soundBankInfo.name+".dls"},[data.binary]);this.startAudioLoop();});break;default:super.handleMessage(m);}}getBank(opts){var _this$sequencer$midiD,_this$synthesizer$sou;let sf;if(opts.writeEmbeddedSoundBank&&(_this$sequencer$midiD=this.sequencer.midiData)!==null&&_this$sequencer$midiD!==void 0&&_this$sequencer$midiD.embeddedSoundBank){sf=SoundBankLoader.fromArrayBuffer(this.sequencer.midiData.embeddedSoundBank);}else sf=(_this$synthesizer$sou=this.synthesizer.soundBankManager.soundBankList.find(b=>b.id===opts.bankID))===null||_this$synthesizer$sou===void 0?void 0:_this$synthesizer$sou.soundBank;if(!sf){const e=new Error(`${opts.bankID} does not exist in the sound bank list!`);this.post({type:"soundBankError",data:e,currentTime:this.synthesizer.currentSynthTime});throw e;}return sf;}stopAudioLoop(){this.synthesizer.stopAllChannels(true);this.sequencer.pause();this.alive=false;}startAudioLoop(){this.alive=true;this.renderAndSendChunk();}destroy(){this.workletMessagePort.postMessage(null);this.stopAudioLoop();super.destroy();}renderAndSendChunk(){if(!this.alive){return;}const byteStep=BLOCK_SIZE2*Float32Array.BYTES_PER_ELEMENT;const data=new Float32Array(BLOCK_SIZE2*36);let byteOffset=0;const revR=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);byteOffset+=byteStep;const revL=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);const rev=[revL,revR];byteOffset+=byteStep;const chrL=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);byteOffset+=byteStep;const chrR=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);const chr=[chrL,chrR];const dry=[];for(let i=0;i<16;i++){byteOffset+=byteStep;const dryL=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);byteOffset+=byteStep;const dryR=new Float32Array(data.buffer,byteOffset,BLOCK_SIZE2);dry.push([dryL,dryR]);}this.sequencer.processTick();this.synthesizer.renderAudioSplit(rev,chr,dry);this.workletMessagePort.postMessage(data,[data.buffer]);}};// src/sequencer/default_sequencer_options.ts
var DEFAULT_SEQUENCER_OPTIONS={skipToFirstNoteOn:true,initialPlaybackRate:1};// src/sequencer/seq_event_handler.ts
var SeqEventHandler=class{/**
     * The time delay before an event is called.
     * Set to 0 to disable it.
     */timeDelay=0;events={songChange:/* @__PURE__ */new Map(),songEnded:/* @__PURE__ */new Map(),metaEvent:/* @__PURE__ */new Map(),timeChange:/* @__PURE__ */new Map(),midiError:/* @__PURE__ */new Map(),textEvent:/* @__PURE__ */new Map()};// noinspection JSUnusedGlobalSymbols
/**
     * Adds a new event listener.
     * @param event The event to listen to.
     * @param id The unique identifier for the event. It can be used to overwrite existing callback with the same ID.
     * @param callback The callback for the event.
     */addEvent(event,id,callback){this.events[event].set(id,callback);}// noinspection JSUnusedGlobalSymbols
/**
     * Removes an event listener
     * @param name The event to remove a listener from.
     * @param id The unique identifier for the event to remove.
     */removeEvent(name,id){this.events[name].delete(id);}/**
     * Calls the given event.
     * Internal use only.
     */callEventInternal(name,eventData){const eventList=this.events[name];const callback=()=>{eventList.forEach(callback2=>{try{callback2(eventData);}catch(e){console.error(`Error while executing a sequencer event callback for ${name}:`,e);}});};if(this.timeDelay>0){setTimeout(callback.bind(this),this.timeDelay*1e3);}else{callback();}}};// src/sequencer/sequencer.ts
var Sequencer=class{/**
     * The current MIDI data, with the exclusion of the embedded sound bank and event data.
     */midiData;/**
     * The current MIDI data for all songs, like the midiData property.
     */songListData=[];/**
     * Allows setting up custom event listeners for the sequencer.
     */eventHandler=new SeqEventHandler();/**
     * Indicates whether the sequencer has finished playing a sequence.
     */isFinished=false;/**
     * The synthesizer attached to this sequencer.
     */synth;/**
     * The MIDI port to play to.
     */midiOut;isLoading=false;/**
     * Indicates if the sequencer is paused.
     * Paused if a number, undefined if playing.
     */pausedTime=0;getMIDICallback=void 0;highResTimeOffset=0;/**
     * Absolute playback startTime, bases on the synth's time.
     */absoluteStartTime;/**
     * Creates a new MIDI sequencer for playing back MIDI files.
     * @param synth synth to send events to.
     * @param options the sequencer's options.
     */constructor(synth,options=DEFAULT_SEQUENCER_OPTIONS){this.synth=synth;this.absoluteStartTime=this.synth.currentTime;this.synth.sequencerCallbackFunction=this.handleMessage.bind(this);this._skipToFirstNoteOn=(options===null||options===void 0?void 0:options.skipToFirstNoteOn)??true;if((options===null||options===void 0?void 0:options.initialPlaybackRate)!==1){this.playbackRate=(options===null||options===void 0?void 0:options.initialPlaybackRate)??1;}if(!this._skipToFirstNoteOn){this.sendMessage("setSkipToFirstNote",false);}window.addEventListener("beforeunload",this.resetMIDIOutput.bind(this));}_songIndex=0;/**
     * The current song number in the playlist.
     */get songIndex(){return this._songIndex;}/**
     * The current song number in the playlist.
     */set songIndex(value){const clamped=Math.max(0,value%this._songsAmount);if(clamped===this._songIndex){return;}this.isLoading=true;this.midiData=void 0;this.sendMessage("changeSong",{changeType:songChangeType.index,data:clamped});}_currentTempo=120;/**
     * Current song's tempo in BPM.
     */get currentTempo(){return this._currentTempo;}/**
     * The current sequence's length, in seconds.
     */get duration(){var _this$midiData;return((_this$midiData=this.midiData)===null||_this$midiData===void 0?void 0:_this$midiData.duration)??0;}_songsAmount=0;// The amount of songs in the list.
get songsAmount(){return this._songsAmount;}_skipToFirstNoteOn;/**
     * Indicates if the sequencer should skip to first note on.
     */get skipToFirstNoteOn(){return this._skipToFirstNoteOn;}/**
     * Indicates if the sequencer should skip to first note on.
     */set skipToFirstNoteOn(val){this._skipToFirstNoteOn=val;this.sendMessage("setSkipToFirstNote",this._skipToFirstNoteOn);}/**
     * Internal loop count marker (-1 is infinite).
     */_loopCount=-1;/**
     * The current remaining number of loops. -1 means infinite looping.
     */get loopCount(){return this._loopCount;}/**
     * The current remaining number of loops. -1 means infinite looping.
     */set loopCount(val){this._loopCount=val;this.sendMessage("setLoopCount",val);}/**
     * Controls the playback's rate.
     */_playbackRate=1;/**
     * Controls the playback's rate.
     */get playbackRate(){return this._playbackRate;}/**
     * Controls the playback's rate.
     */set playbackRate(value){const t=this.currentTime;this.sendMessage("setPlaybackRate",value);this.highResTimeOffset*=value/this._playbackRate;this._playbackRate=value;this.recalculateStartTime(t);}_shuffleSongs=false;/**
     * Indicates if the song order is random.
     */get shuffleSongs(){return this._shuffleSongs;}/**
     * Indicates if the song order is random.
     */set shuffleSongs(value){this._shuffleSongs=value;if(value){this.sendMessage("changeSong",{changeType:songChangeType.shuffleOn});}else{this.sendMessage("changeSong",{changeType:songChangeType.shuffleOff});}}/**
     * Current playback time, in seconds.
     */get currentTime(){if(this.isLoading){return 0;}if(this.pausedTime!==void 0){return this.pausedTime;}return(this.synth.currentTime-this.absoluteStartTime)*this._playbackRate;}/**
     * Current playback time, in seconds.
     */set currentTime(time){this.sendMessage("setTime",time);}/**
     * A smoothed version of currentTime.
     * Use for visualization as it's not affected by the audioContext stutter.
     */get currentHighResolutionTime(){if(this.pausedTime!==void 0){return this.pausedTime;}const highResTimeOffset=this.highResTimeOffset;const absoluteStartTime=this.absoluteStartTime;const performanceElapsedTime=(performance.now()/1e3-absoluteStartTime)*this._playbackRate;let currentPerformanceTime=highResTimeOffset+performanceElapsedTime;const currentAudioTime=this.currentTime;const smoothingFactor=0.01*this._playbackRate;const timeDifference=currentAudioTime-currentPerformanceTime;this.highResTimeOffset+=timeDifference*smoothingFactor;currentPerformanceTime=this.highResTimeOffset+performanceElapsedTime;return currentPerformanceTime;}/**
     * True if paused, false if playing or stopped.
     */get paused(){return this.pausedTime!==void 0;}/**
     * Gets the current MIDI File.
     */async getMIDI(){return new Promise(resolve=>{this.getMIDICallback=resolve;this.sendMessage("getMIDI",null);});}/**
     * Loads a new song list.
     * @param midiBuffers The MIDI files to play.
     */loadNewSongList(midiBuffers){this.isLoading=true;this.midiData=void 0;this.sendMessage("loadNewSongList",midiBuffers);this._songIndex=0;this._songsAmount=midiBuffers.length;}/**
     * Connects a given output to the sequencer.
     * @param output The output to connect. Pass undefined to use the connected synthesizer.
     */connectMIDIOutput(output){this.resetMIDIOutput();this.midiOut=output;this.sendMessage("changeMIDIMessageSending",output!==void 0);this.currentTime-=0.1;}/**
     * Pauses the playback.
     */pause(){if(this.paused){return;}this.pausedTime=this.currentTime;this.sendMessage("pause",null);}/**
     * Starts or resumes the playback.
     */play(){this.recalculateStartTime(this.pausedTime??0);this.pausedTime=void 0;this.isFinished=false;this.sendMessage("play",null);}handleMessage(m){switch(m.type){case"midiMessage":const midiEventData=m.data.message;if(this.midiOut){if(midiEventData[0]>=128){this.midiOut.send(midiEventData);return;}}break;case"songChange":this._songIndex=m.data.songIndex;const songChangeData=this.songListData[this._songIndex];this.midiData=songChangeData;this.isLoading=false;this.absoluteStartTime=0;this.callEventInternal("songChange",songChangeData);break;case"timeChange":const time=m.data.newTime;this.recalculateStartTime(time);this.callEventInternal("timeChange",time);break;case"pause":this.pausedTime=this.currentTime;this.isFinished=m.data.isFinished;if(this.isFinished){this.callEventInternal("songEnded",null);}break;case"midiError":this.callEventInternal("midiError",m.data);throw new Error(`MIDI parsing error:  ${m.data}`);case"getMIDI":if(this.getMIDICallback){this.getMIDICallback(BasicMIDI2.copyFrom(m.data));}break;case"metaEvent":const event=m.data.event;switch(event.statusByte){case midiMessageTypes.text:case midiMessageTypes.lyric:case midiMessageTypes.copyright:case midiMessageTypes.trackName:case midiMessageTypes.marker:case midiMessageTypes.cuePoint:case midiMessageTypes.instrumentName:case midiMessageTypes.programName:if(!this.midiData){break;}let lyricsIndex=-1;if(event.statusByte===midiMessageTypes.lyric){lyricsIndex=Math.min(this.midiData.lyrics.findIndex(l=>l.ticks===event.ticks),this.midiData.lyrics.length-1);}if(this.midiData.isKaraokeFile&&(event.statusByte===midiMessageTypes.text||event.statusByte===midiMessageTypes.lyric)){lyricsIndex=Math.min(this.midiData.lyrics.findIndex(l=>l.ticks===event.ticks),this.midiData.lyrics.length);}this.callEventInternal("textEvent",{event,lyricsIndex});break;}this.callEventInternal("metaEvent",{event:m.data.event,trackNumber:m.data.trackIndex});break;case"loopCountChange":this._loopCount=m.data.newCount;if(this._loopCount===0){}break;case"songListChange":this.songListData=m.data.newSongList.map(m2=>new MIDIData(m2));this.midiData=this.songListData[this._songIndex];break;default:break;}}callEventInternal(type,data){this.eventHandler.callEventInternal(type,data);}resetMIDIOutput(){if(!this.midiOut){return;}for(let i=0;i<16;i++){this.midiOut.send([midiMessageTypes.controllerChange|i,120,0]);this.midiOut.send([midiMessageTypes.controllerChange|i,123,0]);}this.midiOut.send([midiMessageTypes.reset]);}recalculateStartTime(time){this.absoluteStartTime=this.synth.currentTime-time/this._playbackRate;this.highResTimeOffset=(this.synth.currentTime-performance.now()/1e3)*this._playbackRate;if(this.paused){this.pausedTime=time;}}sendMessage(messageType,messageData){this.synth.post({channelNumber:ALL_CHANNELS_OR_DIFFERENT_ACTION,type:"sequencerSpecific",data:{type:messageType,data:messageData}});}};// src/utils/buffer_to_wav.ts
function audioBufferToWav(audioBuffer,options){const channels=[];const channelOffset=(options===null||options===void 0?void 0:options.channelOffset)??0;const channelCount=(options===null||options===void 0?void 0:options.channelCount)??audioBuffer.numberOfChannels;for(let i=channelOffset;i<audioBuffer.numberOfChannels;i++){channels.push(audioBuffer.getChannelData(i));if(channels.length>=channelCount){break;}}return new Blob([audioToWav(channels,audioBuffer.sampleRate,options)],{type:"audio/wav"});}// src/external_midi/midi_handler.ts
var LibMIDIPort=class{port;constructor(port){this.port=port;}// noinspection JSUnusedGlobalSymbols
/**
     *
     */get id(){return this.port.id;}// noinspection JSUnusedGlobalSymbols
/**
     *
     */get name(){return this.port.name;}// noinspection JSUnusedGlobalSymbols
/**
     *
     */get manufacturer(){return this.port.manufacturer;}// noinspection JSUnusedGlobalSymbols
/**
     *
     */get version(){return this.port.version;}};var LibMIDIInput=class extends LibMIDIPort{connectedSynths=/* @__PURE__ */new Set();constructor(input){super(input);input.onmidimessage=e=>this.connectedSynths.forEach(s=>{if(e.data)s.sendMessage(e.data);});}// noinspection JSUnusedGlobalSymbols
/**
     * Connects the input to a given synth, listening for all incoming events.
     * @param synth The synth to connect to.
     */connect(synth){this.connectedSynths.add(synth);}// noinspection JSUnusedGlobalSymbols
/**
     * Disconnects the input from a given synth.
     * @param synth The synth to disconnect from.
     */disconnect(synth){this.connectedSynths.delete(synth);}};var LibMIDIOutput=class extends LibMIDIPort{port;constructor(output){super(output);this.port=output;}// noinspection JSUnusedGlobalSymbols
/**
     * Connects a given sequencer to the output, playing back the MIDI file to it.
     * @param seq The sequencer to connect.
     */connect(seq){seq.connectMIDIOutput(this.port);}// noinspection JSUnusedGlobalSymbols
/**
     * Disconnects sequencer from the output, making it play to the attached Synthesizer instead.
     * @param seq The sequencer to disconnect.
     */disconnect(seq){seq.connectMIDIOutput(void 0);}};var MIDIDeviceHandler=class _MIDIDeviceHandler{/**
     * The available MIDI inputs. ID maps to the input.
     */inputs=/* @__PURE__ */new Map();/**
     * The available MIDI outputs. ID maps to the output.
     */outputs=/* @__PURE__ */new Map();constructor(access){access.inputs.forEach((value,key)=>{this.inputs.set(key,new LibMIDIInput(value));});access.outputs.forEach((value,key)=>{this.outputs.set(key,new LibMIDIOutput(value));});}/**
     * Attempts to initialize the MIDI Device Handler.
     * @returns The handler.
     * @throws An error if the MIDI Devices fail to initialize.
     */static async createMIDIDeviceHandler(){if(navigator.requestMIDIAccess){try{const response=await navigator.requestMIDIAccess({sysex:true,software:true});SpessaSynthCoreUtils.SpessaSynthInfo("%cMIDI handler created!",consoleColors2.recognized);return new _MIDIDeviceHandler(response);}catch(e){SpessaSynthCoreUtils.SpessaSynthWarn(`Could not get MIDI Devices:`,e);throw e;}}else{SpessaSynthCoreUtils.SpessaSynthWarn("Web MIDI API is not supported.",consoleColors2.unrecognized);throw new Error("Web MIDI API is not supported.");}}};// src/external_midi/web_midi_link.ts
var WebMIDILinkHandler=class{/**
     * Initializes support for Web MIDI Link (https://www.g200kg.com/en/docs/webmidilink/)
     * @param synth The synthesizer to enable support with.
     */constructor(synth){window.addEventListener("message",msg=>{if(typeof msg.data!=="string"){return;}const data=msg.data.split(",");if(data[0]!=="midi"){return;}data.shift();const midiData=data.map(byte=>parseInt(byte,16));synth.sendMessage(midiData);});SpessaSynthCoreUtils.SpessaSynthInfo("%cWeb MIDI Link handler created!",consoleColors2.recognized);}};return __toCommonJS(index_exports);})();

//# sourceMappingURL=spessasynth_lib.compat.js.map